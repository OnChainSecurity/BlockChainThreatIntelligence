{
    "threat_intelligence": {
        "url": "https://medium.com/enkronos/smart-contracts-and-ethereum-2-0-the-most-detailed-explanation-ever-760bb4292517",
        "timestamp": "2022-08-05 00:00:00",
        "original_content": "Smart Contracts and Ethereum 2.0: The Most Detailed Explanation Ever\nGianluca Busato\nEnkronos\nGianluca Busato\n\n\u00b7\nFollow\n\nPublished in\nEnkronos\n\n\u00b7\n10 min read\n\u00b7\nAug 5, 2022\n150\n\n\n\n\n\n\n\nSmart contracts are electronic contracts based on a computer program that automate business processes in a legally secure manner, including between partner companies. Smart contracts are built on blockchain technology and leverage the advantages of this technology, such as transparency, forgery protection and availability.\n\nSmart contracts are comparable to conventional contracts, such as those concluded when buying a car or accepting a job. Smart contracts are frequently used in supply chains to control the movement of goods between partner companies and to carry out automatic orders and thus automatic payments.\n\nSmart contracts are also used on the Internet of Things (IoT) to process automatic transactions from end devices. In the IoT, various devices are interconnected via the Internet. These can be vehicles, appliances, surveillance cameras, sensors and other machines that communicate and exchange data with each other. Smart contracts can also be used to manage the exchange of data. This enables automated purchase contracts and settlements with smart contracts and the management of IoT devices, including transactions.\n\n\nSmart contracts are, simply put, computer programs. They cost less money and work more efficiently than manual processes and contracts in the enterprise, for example, to trigger orders and monitor the movement of goods. Blockchains often use decentralized apps (dApps), which do not connect to a server service but run-on participants\u2019 nodes in the blockchain network.\n\nSmart Contracts and dApps - Enkronos\ndApps are apps that work with and run on blockchains, such as smart contracts. They play an important role in the blockchain world, including when it comes to building blockchain applications based on Ethereum.\n\nHuman error sources are almost eliminated when using dApps and smart contracts. Nevertheless, there is a human risk, because the automated contracts are only as good as the developers and their code.\n\nCurrently, the most well-known blockchain platform that offers the development of Turing-complete smart contracts is Ethereum. In addition to Ethereum, numerous other platforms such as Cardano, Tezos or, in the future, IOTA also offer smart contracts. Companies that instead rely on their own blockchains often use Hyperledger as a basis.\n\nWhat are Smart Contracts - the definition\nSmart Contracts are self-executing contracts (computer programs with a specific function). Here, the terms of the agreement between buyer and seller are written directly into lines of code.\n\nThey are decentralized applications that work with blockchain or distributed ledger technology. The code of smart contracts and the agreements they contain exist across a distributed, decentralized blockchain network.\n\nSmart contracts enable the execution of trusted transactions and agreements between different, pseudo-anonymous parties. Here, there is no need for central authorities of a legal system or an external enforcement mechanism.\n\nSmart contracts make all transactions traceable, transparent, and irreversible. There is no central authority, but the network and its participants verify the transactions based on the smart contracts.\n\nHow a smart contracts work\nSmart Contracts were first described in 1993 by computer scientist Nick Szabo, a cryptographer. He realized that smart contracts can be operated within a blockchain and can greatly simplify business transactions between companies, regardless of the industry or department.\n\nContracts are agreements between multiple parties that contain legally binding expressions of intent in written form. Conventional non-digital contracts are formulated in writing and, in addition to information about the contracting parties, contain information about the respective declaration of intent by the corresponding party, which must be executed to achieve the common, contractual goal. Here, conventional contracts are initially no different from smart contracts.\n\nAs a game changer: smart contracts | Enkronos\nTransferred to a simple example, a purchase contract for a car contains information about the car dealer and the buyer, for example Max Mustermann.\n\nFurthermore, the contract in this example must contain the automobile dealer\u2019s declaration of intent to sell a vehicle to the customer Max Mustermann. Max Mustermann must also have it stipulated in the contract that he wishes to purchase the car. The contract specifies how much Max Mustermann must pay for the car and what he will receive in return.\n\nSmart contracts contain the same information as conventional contracts. However, the contract information is specified in the program code of the smart contract. The principle here is that code is law.\n\nFor example, the car dealer can use a smart contract to define that Max Mustermann will receive the vehicle when he has paid 10,000 euros for it. This is how smart contracts work: They contain if-then rules. If a condition defined in the contract is fulfilled, this automatically results in a consequence.\n\nThis means that specified activities to realize the will of the contract are automatically executed when a required event occurs. At the same time, all contract partners are informed about status changes in real time.\n\nThe decentralized architecture of a blockchain requires that all computers on the network must have the current state of information for it to remain secure. The more members working together in a blockchain, the higher the security and protection against forgery, as no central office can be attacked, or data manipulated.\n\nWe mentioned an example of a blockchain platform that offers digital contracts at the beginning of this article: Ethereum. The Ethereum platform is built on Bitcoin\u2019s peer-to-peer transaction system. Bitcoin\u2019s network works with a decentralized network of computers, which are all connected in real time.\n\nAll computers within Bitcoin\u2019s network have all or part of the Bitcoin blockchain stored. When a Bitcoin transaction is executed, that information is automatically sent to and stored by all computers within the network.\n\nEthereum does the same with digital contracts, making them especially secure. Anyone who wants to create smart contracts on the Ethereum network should take a closer look at the Solidity programming language.\n\nWhat\u2019s behind the smart contract - Enkronos\nAdvantages of Smart Contracts\nSmart contracts have several advantages over traditional contracts. In particular, the following advantages can be described as relevant in practice:\n\nReliability: if a smart contract is programmed correctly, difficulties in interpreting the terms of the contract are virtually eliminated. The loss of documents is also ruled out as a result.\nSecurity: smart contracts are protected from hackers by cryptographic encryption methods. No one can change the negotiated contract terms after the fact. Nevertheless, this does not mean that hackers cannot change and manipulate the source code.\nEfficiency: Programming a smart contract takes less time than the corresponding bureaucratic processing. This saves contractors time and money.\nIndependence: Decentrally executed smart contracts can replace redundant entities such as banks, insurance companies or authorities. The immutable blockchain is used to verify a contract. For this reason, the principle of \"code is law\" applies. The program code of a contract alone decides whether the terms of the contract have been correctly fulfilled or not.\nIn addition, there is the possibility of implementing a cryptocurrency in the digital contracts. This means that the fulfillment of the contract can be paid directly in a cryptocurrency - but this is not mandatory. In the case of Max Mustermann and the car dealer, it is conceivable that the digital contract, thanks to the if-then sequence, ensures that the dealer automatically receives payment in ETH from Max Mustermann.\n\nDisadvantages of smart contracts\nThe concept of digital contracts is not yet fully developed. They can also cause problems. Among other things, it is conceivable that the program code is faulty. Since information on a blockchain is immutable, such errors cannot be changed afterwards.\n\nA bug in the program code of a more complex digital contract in the form of a Decentralized Autonomous Organization (DAO), allowed hackers to capture $50 million worth of Ether on June 17, 2016. As a result, Ethereum had to perform a hard fork, creating the cryptocurrency Ethereum Classic.\n\nIt is also conceivable that backdoors could be programmed into the program code. Accordingly, the reliability and immutability of a digital contract based on a blockchain depends on its programmer.\n\nIn addition, the conditions for the fulfillment of the contract can change randomly. If Max Mustermann gets his car delivered, but the car is damaged, does the digital contract register that, or does it then pay the car dealer automatically?\n\nAnother aspect is the limited scope of application. Even today, not every household in the world has Internet access or an Internet-capable terminal device.\n\nThe use of smart contracts in business means that companies must use distributed ledger technology. Consequently, the operation of their own infrastructure or the use of a decentralized solution is necessary. From today\u2019s perspective, the necessary technical know-how to develop and use a blockchain or DLT solution is not yet available in the necessary depth.\n\nIn addition, the trading partners must agree to the use of the smart contracts and connect to the infrastructure. In addition to the setup effort, which should not be underestimated, high investment costs are also the direct consequence.\n\nHow to develop smart contracts with Enkronos\nUsing public and private blockchains for smart contracts\nIn contrast to public blockchains, the so-called permissionless blockchains, such as Ethereum, there are still the private blockchains, which are called permissioned blockchains. Probably the best-known example of such a private Blockchain is Hyperledger Fabric.\n\nThe advantage from a company\u2019s point of view is that private Blockchains are only available to a defined, small, and selected group of users. However, this also means that access to the blockchain is more difficult, as partner companies must first be connected to their own blockchain.\n\nIn general, private blockchains are also not blockchains in general, but distributed ledgers. The technology is generally the same, but only a few participants are allowed to work on the DLT, which naturally reduces the counterfeiting security. In principle, a distributed ledger technology should be allowed to be accessed by as large a community as possible.\n\nPrivate blockchains are mostly built using Hyperledger\u2019s frameworks, platforms and tools. One example is the open source Hyperledger Iroha platform. This offers the possibility to create a distributed ledger. Companies can use it to control who is allowed to access a blockchain.\n\nSmart Contracts and Ethereum 2.0\nEthereum is available in versions 1 and 2. Smart Contracts are being introduced comprehensively but only gradually in version 2. Version 1 already fully supports smart contracts. Only from phase 3 of the release of Ethereum 2.0 are smart contracts also integrated into Ethereum 2.\n\nEthereum 2.0 supports the new virtual machine eWASM. Ethereum WebAssembly (eWASM) is a redesign of Ethereum\u2019s smart contracts execution layer. The new execution layer is said to provide more performance for smart contracts. Another new feature is said to be the ability to develop smart contracts in Ethereum 2 using C++ and Rust.\n\nApplication examples of smart contracts in practice\nApplication examples of smart contracts exist, for example, in:\n\nSupply chains: supply chains of goods usually consist of multiple parties. From the consumer, to the retailer, to the wholesaler, to the company, to the supplier, and to the producer, blockchain-based digital contracts can provide all parties involved with a common contractual basis. All parties involved can track in real time what stage the product being offered is at.\nHealthcare: Patient data can be mapped in a digital contract for the patient, as well as for doctors and insurance companies. It is possible for each party to view all data at a glance. Patients could individually decide what information they want to disclose.\nBlockchain applications and smart contracts are an effective way to detect and prevent product counterfeiting. This is of course and especially true for pharmaceuticals. Smart contracts can be used to manage clinical outcomes and procedures, among other things.\nPharmacies, hospitals, and other healthcare suppliers can bill each other more easily and quickly. Electronic prescriptions are also much more secure and easier to use this way.\nFinance: Of course, blockchain is useful in finance as well. It\u2019s not just cryptocurrencies like Bitcoin that show the benefits here. In 2015, several banks founded the R3 Consortium. The open-source version of Corda consists primarily of a collection of smart contracts.\nThe focus is on the development of blockchain solutions for the financial sector. The Corda open source blockchain platform was developed by the R3 Consortium. The consortium includes, for example, Barclays, BBVA, Commonwealth Bank of Australia, Credit Suisse, Goldman Sachs, Royal Bank of Scotland, State Street, and UBS. Also members are Bank of America, BNY Mellon, Citi, Commerzbank, Deutsche Bank, HSBC, Mitsubishi UFJ Financial Group, Morgan Stanley, National Australia Bank, Royal Bank of Canada, Skandinaviska Enskilda Banken, Soci\u00e9t\u00e9 G\u00e9n\u00e9rale, and Toronto-Dominion Bank.\nReal estate: Digital contracts can not only govern leases, but also facilitate the purchase or sale of land.\nGovernments: Governments could hold elections via digital contracts. The basis for this could be a contract concluded between the respective government and all citizens of the country. This would not only allow the government to see who voted, but citizens would also have the advantage of being able to conveniently cast their vote with a click. Already in 2017, the city of Bolzano (South Tyrol) has the first blockchain solutions for local government. These were developed together with SAP.\nLicensing: Software licenses, for example, can be efficiently awarded via digital contracts. In this way, software developers could specify in the contract that the software will automatically deactivate if unauthorized persons access it.\nSmart contracts are already being used in the real economy\nElectricity provider RWE offers its customers digital contracts via the Ethereum platform so that they can easily pay for the electricity they purchase at charging stations.\n\nThe Ethereum Mainnet can be integrated into SAP\u2019s Cloud Platform and other SAP applications. This offers the advantage that a public blockchain network with all its advantages can be integrated into one\u2019s own infrastructure.\n\nDue to the decentralized and trust-based approach of a public blockchain, private applications in companies also benefit. Transactions between different companies can be validated more easily this way since everyone is allowed to access the Ethereum mainnet. Smart contracts can be integrated and almost completely automated via this.\n\nOpenLaw, in turn, specializes in comprehensively mapping traditional, legal agreements with smart contracts. This also enables the mapping of contracts with smart contracts that build over comprehensive legal agreements. Ethereum-based smart contracts can be embedded in legal agreements with OpenLaw.\n\nConclusion: Smart contracts are a gamechanger\nDigital contracts represent an innovation compared to traditional contracts. They can be concluded between many different parties worldwide.\n\nVia a smart contract, the contracting parties can not only define via the program code which contract conditions they agree to, but also determine what the contract should automatically execute when the conditions are met.\n\nIt is possible to integrate cryptocurrencies as a means of payment in digital contracts. Digital contracts could provide the contract form of tomorrow.\n\nStart Your Own Smart Contract\nWould you like to start your own smart contract project? Contact Enkronos team today who behind Venice Swap project."
    }
}