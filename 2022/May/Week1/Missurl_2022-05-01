{
    "threat_intelligence": {
        "url": "https://medium.com/coinmonks/getting-started-web3-bug-bounties-and-security-2b28c8646f63",
        "timestamp": "2022-05-01 00:00:00",
        "original_content": "Getting Started: Web3 Bug Bounties and Security\nIsaiah\nCoinmonks\nIsaiah\n\n\u00b7\nFollow\n\nPublished in\nCoinmonks\n\n\u00b7\n5 min read\n\u00b7\nMay 1, 2022\n203\n\n\n1\n\n\n\n\n\n\nWelcome to getting started with web3 bug bounties! Here I will outline some starter information so anyone reading will have a guide in the beginning of their journey.\n\nBefore we get started, let me explain why I was drawn into the web3 space. I hadn\u2019t had much interest in crypto/blockchain until I began to learn about its potential applications in video games and music. Ever since then I have been on a journey to combine web3 with my interest in web security. To be completely transparent though, the financial rewards associated with web3 security contributed a lot to my interest. A single web3 vulnerability can have a reward in the multi-millions!\n\nAnyway, let\u2019s just get started. There are a few requirements for those looking to explore Web3 security. They are as follows:\n\nKnowledge of Programming\n\n\u2192 You only need a cursory knowledge of programming to begin exploring blockchain security. It is important to note, however, that without a strong working knowledge of programming and common best practices, you\u2019ll be making the subject even more complicated. Now, barring that, don\u2019t let it discourage you! Programming is a skill for everyone - anyone can pick it up! If you\u2019re definitely a beginner in this area, I\u2019d recommend learning Python. It\u2019s a powerful programming language that has a syntax similar to the English language.\n\nKnowledge of Solidity\n\n\n\u2192 Currently, according to a Gemini report from 2021, most blockchain-based applications are built on the Ethereum blockchain. As such, it is most effective for beginning web3 hackers to focus on learning one of the primary languages that is built to integrate with Ethereum - Solidity.\n\nBeginning Knowledge of Blockchain\n\n\u2192 Please please please don\u2019t let a lack of complete understanding of the blockchain prevent you from jumping into hacking. I believe that the desire to have a complete understanding of topics within fields such as math, computer science, physics, etc., often prevents people from moving forward once they feel stuck. If you don\u2019t understand something, just keep reading! Go back to it or find a different resource. Sometimes you just need to experience things for yourself. Let yourself be a beginner. With all that said, any web3 hacker needs to understand blockchain technology. Just remember, this technology is new and so there are very few people, if any, that understand this technology in its entirety. As a species, we\u2019re still trying to figure out where it will be useful and how it can serve us best!\n\nUnderstanding Remix\n\n\u2192 Remix is a free online tool allowing users to interact with the blockchain. For quickly getting to testing and running various smart contracts this is a great tool!\n\nGreat! So now we have all we need to get started! Now we need to know what the hell we\u2019re looking for! At this point, you should be studying best security practices for Ethereum. There are a bunch of resources for this but they\u2019re scattered across the Internet so I will provide a short list below.\n\nMastering Ethereum\n\n\u2192 This text which was in part written by Dr. Gavin Wood (an Ethereum co-founder) is a great primer for getting introduced to Ethereum, blockchain, and best security practices. It is important to note that it is NOT necessary to read this text in full prior to beginning your bug bounty. In fact I would highly discourage this as it will most likely serve as a deterrent especially if you\u2019re just starting out.\n\u2192 Also, please note that this text is available online here\n\nOnline BlocSec course:\n\nhttp://console-cowboys.blogspot.com/2020/08/blockchain-decentralized-application.html\n\n\u2192 Please be aware that this is not a secured HTTPS website. Regardless, it is a good resource for seeing security vulnerabilities with examples\n\nSmart contract Security Puzzles/Games\n\n\u2192 Capture The Ether (https://capturetheether.com - CTE)\n\nCTE is a great way to get started with grasping interacting with the blockchain using a wallet and various basic security concepts\n\n\u2192 Ethernaut (https://ethernaut.openzeppelin.com)\n\nAnother great smart contract security game is Ethernaut which was created by OpenZeppelin, a company specializing in security. I would definitely recommend working through the levels on Ethernaut.\n\nBug Bounties\n\n\u2192 The most popular web3 security organization connecting white hat hackers to bug bounty programs is Immunefi. The first step in hacking doesn\u2019t occur when you\u2019ve got a bunch of code laid out in front of you. Things get started when you begin triaging a bounty program! Pay attention here because this step will guide your overall path.\n\n\u2192 The last security organization I\u2019m aware of that facilitates bug bounty triaging is HackenProof. Although it is less popular and doesn\u2019t have as large as a community, it does have some features that Immunefi lacks. The most notable that I\u2019m aware of is that HackenProof facilitates hacking to defend Ukraine. Additionally, the team releases data about the total amount of reward money a project has paid out.\n\nChoosing a Bug Bounty Program:\n\nhttps://thehackerish.com/my-bug-bounty-methodology-and-how-i-approach-a-target/\n\n\u2192 Although this guide is geared towards web2, the tips and tricks are definitely relevant for BlocSec!\n\nBefore jumping into hacking I strongly recommend going through OpenZeppelin\u2019s Ethernaut challenges. They\u2019ve cultivated a series of challenges that are more realistic to the practices and processes involved in BlocSec - as opposed to CaptureTheEther.\n\nGreat! So now you\u2019ve received your first few steps to getting started in blockchain security. Congratulations! If you enjoyed this or just want to keep up to date with what I\u2019m doing in this space allow me to plug my Twitter. Now let\u2019s get to hunting!\n\nNow that you\u2019re ready to get started hunting, you\u2019ll need to know how to test Smart Contracts! I already listed Remix, however, as an online IDE, isn\u2019t as powerful or robust as some of the other javascript/typescript based libraries available for testing. Some of the most common testing frameworks in JS/TS are Truffle and Hardhat. These languages allow hackers to write asynchronous code which Foundry cannot do. However, it is also important to note that these languages can be inefficient for hackers/auditors of EVM based applications. My recommendation is to download the Foundry tool which allows you to test smart contracts directly through solidity.\n\n\u2192 Download foundry here\n\n\u2192 Access foundry documentation here\n\nDISCLAIMER: I have yet to discover my own first bugs as I myself am a beginner in this field. However, I felt it might be valuable for some to watch/read my entire process as I go from 0-100 in the realm of Blockchain Security.\n\nOne of the reasons I decided to begin blogging my journey is because I don\u2019t see many Black Engineers in the blockchain security space so I also hope to inspire more of us to dive in and enjoy the details of this new space. I have a very positive outlook on the future and our influence in it.\n\nJoin Coinmonks Telegram Channel and Youtube Channel learn about crypto trading and investing\n\nAlso, Read\nBest Futures Trading Signals | Liquid Exchange Review\nCrypto Exchanges In South Africa | BitMEX Crypto Signals\nMoonXBT Copy Trading | Crypto Wallets in UAE\nRemitano Review | Guide to 1inch Protocol | Buy Floki\nMoonXBT vs Bybit vs Binance | Arbitrum: A Layer 2 Solution"
    }
}