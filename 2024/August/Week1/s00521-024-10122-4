{
    "threat_intelligence": {
        "url": "https://link.springer.com/article/10.1007/s00521-024-10122-4",
        "timestamp": "2024-08-01 00:00:00",
        "original_content": "Suspicious transaction alert and blocking system for cryptocurrency exchanges in metaverse\u2019s social media universes: RG-guardIn this study, we propose an effective system called RG-Guard that detects potential risks and threats in the use of cryptocurrencies in the metaverse ecosystem. In order for the RG-Guard engine to detect suspicious transactions, Ethereum network transaction information and phishing wallet addresses were collected, and a unique dataset was created after the data preprocessing process. During the data preprocessing process, we manually distinguished the features within the original dataset that contained potential risk indicators. The learning process of the RG-Guard engine in risk classification was achieved by developing a deep learning model based on LSTM\u2009+\u2009Softmax. In the training process of the model, RG-Guard was optimised for maximum accuracy, and optimum hyperparameters were obtained. The reliability and dataset performance of the preferred LSTM\u2009+\u2009Softmax model were verified by comparing it with algorithms used in risk classification and detection applications in the literature (Decision tree, XG boost, Random forest and light gradient boosting machine). Accordingly, among the trained models, LSTM\u2009+\u2009Softmax has the highest accuracy with an F1-score of 0.9950. When a cryptocurrency transaction occurs, RG-Guard extracts the feature vectors of the transaction and assigns a risk level between 1 and 5 to the parameter named \u03b2risk. Since transactions with \u03b2risk\u2009>\u2009\u2009=\u20093 are labelled as suspicious transactions, RG-Guard blocks this transaction. Thus, thanks to the use of the RG-Guard engine in metaverse applications, it is aimed to easily distinguish potential suspicious transactions from instant transactions. As a result, it is aimed to detect and prevent instant potential suspicious transactions with the RG-Guard engine in money transfers, which have the greatest risk in cryptocurrency transactions and are the target of fraud. The original dataset prepared in the proposed study and the hybrid LSTM\u2009+\u2009Softmax model developed specifically for the model are expected to contribute to the development of such studies.1 Introduction\nMetaverse is defined as a digital universe that combines physical reality with digital virtuality [1]. In this universe, people can interact as in the real world. The metaverse emerges with the development of virtual reality and digital objects, resulting in multiple emotional interactions with users. Therefore, the metaverse will reshape the concepts of social interaction, social experience and social networking in social applications, making the metaverse a platform of the new social ecosystem [2]. From the perspective of end users, there are three major technological innovations centred on the emergence of personal computers, internet and mobile devices. With the metaverse, a fourth innovation is emerging around spatial, immersive technologies such as virtual reality (VR) and augmented reality (AR) [1]. The last major innovation, the metaverse has the potential to transform (online) education, business, remote working and entertainment into a different paradigm [3]. In the field of virtual reality, the metaverse is planned as 3D Internet or Web 3. AR/VR and humanitarian challenges related to the transition to the metaverse are emerging [4]. A reflection of these challenges is that with the development of the metaverse, data collection and sharing with other parties has far-reaching privacy implications. In addition, within this layered architecture, the data layer will become a potential attack surface [5].\n\nCurrently, many metaverse ecosystem applications prefer either their own cryptocurrency or a different cryptocurrency in their applications [6]. In addition, payment systems in the metaverse are usually managed for the use of cryptocurrencies along with traditional payment methods such as credit or debit cards [7]. Users can deposit or withdraw funds through a wallet or account within the virtual world. Furthermore, metaverse applications can create their own payment systems using decentralised finance (DeFi) protocols [8]. This method is the basis of a new economic system that allows users to perform financial transactions and earn money within the virtual world. Metaverse payment systems can provide low-cost, fast and secure payment transactions by utilising the strengths of cryptocurrencies [9]. Although there is a high level of security in the working logic of cryptocurrencies, it harbours many risks in its intended use. In addition, suspicious and risky transactions occur in metaverse universes, and these problems reveal the need for artificial intelligence-supported warning systems [10]. The rapid transition and uncontrolled growth of metaverse universes increase security risks, especially in payment systems and cryptocurrencies [10]. Artificial intelligence-supported solutions [11,12,13] are being developed for the security of payment systems in metaverse applications. In general, suspicious transaction warning and blocking systems try to detect certain suspicious transaction patterns or behaviours over users\u2019 money traffic. For the security of payment transactions in the metaverse universe, user behaviours, account movements, cryptocurrency type and money density are important factors [14]. Artificial intelligence models aim to automatically detect suspicious transactions by identifying patterns and anomalous behaviours in purchases [15].\n\nThe proposed suspicious transaction warning and blocking system named RG-Guard is expected to play an important role in the security of payment transactions on social network platforms. In this context, the main contributions of this article are summarised as follows.\n\nProblem: With the development of many applications belongings to the metaverse ecosystem, the frequency of using cryptocurrency payment methods is increasing rapidly day by day. Security processes in cryptocurrency payment systems are usually provided by KYC authentication systems. However, with the increase in the use of cryptocurrencies, increasing data leaks on the data stacks created with the increase in the use of cryptocurrencies cause victimisation by creating fake public addresses. For this reason, the inadequacy of KYC systems used in the security of crypto payment transactions and public address information constitutes the basis of the problem to be solved in this study. Critical vulnerabilities of KYC systems include incomplete or inaccurate documents or information provided to verify the identity of the customer during the KYC process, the use of false identity documents or documents, inadequate authentication procedures and bypassing the KYC process by obtaining another person's information.\n\nModel: An LSTM\u2009+\u2009Softmax-based suspicious transaction warning and detection model named RG-Guard has been proposed for secure payment transactions in the metaverse ecosystem. A unique dataset has been created for the training and testing processes of the proposed model.\n\nEvaluation: The RG-Guard engine generates a five-level risk classification for the security of the transaction. The model generates a blocking warning at risk level 3 and above. In cases of risk levels 1 and 2, it labels the transaction as normal. The obtained dataset is also tested with different algorithms for classification, and it is concluded that the proposed LSTM\u2009+\u2009Softmax has the highest classification success with over 99% accuracy.\n\nThe remainder of this article is organised as follows. Section 2 reviews the literature related to the study topic and the proposed modelling techniques. Section 3 describes the metaverse ecosystem and the challenges in the transition. The following sections of the paper focus on the development, evaluation and comparison of the proposed model with similar models. The abbreviations used in the study and their definitions are shown in Table 1.\n\nTable 1 Table of abbreviations\nFull size table\n2 Related works\nMetaverse-based social networks have become one of the most eager focal points of attackers due to their large number of users and the continuous integration of alternative forms of cryptocurrencies. Since it is an emerging ecosystem, security efforts are mostly focused on Ponzi [16], spam [17], phishing [18], malware [19], account manipulation [20] and know your customer (KYC) [21].\n\nRecently, the incidents of fraud by establishing a Ponzi system over newly emerging cryptocurrencies have increased significantly. Ponzi detection systems are proposed to solve this problem. Bartoletti et al. detected whether there is a Ponzi system from smart contract source codes with a dataset containing 184 Ponzi schemes in the Ethereum network [22]. Fan et al. proposed a smart Ponzi detection model based on ordered boosting algorithm. In this proposed model, a dataset of 386 Ponzi accounts and 3239 non-Ponzi accounts were used [23]. Jung et al. proposed classification with J48, Random forest and stochastic gradient descent algorithms by collecting 3023 non-Ponzi and 172 Ponzi account schemes from the Ethereum network with data mining method [24].\n\nStudies on the detection of abnormal behaviours in the blockchain are either based on previously registered wallets or transaction records. It mostly analysed malicious strategies to identify behaviour patterns and detect malicious transactions. To detect suspicious activity on the Ethereum network, Farrugia et al. used the XGBoost algorithm to classify accounts based on transaction data. Farrugia et al. proposed a classification model by extracting 42 account features from the collected account information [25]. Yuan et al. proposed a three-step framework to detect phishing scams in the network by mining Ethereum transaction records. In the first part, labelled phishing accounts are collected from influential websites. In the second step, a node2vec method is used to extract the hidden features of the transaction records collected from the network. In the last step, they developed a one-class support vector machine (SVM) that performs classification according to the data obtained. In this study, it was determined that the average F-score reached 0.846 [26]. In another similar study, Chen et al. proposed a node classification problem by considering accounts and transactions in the blockchain network as nodes and edges. They developed a detection method based on graph convolutional network and autoencoder to detect suspicious transaction accounts [14]. Zhang et al. (2021) constructed transaction pattern graphs for users and adapted phishing fraud detection to the graph classification problem. A classification model with multiple feature extractions was proposed to detect potential phishing scammers based on transaction pattern features [27].\n\nThe proposed study is based on the secure realisation of crypto payments in applications in the metaverse ecosystem. When the literature studies conducted within the scope of this hypothesis are evaluated, it is seen that suspicious transaction detections in blockchain networks are concentrated in bitcoin [28] or Ethereum [29] networks. Especially the intensity of both production and usage by token cryptocurrency is in the Ethereum network. Suspicious transactions in blockchain networks are categorised based on Ponzi records or transaction records. All proposed systems classify transactions as normal or suspicious [15, 30]. In particular, a wallet public address that uses crypto payments very intensively can be labelled suspicious in binary classifications due to the number of transactions. It is thought that similar problems in binary classification problems prevent secure shopping process. Based on this, the RG-Guard model provides a detailed classification model by classifying crypto transactions according to five different risk values. Since the proposed model learns from both Ponzi records and transaction records, it is expected to inform the application about the abnormality of the transaction. In Table 2, 11 similar studies from the last 5 years are compared in terms of technical, dataset study year and evaluation metric results.When the accuracy value obtained from the LSTM\u2009+\u2009Softmax hybrid method developed specifically for the study is compared with the academic studies conducted in the past 5 years, it is seen that it contributes to the academic literature by increasing the success rate in the detection of suspicious transactions between 19% and 3.5% according to the average F1-score performance evaluation metric.3 Security and privacy in metaverse\nWeb 2 technology is far from distributed, centralised and has many vulnerabilities in terms of data privacy. As the collaborative areas of metaverse technology, also known as Web 3, expand, it will reduce the boundaries between the real world and the virtual world [31,32,33,34,35]. While there is still insufficient work on the protection of personal rights and data in Web 2 technology, this problem will become more complex in the upcoming Web 3.\n\nIn a virtual digital platform such as metaverse, where users can interact with each other and digital assets in various ways, it is necessary to protect users from threats such as cyber-attacks, fraud and scams, as in ordinary online applications [36]. In metaverse platforms, it is imperative that the metadata store of avatar controllers collect network, user and environmental data to provide users with a richer, more realistic and stable experience [32]. The amount of data to be kept in the metaverse repository will continue to accumulate day by day. Therefore, the number of data breaches and suspicious transactions will increase due to the inadequate security procedures of metaverse applications [37]. The protection of privacy and security of personal data is a major concern [34]. The inherent data storage requirement of metaverse technology makes data security and data privacy issues much more important criteria. The authentication methods of these avatars and the security of the data transmitted in these business processes are also of critical importance. In addition, ensuring the security of the objects owned by the users in the metaverse and the security and privacy policies in the transaction processes are vitally important [31]. In addition, the fact that XR applications are still very new makes this area more vulnerable to intrusion and attack opportunities. An attacker operating in the metaverse universe can create an identical copy in the metadata store according to the user\u2019s access history and the avatar's data [32].\n\nAlthough artificial intelligence-based bots such as Promobot are placed in metaverse applications as a precaution against attacks by attackers, users will not be able to distinguish whether the avatars they communicate with are real people or bots. This situation may cause users to be deceived and defrauded by mistaking bots for real avatars [33, 38].\n\nSome important issues for metaverse security are as follows:\n\n3.1 Authentication and authorisation\nMetaverse platforms should use strong authentication methods to verify the identity of users and implement access controls to ensure that only authorised users can access certain areas or perform certain actions [39].\n\n3.2 Encryption\nEncrypted communications should be used to protect user data and prevent unauthorised access. Data in transit and data at rest should both be encrypted [40].\n\n3.3 Measures against phishing\nPhishing attacks are common in online spaces, and metaverse is no exception. Metaverse platforms should implement anti-phishing measures, such as educating users on recognising phishing attempts and using email and SMS verification [41].\n\n3.4 Fraud prevention\nMetaverse platforms should have robust fraud prevention measures in place to prevent fraud and other fraudulent activities. These should include user education, transaction monitoring and fraud detection algorithms [42].\n\n3.5 Virtual asset protection\nUsers in the metaverse may hold valuable digital assets such as virtual currency, virtual property and virtual goods. Metaverse platforms should use secure storage and transaction protocols to protect these assets from theft or fraud [43].\n\n3.6 Regular security assessments\nMetaverse platforms should conduct regular security assessments to identify and mitigate vulnerabilities and risks [44].\n\n4 Development of the RG-guard model\nTwo phases were applied to develop the suspicious transaction detection and warning system named RG-Guard. The first one is the training phase, and the second one is the detection and warning phase. In the training phase, RG-Guard\u2019s classifier is fed with the dataset representing the feature vectors for suspicious transaction detection. In transaction detection of the RG-Guard system, the feature vectors of a previously unknown transaction are analysed, and the risk level of the transaction is determined to be between 1 and 5. Transactions with risk level 3 and above are blocked by RG-Guard, while those with risk levels 1 and 2 are allowed by RG-Guard. The RG-Guard alert and blocking system supports the Ethereum cryptocurrency and approximately 727 active alternative tokens (ERC20-ERC1155) on the Ethereum network. In order to prevent the accounts that have recently been used for phishing attacks from being used as payment methods in metaverse applications, a phishing account registered in the dataset is detected with the RG-Guard filter engine. If a possible phishing account public address is detected, the payment process will not start. The architecture of the proposed RG-Guard system is given in Fig. 1.4.1 Data collection and preprocessing section\nRG-Guard alert and blocking system is developed on Ethereum network transactions. Ethereum is an open-source platform with blockchain technology. Ethereum is known both as a cryptocurrency and as a platform that allows developers to develop smart contracts. Smart contracts are snippets of code that can perform automated transactions based on a digital agreement between two or more parties. Smart contracts enable the development of applications such as financial transactions, digital asset transfers, voting systems, etc., in a secure and transparent manner. Ethereum uses Ethereum Request for Comments (ERC-20, ERC721 and ERC 1555) standards for smart contracts [45]. Especially with the ERC20 standard, token production, which is a type of cryptocurrency in the Ethereum network, is widely preferred [46]. As of 2023, the number of cryptocurrencies in the Ethereum network is known to be 2894.\n\nIn this part of the study, the focus is on determining the vectors in the dataset required for the training of the RG-Guard warning and blocking system. Therefore, the transaction processes of the Ethereum network were investigated. A transaction in the Ethereum network has cryptographically signed instructions. In general, a transaction refers to a signed data packet from an external account. Each Ethereum transaction contains information about the recipient, the sender\u2019s identity signature, optional data fields, the number of ether sent, GASPRICE and GASLIMIT, etc. Ethereum state transition occurs when a transition is performed between a sender and a receiver [47]. The state transition function changes the state of both the sender and the receiver after a completed transaction. The state transition process starts with the verification of the transaction, ensuring the validity of the signature. If the verification is successful, the transaction fee is calculated as the product of GASPRICE and STARTGAS [48].\n\nThe result is subtracted from the sender\u2019s balance, and the nonce is increased accordingly. If all calculations are valid, the amount is paid per byte. This results in the transfer of ether to the recipient. If the recipient account does not exist, it is created first, and if the transaction is a contract, the code of the contract is executed. In the event that the sender has an insufficient amount of ether, all status changes are undone, except for fees to miners. The RG-Guard blocking system will be activated in the state of Ethereum before the start of the transaction according to the transaction order mentioned above. In this way, if a suspicious transaction is detected, the transaction will not take place.\n\nEthereum has two types of accounts. These are contract and externally owned accounts. Each account has a unique 20-byte address pointing to four fields, as shown below, which are used to guarantee the uniqueness of its state [49].\n\nNonce\n\nAccount balance\n\nContract bytecode\n\nAccount storage\n\nWhatever a developer who wants to create a token generates a new smart contract from the Ethereum network, they have the option to submit this source code to Etherscan. Etherscan then validates the source code to confirm that the code has identifiable and verifiable structures. Developers and monitors conducting token security assessments recognise this verification as a vote of confidence in the smart contract code. Therefore, transactions that have not received smart contract code validation are used as a feature vector in the RG-Guard alert and blocking system dataset. In general, the features required for the RG-Guard engine to learn are given in Table 3 with their definitions.Ethereum ETL Library was preferred for the process of creating the dataset after determining the characteristics of the dataset. Ethereum ETL Library is designed to convert Ethereum blockchain data into formats suitable for various other applications such as CSV [50]. The dataset properties shown in Table 3 were collected from the datasets shown in Table 4 through this library. The dataset to be used in the development of the RG-Guard model contains an average of 2.2 M data.In order for the RG-Guard model to learn and label suspicious transactions, data were collected from the sources shown in Fig. 1, and a unique dataset was created for the model. The dataset includes normal and abnormal transaction records as well as the public addresses of accounts that have been previously used in phishing attacks. Thus, the RG-Guard model will be able to apply a pre-filter for phishing accounts before the transaction. Table 5 shows the data groups and number of data belonging to the created dataset.After the dataset was prepared, a scaling study was performed on the dataset in order to correctly decide on the hyperparameters of the dataset. For this scaling, normalisation, standardisation, minimum-max scaling and maximum-absolute scaling models were preferred, respectively [51].\n\n(1)\n\u03c3\n(2)\n(3)\n(4)\nwhere X is the input data, Xresult is the scaled data, m is the data mean and s is the data standard deviation.\n\n4.2 Developing the model\u2019s classification engine\nFor the classification problem of the RG-Guard warning system, the long short-term memory (LSTM) model from deep learning algorithms was used. LSTM is a powerful recurrent neural network (RNN) architecture first proposed in 1997 by Hutcher et al. for time-series modelling and forecasting [52]. LSTM networks are an improved version of recurrent neural networks (RNNs) that memorise the temporal dynamics of sequential data for long time periods, a problem that RNNs cannot easily overcome. Within the RG-Guard engine, the LSTM layer\u2019s effective mechanism for capturing long-term temporal dependencies, the classification model, is favoured. As for the structure of an LSTM network, it consists of memory blocks, also called cells, which are placed in succession to handle the flow of information. Each cell (Eq. 5) uses three gates, input (Eq. 6), forget (Eq. 7) and output gate (Eq. 5), to control the process of adding or removing information to or from the network, and transferring two states, cell and hidden state, to the next cell.\n\n(5)\n\u03c3\n(6)\n\u03c3\n(7)\n\u03c3\n(8)\n\u03c3\n(9)\nHere, the variables W, x, R and b are input weight, inputs, recursive weight and bias, respectively. The sigmonide function \u03c3 is calculated in the LSTM network as shown in Eq. 5. In the LSTM model, firstly, the information xt and ht\u22121 used as input and which information will be deleted are decided by the loss function.\n\nBefore developing the LSTM-based RG-Guard learning model, the dataset should be revised to produce \u03b2risk risk value. According to the current cryptocurrency transaction information in the dataset, the registered wallet public address is labelled as either suspicious money out of the wallet or suspicious money into the wallet. This situation is labelled as in_ suspicious\u2009=\u20091 for suspicious inflow and out_ suspicious\u2009=\u20091 for suspicious outflow in the dataset. Based on these two features, the result_ suspicious feature was added to the dataset and made suitable for the classification of the RG-Guard model as described below.\n\nThe risk_value; in_ suspicious, out_ suspicious, result_suspicious and total_txn values from the dataset properties given in Table 1 are labelled between 1 and 5 according to the conditions specified in Table 4. The average number of transactions in the dataset, avg_total_txn\u2009=\u20091.602, was calculated, and therefore, the avg_total_txn value for \u03b2risk\u2009=\u20091 and \u03b2risk\u2009=\u20092 was taken into consideration. In the RG-Guard engine, the transaction is labelled as normal and allowed for \u03b2risk\u2009=\u20091 and \u03b2risk\u2009=\u20092. The RG-Guard model for suspicious transaction detection in crypto payments will be realised according to the evaluation given in Table 6.\n\nTable 6 Scaling of \u03b2risk value for classification\nFull size table\nRG-Guard will not be detected as a suspicious transaction in the risk classification (\u03b2risk\u2009=\u20091 and \u03b2risk\u2009=\u20092), but if the wallet public address has performed too many transactions before, it is foreseen to notify as a warning. Therefore, if the in_suspicious and out_suspicious values in the dataset are not labelled as suspicious, a warning labelling is performed over the transaction average of the total_txn records as shown in Eq. 10.\n\n\u03b2\n(10)\nThe architecture of the RG-Guard LSTM\u2009+\u2009Softmax-based classification model is given in Fig. 2. The LSTM\u2009+\u2009Softmax risk value classification process of the RG-Guard model is generally developed as follows.\n\nFig. 2\nfigure 2\nLSTM\u2009+\u2009Softmax architecture used in the RG-Guard model\n\nFull size image\nThe LSTM model has a layered structure, and each layer consists of different numbers of neurons. Each neuron contains input, forget and output gates. In the forget gate, depending on the state of the neurons, the necessary dataset information is removed, and only the ones that need to be processed are selected. This is done with the addition layer Ft and the output of the previous cell. This output is then combined with the previous cell state Ft-1. In the next step, the obtained data are multiplied and combined. The forget gate works in the model as shown in Eq. 11. Here Wf is the weight matrix, and bf is the bias value [53]\n\n\u03c3\n(11)\nEach cell has an input gate for the input of features and is assisted by a sigmoid function to control the data. The input gate in the LSTM is defined as shown in Eq. 12. Where Wi is the weight matrix, and bi is the bias value.\n\n\u03c3\n(12)\nThe input gate uses the tanh function to generate a vector of feature information to be added to the current state and determines the hidden state cht with the outputs of both the input and forget gates as shown in Eq. 13.\n\n(13)\nIn the last step of the LSTM core model, the output gate selects features according to the current state of the cell, the result of previous cells and new data. The function of the weed output gate is shown in Eq. 14.\n\n\u03c3\n(14)\nIn the LSTM network, when the output vector representation of the cells at any time t of the model is given as FOUT, a softmax classifier is used to predict the labels of the outputs of the parameter matrix x as given in Eq. 15.\n\n\u03b2\n(15)\nBefore the payment process starts in the social network, the RG-Guard engine first requests the wallet public ID to which the payment will be sent as shown in Algorithm 1 to determine whether the user wallet public ID is a phishing address. When the requested wallet public ID is detected as phishing by the RG-Guard engine, the process generates an alert.\n\nfigure b\nAlgorithm 1. Wallet ID request of RG-Guard engine for phishing control\n\n4.3 Performance evaluation metrics\nIn order to evaluate the performance of RG-Guard\u2019s risk classification and prevention system in different models, accuracy (Eq. 16), precision (Eq. 17), recall (Eq. 18) and F-score (Eq. 19) metrics are preferred. For each of the models, we will repeat 100 times and evaluate the average results [54].\n\n(16)\n(17)\n(18)\n\u03c9\n(19)\nwhere TP, TN, FP and FN refer to true-positive, true-negative, false-positive and false-negative results, respectively.\n\n5 Experimental evaluation\nDuring the development process of the RG-Guard model, Google Collaboratory with 64-GB RAM was preferred. The development was completed on Ubuntu 64-bit operating system using NVidia GeForce GPU in Google Collaboratory. In addition, keras, TensorFlow, CUDA and cuDNN libraries were used in Python programming language for the deep learning model. Matplotlib and Seaborn packages were installed to visualise and evaluate the results of the model.\n\nIn the training and test evaluations of the RG-Guard model, the dataset was partitioned according to the 70:30 rule. A validation dataset was created with the 90:10 rule from the dataset allocated for training. In order for the model to classify with the highest accuracy, the necessary hyperparameters should be optimised. In this process, training and validation datasets were used. For the risk classification experiments of the RG-Guard model, studies were performed using 5, 10, 20, 40, 60, 80 and 100 neurons in the hidden layers.\n\nIn order to achieve maximum accuracy in the dataset, it is necessary to select the optimum hyperparameters to be used by the model. For this, the Hyperopt model was preferred. Hyperopt is a hyperparameter optimisation library based on Bayesian optimisation [55]. Hyperopt supports multiple optimisation algorithms, including Tree-Structured Parzen Estimator (TPE) and random search, and allows users to define complex search spaces. It also supports distributed optimisation using MongoDB [56]. In order for Hyperopt optimisation to select the best hyperparameters, the hyperparameter ranges commonly used in deep learning algorithms are loaded into the model.\n\nThe hyperparameters, hidden layers and the number of neurons in each layer selected for the optimisation of the risk classification model are shown in Table 7.\n\nTable 7 Optimal hyperparameters and model layer information for the RG-Guard model\nFull size table\nThe confusion matrix obtained from the tests of the risk classification of the RG-Guard model according to suspicious transactions is given in Fig. 3. Five different risk classifications are performed according to the transaction information received by the RG-Guard classification engine. As a result of the classification, \u03b2risk values 3, 4 and 5 are labelled as suspicious transactions, and \u03b2risk values 1 and 2 are labelled as normal transactions. Here, only in \u03b2risk\u2009=\u20092 labelling, a warning is generated because the wallet public address performs too many transactions. When the risk value classification results of the RG-Guard model are examined, it labelled with 100% accuracy in Risk 1 and 99.51% accuracy in Risk 2. Since both label types represent normal transactions, user accounts that are not suspicious transactions in metaverse applications are checked with a very high accuracy. The RG-Guard model achieved 98.48%, 96.16% and 99.71% accuracy in labelling Risk 3, Risk 4 and Risk 5, respectively. Since the system will generate blocking alerts for transactions in all three suspicious transaction categories, it is foreseen to tolerate mislabelling in the classification.\n\nFig. 3\nfigure 3\nWorking architecture for the RG-Guard model of the Hyperopt optimisation algorithm\n\nFull size image\nAlthough the classification of the RG-Guard suspicious transaction warning and blocking system according to the risk level is evaluated with the confusion matrix, the confusion matrix is not capable of measuring the classification performance of the model. Therefore, the results obtained were evaluated with the metrics shown in Eqs. 1, 2, 3 and 4. Table 8 shows the results of the performance metrics of the RG-Guard model according to five different risk classes. When the accuracy classification results are evaluated, it provides an average of over 99% success in deciding whether the transactions are normal or suspicious transactions. Although obtaining small accuracy differences for Risks 3, 4 and 5 levels is seen as a different value for the model result, the fact that the RG-Guard engine labels the instantaneous transaction as a suspicious transaction ensures that it does not make a wrong transaction. Here, only the source of the suspicious transaction on the receiver or sender side may not be detected.\n\nTable 8 Performance evaluation of the RG-Guard model according to risk classes\nFull size table\nThe ROC curve of the RG-Guard model shown in Fig. 4 shows the FPR (false-positive rate) on the X-axis and the TPR (true-positive rate) on the Y-axis. The ROC curve shows the balance between the two basic measures of sensitivity and specificity. It can be seen that the RG-Guard model has a prediction of over 99% in generating correct alarms. The ROC curve is shown in Fig. 5.\n\nFig. 4\nfigure 4\nConfusion matrix of the risk classification of the RG-Guard model\n\nFull size image\nFig. 5\nfigure 5\nRG-Guard model ROC curve\n\nFull size image\nIt is seen that the LSTM-Softmax deep neural network algorithm used in the development of the proposed RG-Guard model is the most appropriate classification model for this classification problem when compared with the results of different classification algorithms shown in Table 9. The obtained dataset was tested with DT, XGB, RF and LGBM algorithms used in classification models for the same risk classification. According to this comparison process, the preferred LSTM\u2009+\u2009Softmax model achieved the highest accuracy results in risk classification.\n\nTable 9 Test results of the classification algorithms with respect to RG-Guard model\nFull size table\n5.1 Model explainability using LIME (local interpretable model-agnostic explanation)\nLIME is a post hoc model-independent annotation technique that aims to approximate any black-box machine learning model with a local, interpretable model to explain each individual prediction [57]. The authors suggest that since LIME is independent of the original classifier, the model can be used to explain any classifier, regardless of the algorithm used for predictions. As a result, LIME works locally, which means that it is observation-specific and provides explanations for the prediction associated with each observation. What LIME does is try to fit a local model using sample data points similar to the observation being explained [58].\n\nIn order to explain the classification results of the RG-Guard model, the LIME model was applied to the dataset results. The aim here is to interpret which variables positively or negatively affect the results obtained by the RG-Guard model in risk classification. In general, the application of LIME to the RG-Guard model is as shown in Algorithm 2.\n\nfigure c\nAlgorithm 2 Sparse linear explanations using LIME\n\nWhere;\n\n1.\nK is a limit on the number of variables to be considered for the explanation.\n\n2.\nx\u2019 (interpretable representation): This binary vector is a human-understandable version of the actual features used by the original model.\n\n3.\nz\u2019 (perturbed sample): a fraction of nonzero elements of x\u2019.\n\n4.\nf(z): class label\n\n5.\ng(z\u2019): This is the model learnt by LIME (explanation model).\n\nThe RG-Guard model assigns labels as normal and suspicious according to the risk values as shown in Table 10 to influence suspicious transactions and to restrict transactions accordingly.\n\nTable 10 Risk labelling table by the risk value produced by the RG-Guard model\nFull size table\nThe results of the LIME algorithm applied to the model to explain the effects of the characteristics of the dataset created for the RG-Guard model to perform risk classification on risk labelling are shown in Fig. 6. Accordingly, the model achieved an average accuracy of 0.9975 for the results labelled as \"Normal\" and 0.9946 for the results labelled as \"Suspicious\". According to the LIME description, AvgTimeTx, OutNumberTotalFailed_txn, TotalSuccess_txn, AvgGaspriceSent, UniqueTxnReceived TotalTxn, in_ suspicious and out_ suspicious features are affected by the high confidence value.\n\nFig. 6\nfigure 6\nLIME description of the dataset for risk labelling of the RG-Guard model\n\nFull size image\n5.2 Limitations of the study\n5.2.1 Data and source limitations\nIn the current study, a total of 2,211,422 data were used. Within this dataset, there are 215,451 data belonging to phishing and RG-Guard filter. This number can be further increased to increase the precision of the machine learning model.\n\n5.2.2 Methodological limitations\nWe proposed the LSTM\u2009+\u2009SoftMax hybrid classifier, which has a very powerful structure among our machine learning model training methods. The most important reason for choosing this method was that we obtained more successful results than algorithms such as Decision tree, XGB, Random forest, LGBM and DNN. In future, research and experiments should be carried out on hybrid algorithms that provide more successful results suitable for the current dataset.\n\n5.2.3 Sample limitations\nThe existing dataset preferred for suspicious transaction detection in the study was developed and based on the sample used in the literature. This sample will diversify and increase in quantity with different illegal cyber incidents over time. Although this study represents a current sample today, it should be researched again with enriched datasets in future.\n\n5.2.4 Resource limitations\nResource Limitations: Since the main topic of our study is to develop solutions for suspicious transactions, the privacy of transactions in the crypto universe is of vital importance. This privacy issue limits the material resources for the experiments due to the processes of overcrowding, data collection, dataset enrichment and anonymisation.\n\n6 Conclusion\nIn this study, an LSTM\u2009+\u2009Softmax-based suspicious transaction detection model called RG-Guard is proposed for secure payment transactions in social applications to be developed in the metaverse ecosystem. Since the majority of cryptocurrencies used in metaverse applications are on the Ethereum network. The RG-Guard model was developed for this network. The LSTM deep learning algorithm is used since previous and next transaction information is important for suspicious transaction detection in Ethereum network. For the classification accuracy and risk levelling feature of the RG-Guard model, a softmax function is applied to the output of the LSTM model. In the resulting hybrid model, hyperparameters are optimised to ensure maximum accuracy. For the suspicious transaction detection of the RG-Guard engine, transaction information in the Ethereum network and account public addresses used in phishing attacks from scam systems were collected and processed, and a dataset unique to the study was created. The proposed model groups each transaction according to five different risk levels and detects suspicious transactions at risk levels 3, 4 and 5. The developed model was compared and validated both in the literature and with similar learning models. The RG-Guard warning and detection model was observed to perform classification with an accuracy of over 99% in the test studies. As a result, in future, it is aimed that users of metaverse social applications will experience a safer application experience by detecting possible suspicious money transfers and ensuring that the payment process takes place smoothly in crypto payments.\n\nIn future stages of the study, it is planned to integrate the developed RG-Guard model into a live metaverse social application and improve the attack surface by adding more suspicious transaction scenarios."
    }
}