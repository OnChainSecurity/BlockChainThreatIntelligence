{
    "threat_intelligence": {
        "url": "https://x.com/ShieldifyAnon/status/1799402404070264975",
        "timestamp": "2024-06-08 19:25:39",
        "original_content": "Inflation Attack - examples + code We will deep dive into the third high-\nseverity finding in\n\n[@code4rena](/code4rena)\n\n's KelpDAO contest. In simple terms, wardens had to audit a vault, node\ndelegators (they\u2019re used to invest in strategies), rsETH token (vault token)\nand oracle to calculate the price of rsETH. Let\u2019s look at how the attacker\ncould exploit an inflation attack in that protocol Firstly, here\u2019s the\n`depositAsset()` function inside the vault contract:\n\n[![Image](https://pbs.twimg.com/media/GPjAMbSXIAAjNnw?format=jpg&name=medium)](/ShieldifyAnon/status/1799402404070264975/photo/1)\n\nThe interesting thing here is L141 where we call `_mintRsETH()`:\n\n[![Image](https://pbs.twimg.com/media/GPjAcO0WkAAwnaz?format=jpg&name=medium)](/ShieldifyAnon/status/1799402404070264975/photo/2)\n\nAs you can see it takes the amount that the user deposited and calculates how\nmuch rsETH should be minted for that amount of deposit. Let\u2019s go into\n`getRsETHAmountToMint()`:\n\n[![Image](https://pbs.twimg.com/media/GPjAkf-\nXwAA5A_4?format=jpg&name=medium)](/ShieldifyAnon/status/1799402404070264975/photo/3)\n\nAt first glance, it looks different from what we showed in the theory section.\nTo understand how this equation calculates the amount of rsETH, we have to\ndive into both `getAssetPrice()` and `getRSETHPrice()`:\n\n[![Image](https://pbs.twimg.com/media/GPjB0nhXEAA0HvC?format=jpg&name=medium)](/ShieldifyAnon/status/1799402404070264975/photo/4)"
    }
}