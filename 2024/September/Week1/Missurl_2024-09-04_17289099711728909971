{
    "threat_intelligence": {
        "url": "https://www.slowmist.com/service-smart-contract-security-audit.html",
        "timestamp": "2024-09-04 00:00:00",
        "original_content": "\n\n\n\n\n\nSmart Contract Security Audit\n\n\nThe SlowMist security team has audited more than 1,500 well-known smart contracts, covering public blockchain platforms such as Ethereum and blockchains based on the Ethereum Virtual Machine (EVM), EOS, Fabric, Solana, Klaytn, Aptos. During these audits, we also discovered hundreds of high-risk and medium-risk vulnerabilities. SlowMist is the first Chinese company to enter the Etherscan smart contract security audit recommendation list. The audit report service has received recognition and appreciation from dozens of well-known exchanges, such as the Best Security Audit Partner award by OKX.\n\n\n\n\n\n\n\n\nSlowMist Smart Contract Security Audit Result Query\n\n\n\n\n\n\n\n\nSorry! Can't find your smart contract\n\n\n\n\n\n\n\n\nProcessing Flow\n\n\n\n\nBusiness Communication\n\n\nProject Evaluation\n\n\nPay for Expenses\n\n\nSecurity Audit\n\n\nIssue a Report\n\n\n\n\n\n\n\n\nSmart Contract Security Audit Program\n\n\n\n\n\n\n\n\nToken Security Audit\n\n\n\n\n\n\n\n\nSerial Number\n\n\nAudit Class\n\n\nAudit Subclass\n\n\n\n\n\n\n\n\n\n\n1\n\n\nOverflow Audit\n\n\n-\n\n\n\n\n\n\n2\n\n\nRace Conditions Audit\n\n\n-\n\n\n\n\n\n\n3\n\n\nPermission Vulnerability Audit\n\n\nAccess Control Audit\n\n\n\n\n\n\nExcessive Authority Audit\n\n\n\n\n\n\n4\n\n\nSecurity Design Audit\n\n\nExternal Module Safe Use Audit\n\n\n\n\n\n\nCompiler Version Security Audit\n\n\n\n\n\n\nHard-coded Address Security Audit\n\n\n\n\n\n\nFallback Function Safe Use Audit\n\n\n\n\n\n\nShow Coding Security Audit\n\n\n\n\n\n\nFunction Return Value Security Audit\n\n\n\n\n\n\nLow-level Call Function Security Audit\n\n\n\n\n\n\n5\n\n\nDenial of Service Audit\n\n\n-\n\n\n\n\n\n\n6\n\n\nGas Optimization Audit\n\n\n-\n\n\n\n\n\n\n7\n\n\nDesign Logic Audit\n\n\n-\n\n\n\n\n\n\n8\n\n\n\"False Top-up\" Vulnerability Audit\n\n\n-\n\n\n\n\n\n\n9\n\n\nMalicious Event Log Audit\n\n\n-\n\n\n\n\n\n\n10\n\n\nScoping and Declarations Audit\n\n\n-\n\n\n\n\n\n\n11\n\n\nReplay Attack Audit\n\n\nECDSA's Signature Replay Audit\n\n\n\n\n\n\n12\n\n\nUninitialized Storage Pointer Audit\n\n\n-\n\n\n\n\n\n\n13\n\n\nArithmetic Accuracy Deviation Audit\n\n\n-\n\n\n\n\n\n\n14\n\n\nNon-privacy/Non-dark Coin Audit\n\n\n-\n\n\n\n\n\n\n\n\nDeFi Security Audit\n\n\n\n\n\n\n\n\nSerial Number\n\n\nAudit Class\n\n\nAudit Subclass\n\n\n\n\n\n\n\n\n\n\n1\n\n\nOverflow Audit\n\n\n-\n\n\n\n\n\n\n2\n\n\nReentrancy Attack Audit\n\n\n-\n\n\n\n\n\n\n3\n\n\nReplay Attack Audit\n\n\n-\n\n\n\n\n\n\n4\n\n\nFlashloan Attack Audit\n\n\n-\n\n\n\n\n\n\n5\n\n\nRace Conditions Audit\n\n\nReordering Attack Audit\n\n\n\n\n\n\n6\n\n\nPermission Vulnerability Audit\n\n\nAccess Control Audit\n\n\n\n\n\n\nExcessive Authority Audit\n\n\n\n\n\n\n7\n\n\nSecurity Design Audit\n\n\nExternal Module Safe Use Audit\n\n\n\n\n\n\nCompiler Version Security Audit\n\n\n\n\n\n\nHard-coded Address Security Audit\n\n\n\n\n\n\nFallback Function Safe Use Audit\n\n\n\n\n\n\nShow Coding Security Audit\n\n\n\n\n\n\nFunction Return Value Security Audit\n\n\n\n\n\n\nExternal Call Function Security Audit\n\n\n\n\n\n\nBlock data Dependence Security Audit\n\n\n\n\n\n\ntx.origin Authentication Security Audit\n\n\n\n\n\n\n8\n\n\nDenial of Service Audit\n\n\n-\n\n\n\n\n\n\n9\n\n\nGas Optimization Audit\n\n\n-\n\n\n\n\n\n\n10\n\n\nDesign Logic Audit\n\n\n-\n\n\n\n\n\n\n11\n\n\nVariable Coverage Vulnerability Audit\n\n\n-\n\n\n\n\n\n\n12\n\n\n\"False Top-up\" Vulnerability Audit\n\n\n-\n\n\n\n\n\n\n13\n\n\nScoping and Declarations Audit\n\n\n-\n\n\n\n\n\n\n14\n\n\nMalicious Event Log Audit\n\n\n-\n\n\n\n\n\n\n15\n\n\nArithmetic Accuracy Deviation Audit\n\n\n-\n\n\n\n\n\n\n16\n\n\nUninitialized Storage Pointer Audit\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nMove Security Audit\n\n\n\n\n\n\n\n\nSerial Number\n\n\nAudit Class\n\n\nAudit Subclass\n\n\n\n\n\n\n\n\n\n\n1\n\n\nOverflow Audit\n\n\n-\n\n\n\n\n\n\n2\n\n\nReplay Attack Audit\n\n\n-\n\n\n\n\n\n\n3\n\n\nFlashloan Attack Audit\n\n\n-\n\n\n\n\n\n\n4\n\n\nRace Conditions Audit\n\n\nReordering Attack Audit\n\n\n\n\n\n\n5\n\n\nPermission Vulnerability Audit\n\n\nAccess Control Audit\n\n\n\n\n\n\nExcessive Authority Audit\n\n\n\n\n\n\n6\n\n\nSafety Design Audit\n\n\nExternal Module Safe Use Audit\n\n\n\n\n\n\nExternal Call Function Security Audit\n\n\n\n\n\n\nExplicit Visibility of Functions Audit\n\n\n\n\n\n\nBlock data Dependence Security Audit\n\n\n\n\n\n\n7\n\n\nDenial of Service Audit\n\n\n-\n\n\n\n\n\n\n8\n\n\nGas Optimization Audit\n\n\n-\n\n\n\n\n\n\n9\n\n\nDesign Logic Audit\n\n\n-\n\n\n\n\n\n\n10\n\n\nArithmetic Accuracy Deviation Audit\n\n\n-\n\n\n\n\n\n\n11\n\n\nCapability Safe Use Audit\n\n\n-\n\n\n\n\n\n\n12\n\n\nResource Security Usage Audit\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nSolana Security Audit\n\n\n\n\n\n\n\n\nSerial Number\n\n\nAudit Class\n\n\n\n\n\n\n\n\n\n\n1\n\n\nReentrancy Vulnerability\n\n\n\n\n\n\n2\n\n\nReplay Vulnerability\n\n\n\n\n\n\n3\n\n\nReordering Vulnerability\n\n\n\n\n\n\n4\n\n\nDenial of Service Vulnerability\n\n\n\n\n\n\n5\n\n\nRace Conditions Vulnerability\n\n\n\n\n\n\n6\n\n\nAuthority Control Vulnerability\n\n\n\n\n\n\n7\n\n\nInteger Overflow and Underflow Vulnerability\n\n\n\n\n\n\n8\n\n\nArithmetic Accuracy Deviation Audit\n\n\n\n\n\n\n9\n\n\nUnsafe External Call Audit\n\n\n\n\n\n\n10\n\n\nDesign Logic Audit\n\n\n\n\n\n\n11\n\n\nScoping and Declarations Audit\n\n\n\n\n\n\n12\n\n\nForged account attack Audit\n\n\n\n\n\n\n\n\n\n\n\n\nEOS Security Audit\n\n\n\n\n\n\n\n\nSerial Number\n\n\nAudit Class\n\n\nAudit Subclass\n\n\n\n\n\n\n\n\n\n\n1\n\n\nOverflow Audit\n\n\n-\n\n\n\n\n\n\n2\n\n\nAuthority Control Audit\n\n\nAuthority Vulnerability Audit\n\n\n\n\n\n\nAuthority Excessive Audit\n\n\n\n\n\n\n3\n\n\nSecurity Design Audit\n\n\nHard-coded Audit\n\n\n\n\n\n\nShow coding Audit\n\n\n\n\n\n\nAbnormal check Audit\n\n\n\n\n\n\nType Security Audit\n\n\n\n\n\n\n4\n\n\nDenial of Service Audit\n\n\n-\n\n\n\n\n\n\n5\n\n\nPerformance Optimization Audit\n\n\n-\n\n\n\n\n\n\n6\n\n\nDesign Logic Audit\n\n\n-\n\n\n\n\n\n\n7\n\n\nFalse Notice Audit\n\n\n-\n\n\n\n\n\n\n8\n\n\nFalse Error Notification Audit\n\n\n-\n\n\n\n\n\n\n9\n\n\nCounterfeit Token Audit\n\n\n-\n\n\n\n\n\n\n10\n\n\nRandom Number Security Audit\n\n\n-\n\n\n\n\n\n\n11\n\n\nRollback Attack Audit\n\n\n-\n\n\n\n\n\n\n12\n\n\nReplay Attack Audit\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSecurity Research\n\n\n\n\n\n\n\n\nSep 12 \n2024\n\n\nSlowMist: Best Practices for Toncoin Smart Contract Security\n\n\nTON (The Open Network) is a decentralized blockchain platform initially designed and developed by the Telegram team, which gained significant attention upon its launch. TON aims to offer a high-performance and scalable blockchain to support large-scale decentralized applications (DApps) and smart contracts. For a foundational understanding of TON, including accounts, tokens, transactions, and asset security, refer to the guide: *Introduction to TON*.\n\n\n\n\n\n\n\n\n\n\n\n\nSep 5 \n2024\n\n\nSlowMist Incident Analysis \u2014 Penpie Attack\n\n\nOn September 4, 2024, the decentralized liquidity yield project Penpie was attacked, resulting in nearly $30 million in losses. The SlowMist security team conducted an analysis of this incident, and the findings are as follows:\n\n\n\n\n\n\n\n\n\n\n\n\nJun 12 \n2024\n\n\nAnalysis of the UwU Lend Hack\n\n\nOn June 10, 2024, the SlowMist MistEye security monitoring system detected a $19.3M attack on UwU Lend, a platform providing digital asset lending services on the EVM chain. Here's what we found:\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
}