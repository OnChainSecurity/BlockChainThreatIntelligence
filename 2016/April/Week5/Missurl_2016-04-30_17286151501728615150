{
    "threat_intelligence": {
        "url": "https://www.sfox.com/blog/how-secure-is-ethereum/",
        "timestamp": "2016-04-30 00:00:00",
        "original_content": "\n\nOn April 30, 2016, the DAO \u2014 an automated, decentralized venture capital fund \u2014 was launched on Ethereum. Less than two months later, it was hacked, and over $60 million worth of ether vanished in an instant.\n\n\nThe potential of\u00a0\nnew blockchain technology like Ethereum\n\u00a0doesn\u2019t count for much if it comes at the expense of security. Incidents like the DAO invite the question: Just how secure\u00a0\nis\n\u00a0the new, decentralized supercomputer that is Ethereum?\n\n\nThe short answer is this:\u00a0\nEthereum itself is more secure than you might think, but using a decentralized app or exchange that hasn\u2019t be properly vetted could leave you and your ether compromised.\n\n\nRead on for a breakdown of how best to understand the major security issues of Ethereum and its smart contracts.\n\n\n\u201cIs Ethereum secure?\u201d is an ambiguous question\n\n\nAsking whether Ethereum is secure is like asking if computers are secure: you need to be more specific if you want the question to be meaningful.\n\n\nAt bottom, Ethereum is a\u00a0\nblockchain\u00a0\nlike Bitcoin\u2019s blockchain: its mining community solves computationally complex problems in order to add new blocks to the public ledger of transactions. The functionality of Ethereum\u2019s blockchain is different from Bitcoin\u2019s, though: it\u2019s designed to operate as a virtual machine that executes\u00a0\nsmart contracts,\u00a0\nwhich\n\u00a0\ndevelopers can program in a Turing-complete programming language.\n\n\nSo, when you ask \u201cIs Ethereum secure?\u201d, you need to answer the further question:\u00a0\nAre you talking about the security of Ethereum blockchain, or are you talking about the security of the smart contracts built on top of Ethereum?\n\n\nOftentimes, people will look at a high-profile hack that\u2019s the result of a problem with smart contracts and infer that the Ethereum blockchain itself is unsafe to use. That\u2019s a bad inference: it\u2019s a little like pointing to scam emails and inferring that the entire internet is unsafe to use.\n\n\nMaking matters more complicated,\u00a0\nLayer 2 networks\n, which are becoming increasingly popular, add another distinct dimension to the Ethereum ecosystem with its own security concerns. Layer 2 networks are distinct from the Ethereum blockchain, and strive to take some of the computational strain off of that main blockchain to increase its overall scalability.\n\n\nRaiden Network\n is one of the proposed Layer 2 solutions for scaling Ethereum.\n\n\n\u00a0\n\n\nFor the purposes of this article, we\u2019ll focus mostly on the infrastructure of the Ethereum blockchain and its smart contracts \u2014 but it\u2019s worth noting that these Layer 2 networks won\u2019t be an improvement on Ethereum if they compromise its security in the process.\n\n\nTo get the full picture of what it takes for the Ethereum ecosystem to be secure, we need to examine both the blockchain and smart contracts individually. Let\u2019s start with the foundation: the blockchain that makes everything from DApps to ICOs possible.\n\n\n\u201cEthereum hacks\u201d usually don\u2019t have much to do with Ethereum\n\n\nMost of the high-profile \u201cEthereum security problems\u201d you\u2019ve read about \u2014 like the DAO hack \u2014 aren\u2019t the result of vulnerabilities in the Ethereum blockchain itself. Those problems have more to do with the infrastructure of smart contracts; the blockchain, in contrast, has proven to be fairly reliable over time.\n\n\nThe basic concept of a blockchain \u2014 whether it\u2019s Ethereum, Bitcoin, or something else altogether \u2014 is that no one can seize control of the network or add fraudulent blocks to the chain unless they control the majority of the network\u2019s computational power. The economic incentives that Ethereum provides to its miners \u2014 transaction fees, along with newly minted ether, for every successfully mined block \u2014 encourages miners to act in the network\u2019s best interests rather than trying to undermine or manipulate it.\n\n\nProof-of-stake could make the blockchain even more secure \u2014 but it\u2019s not a sure thing\n\n\nYou might have heard that Ethereum is transitioning from proof-of-work mining to\u00a0\nproof-of-stake mining\n. In the former model, miners race to solve computationally complex problems to add the next block to the blockchain. In the latter model, validator nodes on the network take turns proposing and validating blocks \u2014 and both the weight of a node and the size of its reward is based on the number of coins that the node is staking.\n\n\nIt\u2019s natural to ask how this shift in consensus mechanism will impact network security: will this make it easier for bad actors to compromise the entire Ethereum blockchain?\n\n\nThere\u2019s actually good reason to believe that proof-of-stake will make the Ethereum blockchain\u00a0\nmore\u00a0\nsecure. To take control of a proof-of-work blockchain, you need to control 51% of the computing power. To take control of a proof-of-stake blockchain, on the other hand, you need to control 51% of all the coins that are staked. It\u2019s much more expensive to control that much ETH than it is to control that much computing power:\n\n\n\n\nProof-of-work 51% attack:\u00a0\naccording to\u00a0\n51crypto\n, a 1-hour attack on Ethereum using proof-of-work would currently cost $282,539.\n\n\nProof-of-stake 51% attack:\u00a0\nthe current market cap on Ethereum is $38.67 billion, meaning that it would take $19.72 billion to control half of all ETH. Not all ETH will be staked, but if even 0.01% of ETH is staked, an attack would cost millions.\n\n\n\n\nThat\u2019s not to say that proof-of-stake is categorically\u00a0\nbetter\u00a0\nthan proof-of-work, and there are a lot of open questions that still need to be resolved before we can say for sure whether it\u2019s an improvement in terms of safety.\n\n\nFor example: right now, many people keep their ETH and other crypto holdings directly on exchanges in order to execute trades quickly. However, if exchanges don\u2019t explicitly adopt and enforce polcies that prevent them from doing so, they could end up staking their users\u2019 ETH to passively generate more ETH \u2014 something roughly analogous to how banks invest the money that individuals store there. If exchanges have security vulnerabilities, this could lead to broader vulnerabilities in the Ethereum blockchain, not to mention greater risk for the users who store ETH there.\n\n\nThe flexibility of Ethereum smart contracts undermines their security\n\n\nWhen it comes to cryptocurrencies, there\u2019s a tradeoff between flexibility and security: the more degrees of freedom you give developers on your blockchain, the more risk of hacking you introduce. The smart contracts of Ethereum are an object lesson in this exact tradeoff.\n\n\nThe programming languages of Ethereum \u2014 most prominently,\u00a0\nSolidity\n\u00a0\u2014 are designed with flexibility in mind. Unlike Bitcoin, whose programming language is intentionally limited in order to serve a very narrow functionality (namely, serving as\u00a0\na digital store of value\n\u00a0and digital cash) Ethereum allows developers to make virtually any kind of DApp or token they could imagine.\n\n\nThis flexibility has led to many of the most prominent Ethereum-related security breaches over the years. Return to the DAO hack, for example. In\u00a0\nhis postmortem on the hack\n, Cornell research Philip Daian said that he \u201cwould lay at least 50% of the blame for this exploit squarely at the feet of the design of the Solidity language.\u201d\n\n\n\n\n[The DAO] contract, even if coded using best practices and the following language documentation exactly, would have remained vulnerable to attack. [\u2026] [T]his was actually not a flaw or exploit in the DAO contract itself: technically the EVM was operating as intended, but Solidity was introducing security flaws into contracts that were not only missed by the community, but missed by the designers of the language themselves.\n\n\n\n\nIn 2016,\u00a0\nNicola Atzei, Massimo Bartoletti, and Tiziana Cimoli\n\u00a0outlined 12 potential Ethereum vulnerabilities \u2014 of these 12, 6 were problems with Solidity itself (3 more were in the EVM, and 3 more in the Blockchain). They emphasize that much of the Ethereum ecosystem\u2019s vulnerability comes directly from its programming language.\n\n\nInterestingly, this vulnerability may not be solely due to the language\u2019s flexibility, but also because its semantics make it difficult for experienced programmers to master: as Atzei, Bartoletti, and Cimoli observe, Solidity\u00a0\nlooks\u00a0\na lot like Javascript but doesn\u2019t always behave like Javascript, especially with respect to domain-specific functions like recording transcripts on a public blockchain. Imagine trying to learn a language with all the same words as English, but with significantly different grammar: in many ways, that could be harder than learning a totally foreign language, since you\u2019re constantly being forced to fight your instincts.\n\n\nThere\u2019s also a more pragmatic issue to keep in mind here, which illustrates one potential downside to the \u201cdecentralization\u201d that so many within the crypto community reify: Atzei, Bartoletti, and Cimoli point out that \u201cthe documentation of known [smart contract] vulnerabilities is scattered through several sources, including the official documentation, research papers, and also Internet discussion forums.\u201d Even with centralized organizations and resources increasingly growing around Ethereum, learning to write smart contracts requires a kind of scavenger hunt through a wide range of websites and chat rooms. That makes it all the more challenging to master a field that\u2019s in a constant state of evolution.\n\n\n\n\nIf you want to keep up-to-date on the latest smart contract vulnerabilities, consider following\u00a0\nPeckShield\n, a blockchain security advisory company that publishes bugs they\u2019ve identified in Ethereum smart contracts. They keep\u00a0\na running list\n\u00a0of bugs they\u2019ve identified \u2014 from the start of the year until now, the count stands at 30.\n\n\nBefore you start using Ethereum, do your homework\n\n\nSo, how secure\u00a0\nis\u00a0\nEthereum? Well, the protocol itself is more secure than you might expect. The entire concept of blockchain technology is predicated upon the miners who maintain and propagate the network being incentivized to act in the best interests of the network as a whole. And because the network is decentralized, there aren\u2019t intrinsic points of failure that could compromise huge numbers of network users at once \u2014 points of failure like the\u00a0\nEquifax servers,\n\u00a0a hack of which compromised roughly 200,000 credit cards last year.\n\n\n\n\nSimilar to the internet, the \u201cpoints of failure\u201d in Ethereum are in decentralized apps with security that\u2019s not up to snuff. Think back to the early, \u201cWild West\u201d days of the internet: people started building and publishing content before cybersecurity could catch up. The current state of smart contract development is a little like that. While the Ethereum blockchain itself has proven fairly reliable, the smart contracts built on top of it are still maturing, and there are bound to be more security hiccups before the space fully matures.\n\n\nSo, the importance of due diligence can\u2019t be overstated: before you pick a wallet to store ether in, and before you use ether in a particular DApp, do as much research as you can. Read the code critically. Listen to what are people saying about it on Reddit? Has it experienced any security breaches in the past? In crypto, a solid knowledge base is your strongest asset. That\u2019s how you\u2019ll reap all the benefits of the very first DApps and ICOs without getting burned in the process.\n\n\nThe above references an opinion and is for informational purposes only. It is not intended as and does not constitute investment advice, and is not an offer to buy or sell or a solicitation of an offer to buy or sell any cryptocurrency, security, product, service or investment. Seek a duly licensed professional for investment advice. The information provided here or in any communication containing a link to this site is not intended for distribution to, or use by, any person or entity in any jurisdiction or country where such distribution or use would be contrary to law or regulation or which would subject SFOX, Inc. or its affiliates to any registration requirement within such jurisdiction or country. Neither the information, nor any opinion contained in this site constitutes a solicitation or offer by SFOX, Inc. or its affiliates to buy or sell any cryptocurrencies, securities, futures, options or other financial instruments or provide any investment advice or service.\n\n\n\n"
    }
}