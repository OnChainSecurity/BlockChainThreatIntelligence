{
    "threat_intelligence": {
        "url": "https://developers.circle.com/circle-mint/docs/swap-usdc-across-blockchains",
        "timestamp": "2020-09-21 00:00:00",
        "original_content": "Circle APIs enable you to easily transfer USDC funds from one blockchain to another. Circle uses a \"private bridge\" approach to act as a counter-party to the swap operation. This means that funds being swapped are temporarily kept in Circle's custody. This process is fully automated and involves no human intervention, so you don\u2019t need to manually interact with both blockchains as usual.\n\n\nIn this example, we'll transfer USDC funds from the \nEthereum\n blockchain to the \nAlgorand\n blockchain. However, it makes no difference which \nsupported chains\n you decide to use or in which order.\n\n\n\n\nDo NOT send real / live USDC to addresses generated in the sandbox environment, as your funds might be permanently lost.\n\n\n\n\n1. Get a sandbox API key\n\n\nIf you don't yet have an API key in the sandbox environment, take a few moments to \ncreate a sandbox account\n. (Learn more about Circle\u2019s sandbox and APIs \nhere\n.\n\n\nGet an API key\n\n\n2. Receive USDC from the Ethereum blockchain\n\n\n\n\nYou can transfer USDC from an external wallet on any of the \nsupported chains\n into a Circle wallet you control.\n\n\n\n\nStart by transferring USDC from an external \nEthereum\n wallet.\n\n\nCreate a Wallet\n\n\nFirst, use the command below to create a new wallet to receive the external funds via the  \ncreate a wallet\n API endpoint.  Be sure to create your own \nidempotency key\n.\n\n\nTerminal\nBash\n# Replace ${YOUR_API_KEY} with your API key\n\ncurl -H 'Content-type: application/json' \\\n  -H \"Authorization: Bearer ${YOUR_API_KEY}\" \\\n  -X POST https://api-sandbox.circle.com/v1/wallets \\\n  --data '{\"idempotencyKey\": \"4ddef365-f2fc-4a56-95f5-a214c84ba8f4\"}'\n\nCopy\nCopied!\n\n\nThe response should look like this:\n\n\nCreate wallet response\nJSON\n{\n\n\n  \n\"data\"\n:\n{\n\n\n    \n\"walletId\"\n:\n\"1000005062\"\n,\n\n\n    \n\"entityId\"\n:\n\"7cbdedb1-d526-46b4-af12-4162a002eb9c\"\n,\n\n\n    \n\"type\"\n:\n\"end_user_wallet\"\n,\n\n\n    \n\"balances\"\n:\n[\n]\n\n\n  \n}\n\n\n}\n\n\nCopy\nCopied!\n\n\nCreate a Deposit Address\n\n\n\n\nBecause wallets are not tied to specific blockchains, you can generate deposit addresses for wallets, allowing you to receive transfers from different chains.\n\n\n\n\nTo create a new \nEthereum\n deposit address, use the \ncreate a blockchain address\n API endpoint.  To ensure the API generates a USDC deposit address for the Ethereum blockchain, specify the origin\ncurrency\n (\nUSD\n) and \nchain\n (\nETH\n) attributes. Change the chain attribute to create deposit addresses on other \nsupported chains\n .\n\n\nCreate a deposit address for your wallet using the command below.\n\n\nTerminal\nBash\n# Replace ${YOUR_API_KEY} with your API key\n\n# Replace ${WALLET_ID} with the wallet id from the previous step\ncurl -H 'Accept: application/json' \\\n  -H 'content-type: application/json' \\\n  -H \"Authorization: Bearer ${YOUR_API_KEY}\" \\\n  -X POST --url https://api-sandbox.circle.com/v1/wallets/${WALLET_ID}/addresses \\\n  --data '{\"idempotencyKey\": \"ed9a7b3b-b45f-4262-a8aa-8dfee5a4f31b\", \"currency\": \"USD\", \"chain\": \"ETH\"}'\n\nCopy\nCopied!\n\n\nThe response should look like this:\n\n\nCreate address response\nJSON\n{\n\n\n  \n\"data\"\n:\n{\n\n\n    \n\"address\"\n:\n\"0x618b24211048c6ec8b29e8129c2bbc5cf80c9f0b\"\n,\n\n\n    \n\"currency\"\n:\n\"USD\"\n,\n\n\n    \n\"chain\"\n:\n\"ETH\"\n\n\n  \n}\n\n\n}\n\n\nCopy\nCopied!\n\n\naddressTag\n for Stellar\nFor blockchains that support destination tags or memos, you'll see an additional \naddressTag\n attribute returned with the deposit address. When present, this value is required when depositing USDC.\n\n\nTransfer USDC\n\n\nCircle's sandbox environment is connected to the Ethereum Sepolia testing network, so you can send USDC from a Sepolia wallet into your Circle hosted wallet.\n\n\nUse supported chains and currencies only\nTransferring unsupported currencies using the Accounts API may result in a permanent loss of funds. You can verify the token contract details for supported currencies \nhere\n.\n\n\nNow transfer the funds from the Ethereum blockchain. Circle's \nsandbox environment\n is connected to the \nEthereum Sepolia testing network\n, so you can send USDC from a Sepolia wallet into your Circle hosted wallet.\n\n\n\n\nVisit \nUSDC on Testing Networks\n to learn more about support on other blockchains.\n\n\n\n\nIf you need USDC to send, you can obtain some USDC on the Sepolia network for testing by using a \nUSDC faucet\n. Go to \nfaucet.circle.com\n and make sure you choose the \nSepolia\n button. Paste the deposit (wallet) address you created above and hit Submit.\n\n\n\n\nBe very careful not to miss any characters in the deposit address.\n\n\n\n\nMonitor the transfer on the blockchain by using the Sepolia Etherscan link provided by the faucet.\n\n\nAlternately, you can obtain USDC by \nfunding a test wallet with a payment\n and then transferring USDC out of that wallet.\n\n\n3. Check the Status of the Transfer\n\n\nUse the \nlist all transfers\n API endpoint (as in the command below) to find transfers that are routed to to the wallet you created earlier.\n\n\nTerminal\nBash\n# Replace ${YOUR_API_KEY} with your API key\n\n# Replace ${WALLET_ID} with the wallet id from the previous step\ncurl -H \"Authorization: Bearer ${YOUR_API_KEY}\" \\\n  -X GET https://api-sandbox.circle.com/v1/transfers?destinationWalletId=${WALLET_ID}\n\nCopy\nCopied!\n\n\nThe response should look like this:\n\n\nGet wallet transfers response\nJSON\n{\n\n\n  \n\"data\"\n:\n[\n\n\n    \n{\n\n\n      \n\"id\"\n:\n\"9f6362f4-a3d2-396e-a1eb-b628ec3a29b2\"\n,\n\n\n      \n\"source\"\n:\n{\n\n\n        \n\"type\"\n:\n\"blockchain\"\n,\n\n\n        \n\"chain\"\n:\n\"ETH\"\n\n\n      \n}\n,\n\n\n      \n\"destination\"\n:\n{\n\n\n        \n\"type\"\n:\n\"wallet\"\n,\n\n\n        \n\"id\"\n:\n\"1000005062\"\n,\n\n\n        \n\"address\"\n:\n\"0x618b24211048c6ec8b29e8129c2bbc5cf80c9f0b\"\n\n\n      \n}\n,\n\n\n      \n\"amount\"\n:\n{\n\n\n        \n\"amount\"\n:\n\"1.00\"\n,\n\n\n        \n\"currency\"\n:\n\"USD\"\n\n\n      \n}\n,\n\n\n      \n\"transactionHash\"\n:\n\"0xbd3085c3faed933f4093a7b93419ca934fa09d62fe62115d4b3f38a4a94e3a89\"\n,\n\n\n      \n\"status\"\n:\n\"running\"\n,\n\n\n      \n\"createDate\"\n:\n\"2020-09-21T18:50:06.202Z\"\n\n\n    \n}\n\n\n  \n]\n\n\n}\n\n\nCopy\nCopied!\n\n\nYou can look up the \ntransactionHash\n on \nEtherscan's tracker on Sepolia\n.\n\n\nAt first, the status is shown as running because the transaction has been recently initiated. In a few minutes, once the required 30 block confirmations have been completed, the status changes to complete. At that point Circle credits the receiving wallet with the value of the transfer.\n\n\nAt first, the \nstatus\n is shown as \nrunning\n because the transaction has been recently initiated. In a few minutes, once the required 30 block confirmations have been completed, the\nstatus\n changes to \ncomplete\n. At that point Circle credits the receiving wallet with the value of the transfer.\n\n\n\n\nRefer to our \nconfirmations guide\n to learn about block confirmation requirements for different chains.\n\n\n\n\nYou have successfully received USDC from the Ethereum blockchain using the Circle Wallets API.\n\n\n4. Send USDC to the Algorand blockchain\n\n\nAfter the receiving portion of the swap settles, you can initiate the second portion: sending USDC funds to an address on a different blockchain using the \ncreate a transfer\n API endpoint.\n\n\n\n\nMake sure you have an Algorand blockchain address to send to as the \ndestination\n.\n\n\nCircle's \nsandbox environment\n is connected to the \nAlgorand TestNet\n, so the destination blockchain address has to be a valid Algorand TestNet address.\n\n\n\n\nAlgorand Wallet TestNet Account\nDownload the \nAlgorand Wallet\n.  Under Settings > Node Settings, select TestNet. From the main wallet screen, note your account address.\n\n\nYour Algorand TestNet wallet address should look like this:\n BL27TI3CYMFX5URLYNBJJZGV4ABRYJJHBMLRR5OYSVPUVDIUAF66IR4COA\n.\n\n\nOpt-in to Accept the USDC Asset\nDue to \nAlgorand Standard Assets\n spam protection, you must opt in to accept new assets such as USDC. To do so, select Add New Asset, then search for \"USDC\" (the USDC asset ID on Algorand TestNet is \n10458941\n`).\n\n\nTo send funds to the external Algorand wallet, use the \ncreate a transfer\n API endpoint. Specify the \ncurrency\n and \nchain\n attributes that match the destination blockchain. Create a USDC transfer to an Algorand blockchain address by using the command below.\n\n\nTerminal\nBash\n# Replace ${YOUR_API_KEY} with your API key\n\n# Replace ${YOUR_WALLET_ID} with your master wallet id\ncurl -H 'Accept: application/json' \\\n  -H 'Content-type: application/json' \\\n  -H \"Authorization: Bearer ${YOUR_API_KEY}\" \\\n  -X POST https://api-sandbox.circle.com/v1/transfers \\\n  --data '{\"idempotencyKey\": \"fbba9d81-72f1-4bf8-97c8-99f1f28995e2\", \"source\": {\"type\": \"wallet\", \"id\": \"${YOUR_WALLET_ID}\"}, \"destination\": {\"type\": \"blockchain\", \"address\": \"BL27TI3CYMFX5URLYNBJJZGV4ABRYJJHBMLRR5OYSVPUVDIUAF66IR4COA\", \"chain\": \"ALGO\"}, \"amount\": {\"amount\": \"1.00\", \"currency\": \"USD\"}}'\n\nCopy\nCopied!\n\n\naddressTag\n for Stellar\nWhen you create a transfer on chains like Stellar that support destination tags or memos, you can use the optional\naddressTag\n parameter  to make sure your send is received correctly.\n\n\nFlow Vaults\nPrior to sending USDC to a wallet on the Flow network, make sure the wallet address is set up to receive a USDC transfer. In most cases, this involves selecting an option in the wallet\u2019s UI to \u201cadd USDC.\u201d See \nFlow documentation\n for details.\n\n\nThe response should look like this:\n\n\nCreate wallet transfer response\nJSON\n{\n\n\n  \n\"data\"\n:\n{\n\n\n    \n\"id\"\n:\n\"9dd86dfe-72e8-4182-9573-04196cc7d6cb\"\n,\n\n\n    \n\"source\"\n:\n{\n\n\n      \n\"type\"\n:\n\"wallet\"\n,\n\n\n      \n\"id\"\n:\n\"1000005062\"\n\n\n    \n}\n,\n\n\n    \n\"destination\"\n:\n{\n\n\n      \n\"type\"\n:\n\"blockchain\"\n,\n\n\n      \n\"address\"\n:\n\"BL27TI3CYMFX5URLYNBJJZGV4ABRYJJHBMLRR5OYSVPUVDIUAF66IR4COA\"\n,\n\n\n      \n\"chain\"\n:\n\"ALGO\"\n\n\n    \n}\n,\n\n\n    \n\"amount\"\n:\n{\n\n\n      \n\"amount\"\n:\n\"1.00\"\n,\n\n\n      \n\"currency\"\n:\n\"USD\"\n\n\n    \n}\n,\n\n\n    \n\"status\"\n:\n\"pending\"\n,\n\n\n    \n\"createDate\"\n:\n\"2020-09-21T20:31:39.507Z\"\n\n\n  \n}\n\n\n}\n\n\nCopy\nCopied!\n\n\n5. Check the Status of the Transfer\n\n\nUse the \nget a transfer\n API endpoint to retrieve details about the status of the transaction. You can use it as shown in the command below.\n\n\nTerminal\nBash\n# Replace ${YOUR_API_KEY} with your API key\n\n# Replace ${TRANSFER_ID} with the id of the transfer you created earlier\ncurl -H \"Authorization: Bearer ${YOUR_API_KEY}\" \\\n  -X GET https://api-sandbox.circle.com/v1/transfers/${TRANSFER_ID}\n\nCopy\nCopied!\n\n\nThe response should look like this:\n\n\nGet wallet transfer response\nJSON\n{\n\n\n  \n\"data\"\n:\n{\n\n\n    \n\"id\"\n:\n\"9dd86dfe-72e8-4182-9573-04196cc7d6cb\"\n,\n\n\n    \n\"source\"\n:\n{\n\n\n      \n\"type\"\n:\n\"wallet\"\n,\n\n\n      \n\"id\"\n:\n\"1000005062\"\n\n\n    \n}\n,\n\n\n    \n\"destination\"\n:\n{\n\n\n      \n\"type\"\n:\n\"blockchain\"\n,\n\n\n      \n\"address\"\n:\n\"BL27TI3CYMFX5URLYNBJJZGV4ABRYJJHBMLRR5OYSVPUVDIUAF66IR4COA\"\n,\n\n\n      \n\"chain\"\n:\n\"ALGO\"\n\n\n    \n}\n,\n\n\n    \n\"amount\"\n:\n{\n\n\n      \n\"amount\"\n:\n\"1.00\"\n,\n\n\n      \n\"currency\"\n:\n\"USD\"\n\n\n    \n}\n,\n\n\n    \n\"transactionHash\"\n:\n\"PS74XNN7GHNQTVEV52ZMYHR3CWTKLJUFZ5U3DD43P5WO6GO5VDLQ\"\n,\n\n\n    \n\"status\"\n:\n\"complete\"\n,\n\n\n    \n\"createDate\"\n:\n\"2020-09-23T21:35:03.563Z\"\n\n\n  \n}\n\n\n}\n\n\nCopy\nCopied!\n\n\nAlgorand transactions confirm in under 5 seconds, so your transfer\nstatus\n should quickly change to \ncomplete\n. See \nBlockchain Confirmations\n to find transaction times for all chains.\n\n\n6. Ready for the next step?\n\n\nAfter experimenting with our APIs, you\u2019ll want to start building test integrations in sandbox prior to moving into production. Start by applying for a \napplying for a Circle Mint account\n. We'll be happy to walk you through the next steps."
    }
}