{
    "threat_intelligence": {
        "url": "https://cloudsecurityalliance.org/blog/2020/10/26/blockchain-attacks-vulnerabilities-and-weaknesses",
        "timestamp": "2020-10-26 00:00:00",
        "original_content": "Blockchain attacks are very hot right now for one simple reason: it\u2019s where the money is.\nIf you attack and compromise a database you need to take that data and then sell it to monetize your attack. If you compromise a web server you need to install some malware to harvest credit card details, and then monetize that data by selling it. But if you steal crypto currency? That\u2019s literally money in the attackers wallet now.\n\nThe good news: law enforcement is getting better at tracing these transactions and following the money, the bad news: the blockchain industry is not very mature when it comes to identifying vulnerabilities and weaknesses.\n\nAttacks rely on a vulnerability being present so that they can exploit it. These vulnerabilities are implemented in software (web services, smart contracts, the underlying blockchain system, etc.) and can be any number of weaknesses such as logic bugs, reentrancy issues, integer overflows and so on.\n\nThere is no comprehensive list of Blockchain weaknesses\nAnd there is no comprehensive public list of weaknesses. There are a number of projects trying to do this, the US Government Department of Homeland Security actually sponsors one such effort, the Common Weakness Enumeration database (https://cwe.mitre.org/) database and there is a Solidity focuses Smart Contract Weakness Classification and Test Cases available from the SWC Registry (https://swcregistry.io/).\n\nWhy is a public list of such weaknesses important?\nSimple. How do you find and fix weaknesses in software if you don\u2019t have a name to call them, let alone the ability to properly describe the weakness and possible mitigations or solutions to them? Also like most things in life given the choice between using a public database or building your own data set most security scanning tools use the CWE database as their baselines for security flaws that they try to detect and offer guidance on remediating.\n\nThis means that Blockchain and smart contract security scanning tools will (probably) detect common and known issues like integer overflows and memory leaks. But they may not detect Blockchain and smart contract specific vulnerabilities as well since there is no good, comprehensive, public database to use as a source.\n\nCSA's has documented over 200 Blockchain weaknesses\nThe Cloud Security Alliance is of course working on this issue, we currently have a rough list of almost 200 weaknesses that apply to Blockchain and smart contracts, and about half of which are not in any other public database of weaknesses. You can view the full list of weaknesses here \u2192\n\n\n\nThe goal is to make this list of weaknesses more detailed and comprehensive, and encourage other public databases (such as CWE or SWC Registry) to include then so that ultimately automated tools will include support for them, making it easier for developers and end users to find, understand and fix vulnerabilities because attackers find and exploit them. If you are interested in joining this project please reach out to us, specifically the Attack Vectors/terms glossary sub Working Group, for more information please see https://csaurl.org/DLT-Security-Framework_sub_groups\n\nThe document Top 10 Blockchain Attacks, Vulnerabilities & Weaknesses compiles this research and gives an in-depth understanding of the most important weaknesses.\n\nPreview of Blockchain Weaknesses\nName of weakness\n\nDescription\n\nAPI Exposure\n\nIf an API is improperly exposed an attacker can attack it\n\nBlock Mining Race Attack\n\nA variation on the Finney attack\n\nBlock Mining Timejack Attack\n\nBy isolating a node the time signal can be manipulated getting the victim out of synchronization\n\nBlock Reordering Attack\n\nCertain cryptographic operations (such as using CBC or ECB incorrectly) allow blocks to be re-ordered and the results will still decrypt properly\n\nBlockchain Network Lacks Hash Capacity\n\nThe Blockchain/DLT network lacks hashing capacity, an attacker can rent sufficient hashing power to execute a 51% Attack\n\nBlockchain Peer flooding Attack\n\nBy creating a large number of fake peers in a network (peer to peer or otherwise) an attacker can cause real nodes to slow down or become non responsive as they attempt to connect to the newly announced peers.\n\nBlockchain Peer flooding Attack Slowloris variant\n\nBy creating a large number of slow peers (real systems that respond very slowly to network requests) in a network an attacker can cause real nodes to slow down or become non responsive as they attempt to connect to the newly announced peers. Unlike fake peers that do not exist these slowloris peers are real but communicate slowly enough to hold sockets and resources open for minutes or hours.\n\nBlockchain reorganization attack\n\nAlso referred to as an alternative history attack\n\nConsensus 34% Attack\n\n34% Attack against BFT network, a specific instance of Consensus Majority Attack\n\nConsensus 51% Attack\n\n51% Attack against DLT network, a specific instance of Consensus Majority Attack\n\nConsensus Attack\n\nAttacks against the consensus protocol and system in use can take many forms and are not limited to gaining control of the consensus mechanism but can also be used to slow down consensus for example\n\nConsensus Delay Attack\n\nConsensus Delay Attacks can allow malicious miners to gain time in order to execute other attacks\n\nYou can view the full list of Blockchain weaknesses here \u2192\n\nLearn more about the top 10 weaknesses here \u2192\n\nCSA Blockchain Working Group\nLearn about the work CSA is doing to secure blockchain and distributed ledger technologies. You can learn more about the work CSA is doing, download research, and view webinars and blogs on this topic on the Blockchain working group page."
    }
}