{
    "threat_intelligence": {
        "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9439767/",
        "timestamp": "2020-10-02 00:00:00",
        "original_content": "Security research of blockchain technology in electronic medical records\n, MS\na,\n*\nJia Qu\na\n Hebei Petroleum University of Technology, Information center, Hebei Petroleum University of Technology, Chengde, China.\na\n Hebei Petroleum University of Technology, Information center, Hebei Petroleum University of Technology, Chengde, China.\nCorresponding author.\n*Correspondence: Jia Qu, Information center, Hebei Petroleum University of Technology, Chengde 067000, China (e-mail:\nmoc.qq@66969651\n).\nReceived 2020 Oct 2; Revised 2022 Aug 2; Accepted 2022 Aug 5.\nCopyright\n  \u00a9 2022 the Author(s). Published by Wolters Kluwer Health, Inc.\nBackground:\nA blockchain-based Electronic Health Record(EHR) data-sharing scheme was proposed to solve the problems of data sharing difficulties and privacy disclosure.\nMethods:\nThis paper designs a blockchain-based electronic health record model based on the characteristics of blockchain antitampering, decentralization, and distributed storage. Utilize blockchain network and distributed database to store encryption-related access control policies to prevent EHR data from being tampered with and leaked. Data security sharing protocol combines Distributed Key Generation (DKG) and reencryption.\nResults:\nThe protocol used the Delegated Proof of Stake(DPOS) algorithm to select the proxy node, which reencrypted the EHR to share data between a pair of users. Simulation experiments and comparative analysis showed that DPOS efficiency was higher than Proof of Work (POW) and slightly lower than the Practical Byzantine Fault Tolerance(PBFT).\nConclusions:\nThe scheme proposed in this paper is more decentralized and less computationally intensive.\nKeywords: \nBlockchain, Data sharing, Distributed key generation, DPOS, Electronic medical records, PBFT, POW\n1. Introduction\nWith the rapid development of the medical industry and the rapid increase in medical health data, many hospitals have begun to use Electronic Health Record (EHR)\n[\n1\n]\n to record patients\u2019 medical health data. Electronic medical records have many benefits, such as providing a convenient storage method for medical data, a data source for doctors to prescribe, and research data for research institutions. Usually, a patient will generate his electronic medical record after seeking medical treatment in 1 hospital. Previous medical records or data are often needed when the patient seeks medical treatment in another hospital. At this time, electronic medical records must be shared among different medical institutions. Due to the various medical data types, it is always a research hotspot to integrate and store them reasonably and share them effectively. Simultaneously, the electronic medical record contains a lot of private information of the patient, preventing the leakage of private data when sharing, which is also a research problem.\nThe development of cloud computing.\n[\n2\n,\n3\n]\n Provides an exemplary method for EHR sharing. Usually, hospitals will outsource EHR to a cloud server. When other users want to obtain individual medical records on the cloud, they need to be verified by the cloud. After the verification is passed, the cloud will share the data with the user; but a cloud-based EHR sharing scheme.\n[\n4\n,\n5\n]\n It also has a drawback: data storage centralization. This also means that all medical data is stored in the cloud. Once the cloud server is maliciously hacked, the medical data stored on the cloud will be leaked, resulting in problems such as disclosing user privacy. The consequences are very serious.\nThe development and application of blockchain technology.\n[\n6\n\u2013\n8\n]\nhave brought new opportunities to solve this problem. In 2008, Satoshi Nakamoto published the paper \u201cBitcoin: A peer-to-peer electronic cash system,\u201d\n[\n9\n]\n which mentioned the blockchain technology based on Bitcoin. This technology immediately attracted widespread attention once it was proposed. Blockchain technology has the advantages of decentralization and distributed storage, nontampering, etc., and can provide higher security. Based on the benefits of this technology, researchers gradually began to use blockchain technology to build EHR sharing systems.\n[\n10\n\u2013\n13\n]\n Xia et al proposed a blockchain-based medical data sharing model MeDShare.\n[\n14\n]\n The system uses blockchain to store medical data packets and smart contracts to track all data operations. Once malicious behavior is detected, it can be revoked in time. Access authority to data; according to the access authority, the legitimacy of the data requester\u2019s identity is verified, and data security sharing can be realized after verification to prevent data privacy leakage. Fan et al proposed the MedBlock solution, which uses the blockchain\u2019s distributed ledger to achieve effective Electronic Medical Record (EMR) access and retrieval and to share electronic medical records among authorized users.\n[\n15\n]\n Encryption strategies are used in the scheme to ensure the security and privacy of information while reducing costs; as the scheme improves the consensus mechanism, it effectively enhances block consensus efficiency. Besides, Zhang et al proposed a blockchain-based personal health record sharing scheme\n[\n13\n]\n; this scheme constructs 2 different blockchains to realize the safe sharing of medical data. The scheme constructs a private chain and a consortium chain, respectively. The private chain realizes the encrypted storage of personal medical data. The alliance chain saves the security index corresponding to the personal medical data and secures data sharing by verifying the doctor\u2019s identity token, which protects medical privacy data, but uses 2 types of zones. Blockchain will not only increase costs, but its execution efficiency will also decrease.\nThis article proposes a blockchain-based electronic medical record security sharing solution. This article\u2019s solution is improved on the model presented in the reference \u201cTowards blockchain-based scalable and trustworthy file sharing\u201d,\n[\n16\n]\n and a data security sharing protocol is designed. The protocol combines the Distributed Key Generation (DKG) technology.\n[\n17\n,\n18\n]\nand the reencryption scheme.\n[\n19\n]\n Compared with the traditional identity-based encryption scheme, the scheme in this paper does not use Private Key Generation (PKG) to generate the master key but uses DKG technology to allow users of each institution to negotiate to generate a private key, which not only prevents the private key of each institution when the PKG is maliciously compromised. The key leakage problem also effectively resists collusion attacks among users. The scheme adopts reencryption technology and, based on ensuring the confidentiality, integrity, and privacy of the EHR, it realizes the sharing of encrypted data between a single pair of users.\n[\n20\n]\n2. Methods\n2.1. reEncryption\nreencryption is a conversion mechanism used between ciphertexts, initially proposed by blaze.\n[\n20\n]\n reencryption is used to solve the inconvenience when users share data. While reducing the burden on users, it can also enhance the reliability and security of data. In the reencryption process, each participant cannot obtain any plaintext messages. The specific work process involves 3 roles: data owner, data user, and agent. When the data owner Alice wants to share the encrypted file with the data user Bob, Alice generates a reencryption RE key for Bob and transmits the proxy key to a third-party semitrusted agent through a secure channel. The user uses the proxy key to reencrypt the encrypted file according to the proxy reencryption algorithm. After Bob obtains the reencrypted file, he can use his private key to decrypt the reencrypted file, and the plain text file can be obtained after decryption.\n2.2. Blockchain-based electronic medical record sharing model\nThis solution\u2019s model improves on the reference \u201cTowards blockchain-based scalable and trustworthy file sharing\u201d.\n[\n16\n]\n The original model consists of data owners, users, storage providers, agents, and miners. This model is shown in Figure  (Blockchain-based electronic health record sharing model), mainly composed of 4 roles: N authoritative centers, data owners, data users, and agents. N authoritative centers are our newly added roles, and the remaining roles are originally included in the original model. N authoritative centers constitute blockchain nodes composed of hospitals, banks, insurance companies, research institutes, etc., within an alliance organization, and each node can play at least 1 role. References \u201cTowards blockchain-based scalable and trustworthy file sharing\u201d\n[\n16\n]\n model. The storage data provider can only store the EHR data of 1 medical institution. The blockchain node is composed of a single node with high access pressure. This solution model The blockchain node is composed of N institutions, which can effectively alleviate blockchain access pressure. This model uses a distributed database and blockchain to store medical data together; the database stores encrypted EHR. The blockchain stores the corresponding access control strategy of the EHR, the storage address on the database, and the data hash of the EHR. Adopting this storage mode solves not only the problem of centralized data storage in the databases of various medical institutions but also reduces the pressure of data storage and high-frequency access on the blockchain.\nBlockchain-based electronic health record sharing model.\n1) N authoritative centers: N authoritative centers represent different medical-related institutions in the alliance chain, such as hospitals, research institutes, banks, insurance companies, etc. Each authoritative center can generate a part of the secret by itself and then negotiate each organization\u2019s private key based on its identity information.\n2) The data owner owns their own HER and can share EHR with other organizations. The data owner encrypts the original medical data, stores it in a distributed database, and stores the HASH value, storage address, and access control strategy of the blockchain\u2019s medical record to prevent malicious tampering with data. In data sharing, the data owner must generate a reencryption key and distribute the key to the proxy node.\n3) Data users can obtain EHR from the data owner. Authorized data users can obtain the reencrypted EHR by sending a verification request or using their private key to decrypt the reencrypted EHR.\n4) Agent: According to the Delegated Proof of Stake(DPOS) consensus algorithm,\n[\n21\n]\n the miner node is recommended as the agent node. The agent performs a reencryption algorithm to reencrypt the EHR. Specifically, the proxy node reencrypts the EHR according to the reencryption key from the data owner.\n2.3. Electronic medical record sharing protocol based on blockchain\nAccording to this scheme\u2019s model, this paper adopts a multi-center reencryption scheme as the data sharing protocol. The agreement is improved based on the reencryption plan proposed by Matthew Green. In Matthew Green solution, the user\u2019s private key is generated by Private Key Generation (PKG). Still, there is a problem: if the authenticity of the PKG cannot be trusted, the user\u2019s private key may be leaked. This scheme uses DKG technology to optimize the key generation part of the reencryption scheme to improve the security of user key generation. After DKG is used, each user\u2019s private key is negotiated and generated based on the remaining users; even if a user is Malicious, attacks can also ensure the key\u2019s security. The specific data sharing protocol consists of the following 5 steps: system initialization, key generation, data storage, data sharing, and data recovery.\n1) Key generation: Each authority returns its private key SKId according to the input parameters and identity mark Id.\n2) Data storage: After a patient is treated in the hospital, the hospital will generate its EHR. For EHR, the hospital first encrypts the HER with its own public key SKId, obtains the encrypted EHR ciphertext CId according to its identity Id and plaintext EHR, and then stores the CId distributed database. Then, as the data owner, the hospital signs the original EHR writes the signed EHR, HASH, storage location, and access control strategy into the file, and then broadcasts the transaction. The miner verifies and writes the transaction to the blockchain after the verification is passed.\n3) Data sharing: When a user wants to read a certain EHR of a certain hospital, the user must first send a signature request to the hospital. The hospital first verifies whether the user\u2019s identity is legal through the request message. It then checks the file\u2019s access control policy, If the user\u2019s identity is legal and has read permission. Then the hospital will use the user\u2019s identity Idj and its private key SKId to generate the proxy reencryption key Rk. After that, the hospital will send the agent key and the storage address of the EHR to the agent node. The agent node will read the encrypted EHR file stored on the distributed database according to the storage address. Then, the proxy node uses the proxy reencryption key Rk to reencrypt the encrypted EHR to obtain the reencrypted ciphertext Cidj. Finally, the proxy node sends the reencrypted EHR cipher text Cidj to the user.\n4) Data recovery: When the user receives the reencrypted EHR, he can use his private key SKIdj to decrypt the reencrypted ciphertext and obtain the EHR plaintext file after decryption.\n2.4. Ethical approval\nEthical approval is not necessary because no human subjects and patient information were collected and studied.\n2.5. Analysis\n2.6. Correctness analysis. \nThe scheme proposed in this article is similar to the reference \u201cEfficient revocable ID-based signature with cloud revocation server\u201d.\n[\n22\n]\n The reference \u201cAn ID-based linearly homomorphic signature scheme and its application in blockchain\u201d.\n[\n23\n]\n First, generate the master key, and then create the user private key based on the master key. In these schemes, a trusted third-party authority (such as PKG) is required to protect the master key and generate the user\u2019s private key. However, there is no trusted third party in this scheme\u2019s model, so the DKG technology in the literature \u201cRobust threshold DSS signatures\u201d.\n[\n17\n]\n and \u201cSecure distributed key generation for discrete-log based cryptosystems\u201d.\n[\n18\n]\nis used to achieve the Key generation when trusting a third party. Therefore, the correctness of the user\u2019s private key age can be guaranteed by DKG technology.\n2.7. Security analysis. \nFirst of all, the model proposed in the scheme uses a distributed database to store the encrypted EHR, which ensures that even if the encrypted data is leaked, the encrypted data cannot be decrypted by the attacker without the private key of the data owner. Get the plaintext content. The model also uses the blockchain\u2019s HASH, storage address, and access control strategy to store data. According to the characteristics of the blockchain itself that can be tamper-proof, data security and privacy are greatly improved. Specifically, since the blockchain itself contains many nodes, once data is written to the blockchain, each node will back up the data, so unless a 51% attack occurs, the data on the blockchain can\u2019t have Tampered; even if a 51% attack occurs in the end since the original EHR is not stored on the blockchain, this tampering will not affect the metadata of the EHR. Secondly, in terms of the protocol proposed in the scheme: the identity-based proxy reencryption protocol used in this paper has been optimized and improved, and the user private key generation part no longer relies on PKG to generate, but each institutional user chooses polynomial generation. The secret value is used to generate your private key. Compared with the centralized key generation method such as PKG, the distributed key generation method can effectively prevent the private key\u2019s leakage. Its security lies in: even a single user. In the event of a malicious attack, the attacker cannot obtain the user\u2019s secret value, let alone obtain the private key. The EHR stored in the distributed database encrypted by the user\u2019s public key cannot be decrypted by the attacker using his private key. Suppose multiple users are maliciously attacked, or multiple users conduct a collision attack. In that case, the private key cannot be obtained because the secret value sent by each user is checked in the protocol, and the private key cannot be generated if the check fails. Therefore, it can be concluded that the user\u2019s private key is safe and not easy to be leaked by malicious attacks. After the user\u2019s private key is generated, suppose a certain data user wants to obtain the EHR\u2019s plaintext content; first, it needs to meet the access control policy, and secondly, it needs to decrypt the EHR ciphertext. We divide the remaining steps of the agreement into 2 phases. Phase 1: Data user B first sends a request with his signature to data owner A. The data owner checks the access policy corresponding to the user and regenerates it after confirming that he has read permission. It becomes the agent key, sends it to agent S, and sends the agent\u2019s encrypted data storage address. We assume that the data owner is credible at this stage, and the data user has never exposed his identity credentials to others. Attacker C cannot recover the key. We can imagine different attack scenarios of the attacker:\n1) Case 1: C sends a request to A to try to obtain encrypted data. Since C does not have the user\u2019s identity credentials, after A receives C\u2019s request, the access control policy corresponding to C cannot be viewed, so the access control policy will not be executed. In the following protocol steps, the C attack was unsuccessful.\n2) Case 2: Allow attacker C to intercept the request message sent by user B to A and perform a replay attack. Suppose that C can successfully deceive A, which causes A to treat C as B. Then A can query B\u2019s corresponding access control policy. If B has the read permission, A will generate a proxy key for B and then send the proxy key and the address of the requested data to the agent. The agent performs the remaining steps typically, And then sends the reencrypted ciphertext to C. However, this ciphertext is still unable to be decrypted by C because the ciphertext is encrypted and generated with the proxy key for B.\nThe second stage of the protocol is: After the agent receives the storage address of the reencrypted and encrypted data sent by the data owner, the agent downloads the encrypted data according to the protocol, and reencrypts the data ciphertext, and then sends the reencrypted ciphertext to the user. In the reencryption process, we still assume that the data owner is credible, and the identity credentials of the data user have never been exposed to others. The agent is semitrusted; that is, the agent is interested in the stored EHR file and Trying to obtain the content of the file to gain benefits, but will perform each step of the agreement in accordance with the agreement, and will not withdraw from the agreement halfway, and will not provide false data. Then there are 2 ways for the agent to try to obtain the EHR plaintext: Method 1, directly decrypt the first-layer ciphertext according to the private key of the data owner; Method 2, reencrypt the encrypted file and use the data user\u2019s private after reencryption The key decrypts the ciphertext. For method 1, since the data owner is credible and its identity credentials are not exposed, the private key of the data owner generated according to the distributed key cannot be obtained by the agent, so when the agent obtains the first-level ciphertext file, The private key cannot be used to decrypt the file, that is, the agent cannot obtain the EHR plaintext through this method. For the second method, suppose the agent reencrypts the ciphertext with the agent key and then obtains the reencrypted ciphertext. To obtain the EHR plaintext, the agent needs to obtain the private key of the data used to decrypt the second-layer ciphertext. In the same way as the method, since the identity certificate of the data user is not exposed, and the private key is generated according to the distributed key generation method, the agent cannot obtain the private key of the data user, and the agent cannot decrypt the second layer of ciphertext. To get the EHR plaintext. In short, the first phase of the protocol can effectively resist identity masquerading and replay attacks. The second stage of the protocol assumes that the agent is semitrusted. The 2 ways that the agent tries to obtain the EHR plaintext will not affect the scheme\u2019s security, nor will it affect the authenticity of the EHR obtained by the data user.\n3. Results\nAs there are some problems in current medical informatization, we enumerate these problems and analyze the solutions proposed in this plan for these problems:\n1) Privacy and security issues. This program uses asymmetric encryption technology to encrypt data, ensuring that private data will not be threatened. Storing the HASH of medical-related data in the blockchain ensures that the medical data cannot be tampered with and its nonrepudiation.\n2) Data accessibility, operability, and integrity issues. This solution uses a distributed database to store encrypted data, stores the original data hash and access permissions in the blockchain, facilitates the detection of different permissions of various institutions, realizes data sharing among various institutions, and ensures data accessibility and operability. Because the blockchain has distributed database characteristics, the data is backed up on each node, effectively preventing data loss and ensuring its integrity.\nThis article also uses a comparative analysis method to evaluate the proposed electronic medical record sharing program. Since the solution in this article is based on the blockchain and is offered to solve the problem of medical data sharing, it is consistent with the document \u201cTowards secure and privacy-preserving data sharing in e-health systems via consortium blockchain\u201d,\n[\n13\n]\n the document \u201cTowards blockchain-based scalable and trustworthy file sharing\u201d,\n[\n16\n]\n the document \u201cMedRec: using blockchain for medical data access and permission management\u201d.\n[\n24\n]\n The proposed scheme belongs to the same type of medical blockchain scheme, so this scheme and the above 3. The comparison of these schemes, starting from the consensus mechanism adopted by each scheme, the type of blockchain, and the computing power requirements, can effectively compare the advantages and disadvantages of this scheme. The results are shown in Table .\nTable 1\nComparison of our scheme with existing medical blockchain schemes.\nMedical blockchain solution\nConsensus mechanism\nSingle strand\nComputing power demand\nMaintenance cost\nNetwork resource occupancy rate\nBlockchain type\nReferences (Zhang & Lin, 2018) scheme\nPBFT\nNo\nSmall\nHigh\nHigh\nPrivate Blockchain, Consortium Blockchain\nReferences (Cui & Asghar & Russello, 2018) scheme\nPOW\nYes\nLarge\nLow\nHigh\nConsortium Blockchain\nReferences (Azaria & Ekblaw & Vieira & Lippman,2016) scheme\nPOW\nYes\nLarge\nLow\nLow\nConsortium Blockchain\n\u2003This article scheme\nDPOS\nYes\nLarge\nLow\nLow\nConsortium Blockchain\nThe comparison in Table  shows that this solution uses the DPOS consensus algorithm as the consensus mechanism. The reference \u201cTowards blockchain-based scalable and trustworthy file sharing\u201d\n[\n16\n]\n and the reference \u201cMedRec: using blockchain for medical data access and permission management\u201d\n[\n24\n]\n use the POW consensus algorithm. This scheme is compared with the above 2 schemes. The number of nodes that need to be started is relatively small, and there is no need to spend a lot of computing power to maintain the blockchain. Although the reference \u201cTowards secure and privacy-preserving data sharing in e-health systems via consortium blockchain\u201d\n[\n13\n]\n requires relatively little computing power, the solution involves 2 blockchains: the consortium chain and the consortium blockchain. Private chains, 2 types of blockchains, must be more expensive to maintain, and the decentralization of private chains is not as good as that of consortium chains.\nTo compare the efficiency of the 3 consensus algorithms, we simulated the 3 consensus algorithms and obtained the CPU occupancy rate of each consensus algorithm when running through the simulation test on experimental data. The results are shown in Figure  (Comparison of the CPU occupancy rate of the 3 consensus mechanisms). The simulation results show that DPOS is not as fast as PBFT in response, but DPOS has significantly less CPU usage than POW.\nComparison of the CPU occupancy rate of the 3 consensus mechanisms.\nTo compare the 3 consensus algorithms\u2019 network occupancy rates, we simulated them in a network environment. We obtained the network occupancy rate of the 3 consensus algorithms through 5 experiments. The results are shown in Figure  (Comparison of network occupancy rate under 3 consensus mechanisms). As the PBFT consensus mechanism is a Byzantine fault-tolerant, it is necessary to tolerate invalid nodes and shield malicious nodes\u2019 influence on the consensus results. Therefore, to solve the Byzantine failure of f nodes, the consensus mechanism requires the system\u2019s total number of consensus nodes to reach at least 3f\u2005+\u20051. In the consensus process, all consensus nodes have to broadcast twice to the entire network before reporting the blockchain\u2019s electronic medical record. The new medical information block in the system reached an agreement. From the above analysis, it can be seen that the PBFT consensus mechanism has designed 2 network-wide broadcasts for all nodes. This process seriously affects the consensus process\u2019s throughput performance and causes network resource consumption. Figure  shows that the average network occupancy rate of the PBFT consensus algorithm is around 80%. The POW consensus algorithm\u2019s average network occupancy rate is around 60%, and the average DPOS consensus algorithm is around 30%.\nComparison of network occupancy rate under 3 consensus mechanisms.\nIn summary, compared to the other 3 solutions, the CPU efficiency of this solution is not as good as the reference \u201cTowards secure and privacy-preserving data sharing in e-health systems via consortium blockchain\u201d.\n[\n13\n]\n Still, it is higher than the reference \u201cMedRec: using blockchain for medical data access and permission management\u201d\n[\n24\n]\n and \u201cTowards blockchain-based scalable and trustworthy file sharing\u201d.\n[\n16\n]\n In terms of network resource occupancy rate, this solution is much lower than the other 3 solutions, which ensures a higher degree of decentralization without spending too much computing power and cost. This solution has certain advantages.\n4. Discussion\nThe DPOS algorithm does not need to consume much computing resources, and the consensus speed is faster than other consensus algorithms. Still, it is only suitable for a situation with few consensus nodes. When many nodes join the blockchain system, all nodes must jointly carry out a 3-phase consensus, which leads to a large increase in communications and data transmission, likely to cause network congestion or network storms.\nBecause the DPOS algorithm also has apparent shortcomings in the application of medical systems, such as the efficiency of the system consensus algorithm continuing to decrease with the increase of the number of nodes and poor scalability. By studying consensus algorithms such as POW, POS, and PBFT, analyzing their advantages and disadvantages, and combining them with the Hyperledger Sawtooth framework, a new PoET (Proof of Elapsed Time) consensus algorithm will be proposed and applied in the medical system.\nSince the sharing of medical data among various medical-related institutions is always a hot research issue, it is of great significance to ensure medical data privacy and realize the sharing of electronic medical records based on blockchain. This paper proposes a blockchain-based electronic medical record sharing scheme based on blockchain\u2019s decentralization and immutability characteristics. This paper\u2019s solution improves the model in the document \u201cTowards blockchain-based scalable and trustworthy file sharing\u201d.\n[\n16\n]\n It proposes a data sharing protocol to realize the secure sharing of medical data between a single pair of authorized users. However, the solution can only realize data sharing between a single pair of users, and the efficiency of the DPOS algorithm in the solution needs to be improved. Our next research\u2019s main work is how to improve the consensus algorithm, improve the efficiency of consensus, and realize data sharing from 1 user to multiple users.\nAcknowledgements\nChina Invention Patent Number: ZL201810024626.4\nChina Invention Patent Number: ZL202110369910.7\n\n\nAbbreviations:\nDKG =\ndistributed key generation\nDPOS =\ndelegated proof of stack\nEMR =\nelectronic medical record\nHER =\nelectronic health record\nPBFT =\npossible byzantine fault tolerance\nPKG =\nprivate key generation\nPOS =\nproof of stack\nPOW =\nproof of work.\n\n\nFunding: The author(s) received no financial support for the research, authorship, and/or publication of this article.\nThe authors declare that they have no conflict of interest.\nEthical approval/patient consent: Not applicable.\nThe datasets generated during and/or analyzed during the current study are available from the corresponding author on reasonable request.\nHow to cite this article: Qu J. Security research of blockchain technology in electronic medical records. Medicine 2022;101:35(e30507).\nReferences\n[1] \nHeart T, Ben-Assuli O, Shabtai I. \nA review of PHR, EMR and EHR integration: a more personalized healthcare and public health policy\n. \nHealth Policy Technol\n. 2017;\n6\n:20\u20135. \n[\nGoogle Scholar\n]\n[2] \nDudin EB, Smetanin YG. \nA review of cloud computing\n. \nSci Tech Inf Process\n. 2011;\n38\n:280\u20134. \n[\nGoogle Scholar\n]\n[3] \nHou JY, Shi CQ. \nApplication of cloud computing technologies in information technology of hospitals\n. \nElectronic Design Eng\n. 2018;\n24\n;35\u201339. \n[\nGoogle Scholar\n]\n[4] \nZhang H, Yu J, Tian C, Zhao P, Xu G, Lin J. \nCloud storage for electronic health records based on secret sharing with verifiable reconstruction outsourcing\n. \nIEEE Access\n. 2018;\n6\n:40713\u201322. \n[\nGoogle Scholar\n]\n[5] \nLiu Y, Zhang Y, Ling J, Liu Z. \nSecure and fine-grained access control on e-healthcare records in mobile cloud computing\n. \nFuture Gener Comput Syst\n. 2018;\n78\n:1020\u20136. \n[\nGoogle Scholar\n]\n[6] \nUnderwood S. \nBlockchain beyond bitcoin\n. Communications of the ACM. 2016;\n59\n:15\u20137. \n[\nGoogle Scholar\n]\n[7] \nPu H, Ge Y, Yan-Feng Z, Yu-bin B. \nSurvey on blockchain technology and its application prospect\n. \nComp Sci\n. 2017;\n44\n:1\u20137. \n[\nGoogle Scholar\n]\n[8] \nVuji\u010di\u0107 D, Jagodi\u0107 D, Ran\u0111i\u0107 S. \nBlockchain technology, bitcoin, and Ethereum: a brief overview.\n In 2018 17th international symposium infoteh-jahorina (infoteh). IEEE. 1\u20136. March2018. \n[\nGoogle Scholar\n]\n[10] \nDagher GG, Mohler J, Milojkovic M, Marella PB. \nAncile: Privacy-preserving framework for access control and interoperability of electronic health records using blockchain technology\n. \nSustainable Cities Soc\n. 2018;\n39\n:283\u201397. \n[\nGoogle Scholar\n]\n[11] \nKosba A, Miller A, Shi E, et al.. \nHawk: The blockchain model of cryptography and privacy-preserving smart contracts.\n In 2016 IEEE symposium on security and privacy (SP). IEEE. 2016;839\u2013858. \n[\nGoogle Scholar\n]\n[12] \nXue TF, Fu QC, Wang C, et al.. \nA medical data sharing model via blockchain\n. \nActa Autom Sin\n. 2017;\n43\n:1555\u201362. \n[\nGoogle Scholar\n]\n[13] \nZhang A, Lin X. \nTowards secure and privacy-preserving data sharing in e-health systems via consortium blockchain\n. \nJ Med Syst\n. 2018;\n42\n:140. [\nPubMed\n] \n[\nGoogle Scholar\n]\n[14] \nXia QI, Sifah EB, Asamoah KO, Gao J, Du X, Guizani M. \nMeDShare: Trust-less medical data sharing among cloud service providers via blockchain\n. \nIEEE Access\n. 2017;\n5\n:14757\u201367. \n[\nGoogle Scholar\n]\n[15] \nFan K, Wang S, Ren Y, Li H, Yang Y. \nMedblock: efficient and secure medical data sharing via blockchain\n. \nJ Med Syst\n. 2018;\n42\n:136. [\nPubMed\n] \n[\nGoogle Scholar\n]\n[16] \nCui S, Asghar MR, Russello G. \nTowards blockchain-based scalable and trustworthy file sharing.\n In 2018 27th International Conference on Computer Communication and Networks (ICCCN). IEEE. 2018:1\u20132. \n[\nGoogle Scholar\n]\n[17] \nGennaro R, Jarecki S, Krawczyk H, et al.. \nRobust threshold DSS signatures.\n In International Conference on the Theory and Applications of Cryptographic Techniques. Berlin, Heidelberg: Springer. 1996:354\u201371. \n[\nGoogle Scholar\n]\n[18] \nGennaro R, Jarecki S, Krawczyk H, Rabin T. \nSecure distributed key generation for discrete-log based cryptosystems\n. \nJ Cryptol\n. 2007;\n20\n:51\u201383. \n[\nGoogle Scholar\n]\n[19] \nGreen M, Ateniese G. \nIdentity-based proxy re-encryption.\n In International Conference on Applied Cryptography and Network Security. Berlin, Heidelberg: Springer. 2007:288\u2013306. \n[\nGoogle Scholar\n]\n[20] \nBlaze M, Bleumer G, Strauss M. \nDivertible protocols and atomic proxy cryptography.\n In International Conference on the Theory and Applications of Cryptographic Techniques. Berlin, Heidelberg: Springer. 1998:127\u201344. \n[\nGoogle Scholar\n]\n[21] \nLuo Y, Chen Y, Chen Q, et al.. \nA new election algorithm for DPos consensus mechanism in blockchain.\n In 2018 7th International Conference on Digital Home (ICDH). IEEE. 2018:116\u201320. \n[\nGoogle Scholar\n]\n[22] \nJia X, He D, Zeadally S, Li L. \nEfficient revocable ID-based signature with cloud revocation server\n. \nIEEE Access\n. 2017;\n5\n:2945\u201354. \n[\nGoogle Scholar\n]\n[23] \nLin Q, Yan H, Huang Z, Chen W, Shen J, Tang Y. \nAn ID-based linearly homomorphic signature scheme and its application in blockchain\n. \nIEEE Access\n. 2018;\n6\n:20632\u201340. \n[\nGoogle Scholar\n]\n[24] \nAzaria A, Ekblaw A, Vieira T, et al.. \nMedrec: using blockchain for medical data access and permission management.\n In 2016 2nd International Conference on Open and Big Data (OBD). IEEE. 2016:25\u201330. \n[\nGoogle Scholar\n]"
    }
}