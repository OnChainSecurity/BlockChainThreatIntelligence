{
    "threat_intelligence": {
        "url": "https://x.com/0xCharlesWang/status/1701188213593788737",
        "timestamp": "2023-09-11 00:00:00",
        "original_content": "What should you do if you missed a bug? At\n\n[@0xPaladinSec](/0xPaladinSec)\n\n, we are trained to spot every single bug in a codebase. Unfortunately, as\nevery auditor on the planet knows, humans are no machines and it can still\nhappen that a bug is missed. It is even more clear if you take a look at\npublic\n\n[@code4rena](/code4rena)\n\nreports, you will quickly realize that often the top auditors missed 1 or even\nmore bugs. So after we understood, that bugs can be missed, we need to\nunderstand WHY an auditor can miss them. There are several reasons: a) Lack of\nunderstanding the codebase b) Lack of thoroughness c) Lack of identifying\npotential vulnerable spots d) Lack of thoroughness on *specific* vulnerable\nspots d) can often happen due to the wrong assumption that it is \"ok\", since\nyou have carefully checked that vulnerable spot and not have found something.\nIdeally, you go three times over this spot, however, if you already have the\nmindset that it is \"ok\", then you will have a hard time. To get rid of this\nmindset,\n\n[@paladin_marco](/paladin_marco)\n\nand I myself tackle the codebase from multiple angles. As you guys have seen\nprobably from my / our tweets, we audit on paper / whiteboard as well. To dive\neven deeper in that topic of how bugs can be missed, it is important to\nunderstand how bugs can be found. The TLDR here is the following: a)\nUnderstand the codebase b) Identify potential vulnerable spots in the codebase\nc) Attempt to exploit these spots via different angles In my opinion, b) is\nwhat makes the difference between a good and a bad auditor. Because if you\nhave identified b), you will almost with 99% certainty successfully complete\nc), if you are thorough enough AND if you don't get the \"is ok\" mindset after\nthe first round of checks."
    }
}