{
    "threat_intelligence": {
        "url": "https://consensys.io/diligence/blog/2023/05/charting-the-web3-security-landscape/",
        "timestamp": "2023-05-01 00:00:00",
        "original_content": "\n\nIn web3, no issue gets as much attention as security\u2014across blog posts, Twitter threads, and podcasts everyone has different opinions on how to make web3 safe. But many conversations miss an important point: web3 security is mostly immature, not inherently broken.\u00a0\n\n\nPerhaps the numbers tell a different story (\nover $12 billion lost to crypto theft\n), but this is inevitable where high-value applications use open-source codebases and operate on public blockchains. Not only do attackers have enough time to inspect contract code for vulnerabilities, but the irreversibility and pseudonymity of transactions stunt traditional incident response mechanisms.\u00a0\n\n\nThis doesn\u2019t mean the problem of web3 security is intractable, though. In fact, we have witnessed the influx of new, cutting-edge solutions designed to safeguard the web3 ecosystem against different security threats. These include tooling for detecting and mitigating code vulnerabilities, proactively monitoring and responding to attacks, increasing transaction security, and many more.\u00a0\n\n\nIn this post, we discuss various components of the emerging web3 security stack for the benefit of readers. Are you a web3 developer, investor, C-suite executive, or an end-user? Reading this article can inform your decision to invest in web3 security solutions that provide additional safety from malicious actors.\u00a0\n\n\nDefining the web3 security stack\n\n\nThe web3 security stack refers to various services and tools that protect crypto applications and organizations (and their users/customers) against malicious attacks. As highlighted in \nThe State of Crypto Security\n, such attacks exploit defects in smart contract programming languages, business logic errors, and compromised infrastructure (among others).\u00a0\n\n\nAt a high level, the web3 security landscape is (currently) made up of the following verticals:\n\n\n\n\nSmart contract audit services\u00a0\n\n\nFormal verification\u00a0\n\n\nCrowdsourced security (bug bounties and audit contests)\u00a0\n\n\nThreat monitoring and incident response\u00a0\n\n\nBlockchain forensics (KYC + AML)\u00a0\n\n\nProtocol risk management\n\n\nUser security\u00a0\n\n\n\n\n\n\nIn subsequent sections, we\u2019ll briefly describe each category and highlight how services and tools in those categories contribute to the objective of improving web3 security.\n\n\nNote that the \nDiligence Security Tooling Guide\n covers the topic to an extent, but our analysis here is more comprehensive and covers new categories.\u00a0\n\n\nSmart contract audit services\u00a0\n\n\nAudits are independent assessments of a project\u2019s smart contract systems to help improve overall security. Smart contract companies, like \nConsensys Diligence\n, often combine manual code reviews and automated vulnerability scanning to analyze contract code for potential attack vectors.\u00a0\n\n\nAudits typically conclude with clients receiving a report containing auditors\u2019 observations about the system\u2019s security. In many cases, an \naudit report\n will highlight security issues found while inspecting the project\u2019s codebase and make recommendations for fixing such issues before launching an application for public use.\u00a0\n\n\nWhile manual inspection of contract code by expert auditors is beneficial, it can be difficult to scale\u2014forcing projects to endure long delays before deploying to mainnet. However, more audit companies are now applying their expertise to developing proprietary and open-source software designed for automatic vulnerability detection. Such tools can be used by development teams to aid testing and ensure auditors are free to focus on errors missed during automated testing.\u00a0\n\n\nFor example, Diligence offers a suite of automated testing tools including symbolic execution (\nMythril\n), static analysis (\nSurya\n) and greybox fuzzing (\nDiligence Fuzzing\n). Similarly, \nTrail of Bits\n offers \nEchidna\n (property-based fuzzing), \nSlither\n (static analysis), and \nManticore\n (symbolic execution). \nPwned No More\n (a team of web3 security auditors) is also working on an \nautomated fuzzing engine\n that uses artificial intelligence to optimize code analysis.\u00a0\n\n\nFormal verification\n\n\nAudits can discover errors in a smart contract that may cause incorrect behavior at runtime, but they cannot prove a smart contract will always execute correctly. However, \nformal verification\n can prove a smart contract adheres to the specifications provided and provides stronger guarantees of a protocol\u2019s security and reliability.\u00a0\n\n\nFormal verification requires translating a smart contract\u2019s code into an abstract mathematical representation (called a formal model) and creating a formal specification that describes the contract\u2019s desired behaviors. Using techniques like automated theorem proving and model checking, formal verification engineers can check if the formal model of a contract matches the specification (deriving mathematical proof of a contract\u2019s correctness).\u00a0\n\n\nCompanies that offer formal verification services for smart contracts include \nRuntime Verification\n, Consensys Diligence, and \nVeridise\n. Adoption of automated verification tools is also growing. For example, \nCerotra\n allows developers to create contract-related using the Cetora Verification Language (CVL) and formally prove those assertions using Certora\u2019s proprietary formal verification tool. (\nScribble\n\u2014another offering from Diligence\u2014provides similar functionality.)\n\n\nCrowdsourced security\u00a0\n\n\nCrowdsourced security can refer to many things\u2014for example, it could mean inviting a large group of people (ie. a \u201ccrowd\u201d) to test mission-critical systems for hidden vulnerabilities. It can also refer to incentivizing third parties to responsibly disclose security issues discovered in an application to developers.\u00a0\n\n\nCrowdsourced security in web3 takes the form of bug bounty programs and audit contests. While each type of program has some distinctions, they usually revolve around the same goal of harnessing communities to collectively secure applications. For example, bug bounties reward security researchers (monetarily) for finding bugs in smart contracts\u2014with rewards increasing according to the severity of disclosed vulnerabilities.\u00a0\n\n\nImmunefi\n is perhaps the most dominant player in the space and has recently raised funding to expand its service offerings (beyond the usual: hosting bug bounties and providing triaging/consultation services). \nHackenproof\n, \nHackerOne\n, and \nBugcrowd\n are other bug bounty platforms incentivizing whitehat hackers to assist project teams in detecting vulnerabilities and avert costly exploits.\u00a0\n\n\nCode4rena\n and \u00a0\nSecure3\n an alternative to traditional audits by coordinating audit contests. Although highly experimental, audit contests provide some benefits like lower wait times and access to a diverse network of security experts. Other platforms like \nSherlock\n are combining decentralized auditing and insurance coverage to create a more compelling business proposition for clients.\u00a0\n\n\nThreat monitoring and incident response\u00a0\n\n\nDue to the nature of public blockchains (censorship-resistant and decentralized), web3 applications cannot rely on traditional methods of detecting and preventing attacks. For instance, developers cannot restrict individuals (even high-risk types) from interacting with on-chain applications, freeze/reverse malicious user operations, or take servers offline.\u00a0\n\n\nThe only alternative is to invest in solutions for gathering information about attacks before they happen, and quickly respond to mitigate losses for users. \nProactive threat prevention in web3\n deserves a post of its own, but it suffices to say threat detection and emergency response services are highly valuable for developers building with a security-first mindset.\n\n\nForta\n incentivizes bot operators to monitor on-chain activity for high-risk transactions that can negatively impact protocols\u2019 security. \nTenderly Alerts\n is another monitoring service that alerts users to suspicious operations involving certain smart contracts and wallet addresses.\u00a0\n\n\nThe \nOpenZeppelin Defender\n suite also provides incident response tooling for web3 project teams. This includes integrations with multisig wallet infrastructure and a private relayer service to streamline approval and execution of emergency actions (eg. pausing a protocol).\u00a0\n\n\nInterestingly, some companies are integrating artificial intelligence and machine learning (AI/ML) to provide advanced smart contract monitoring services. Forta, which we described earlier, is one startup pursuing this route\u2014the same as \nCyvers\n and \nHypernative\n. In these cases, trained AI models can analyze data from a variety of on and off-chain sources to detect anomalies in real time and assist teams in reacting to attacks and preventing exploits before they happen.\u00a0\n\n\nInterlude: On the limitations of proactive threat monitoring\u00a0\n\n\nAlthough proactive threat monitoring is useful, it may not always be enough to prevent or mitigate attacks for different reasons. For example, deploying an upgrade or pausing your protocol may require extensive deliberation and approval by a DAO. This would inevitably slow your team\u2019s response times, more so if executing defensive actions involves coordinating team members located in different timezones.\u00a0\n\n\nAdditionally, \npast efforts to prevent hacks\n often benefit from public visibility into Ethereum\u2019s mempool (which allows teams to frontrun exploit transactions). However, growing adoption of transaction privacy mechanisms (eg. Flashbots) will likely reduce the effectiveness of this tactic in the future.\u00a0\n\n\nBlockchain forensics\u00a0\n\n\nBlockchain forensics companies provide resources for analyzing blockchain data and detecting financial crime involving cryptocurrencies. Common use cases include tracing the flow of funds after crypto hacks and scams or de-anonymizing criminal actors (by linking addresses to real-world identities). Blockchain forensics companies also assist DeFi protocols in recovering stolen funds before they\u2019re laundered through exchanges and mixers.\u00a0\n\n\nElliptic\n, \nChainalysis\n, and \nCipherTrace\n (owned by payments giant MasterCard) are the best-known examples of blockchain analytics firms. \nMerkle Science\n, which raised seed funding earlier this year, and \nTRM Labs\n are also other players in the industry.\u00a0\n\n\nBlockchain forensics also plays a key role in reducing entry barriers for traditional finance (TradFi) institutions who have historically avoided DeFi due to compliance issues. With deep insights into cryptocurrency transactions and user profiles\u2014provided by blockchain analytics tools\u2014businesses can easily monitor and restrict activities that run afoul of anti-money laundering (AML) regulations. Some examples:\n\n\n\n\n\u201cKnow Your Token\u201d (KYT): \nSolidus Labs\n provides compliance services for crypto companies and recently acquired \nTokenSniffer\n as part of a recent expansion. The firm now enables centralized exchanges and TradFi institutions to detect scam contracts and prevent interactions with blacklisted tokens using its proprietary technology.\u00a0\u00a0\n\n\n\u201cKnow Your Wallet\u201d (KYW): Blockchain analytics firms like \nCoinfirm\n, TRM Labs, and \nAnChain\n help companies inspect and block transactions from addresses linked to bad actors. These products also use AI to build predictive engines capable of identifying unknown addresses and transactions that may be suspicious.\n\n\n\n\nProtocol risk management\n\n\nWith audits and bug bounties becoming a standard in web3, the rate of exploits caused by code vulnerabilities is expected to decrease. However, attackers are now resorting to hacks that exploit economic mechanisms (cf. \nMango Finance exploit\n and \nEuler Finance hack\n).\u00a0\n\n\nAs such, teams must start adopting solutions that improve cryptoeconomic security guarantees for users. These tools are often grouped under protocol risk management as they enable protocol developers to optimize for efficiency and incentives while safeguarding against attacks linked to adversarial or volatile market conditions.\u00a0\u00a0\n\n\nGauntlet Networks\n and \nChaos Labs\n (both of whom count DeFi blue chips like Aave, Maker, and Compound as clients) are driving the adoption of risk management in DeFi projects. \nApostro\n is another risk management platform for DeFi protocols that helps with monitoring market conditions, detecting price oracle deviations, and enforcing strict conditions on liquidity.\u00a0\n\n\nUser security\u00a0\n\n\nWhile web3 empowers individuals to own their data, it places a greater responsibility on end-users to secure assets. Still, even advanced crypto users find \nOpSec\n (operational security) difficult\u2014especially as scammers and fraudsters refine old tactics and evolve new ones. This is why consumer security solutions that help users, investors, and institutions safeguard digital assets have a compelling value proposition.\u00a0\n\n\nFor sake of clarity, we define user security as a collection of tools that monitor and safeguard user interactions with web3 applications. We see fraud prevention, transaction safety, and private key management as the most dominant verticals in this category.\u00a0\n\n\n\n\nTransaction safety: These applications provide real-time risk assessment of transactions and flag/block risky operations that could result in loss of funds. Examples include \nCoinCover\n, \nRedefine\n, \nBlowfish\n, and \nHarpie\n.\u00a0\n\n\n\n\nTransaction explainability is a closely related idea and another important area of user security. A minimum requirement for safety is that users should know what is going in and out of a wallet before approving transactions. This is where integrating tools like \nWalletGuard\n\u2014capable of providing human-readable insights into transactions\u2014becomes necessary.\u00a0\n\n\nAsking users to sign random blobs [of data] is unacceptable, and I often find myself unable to interpret data provided by my Ledger wallet (it doesn\u2019t even show which wallet is signing a transaction ). There is a lot of work still to be done here. \u2014 Joran Honig, security auditor at Consensys Diligence\n\n\n\n\nFraud prevention: Tools for detecting malicious contracts and tokens, social media scams, phishing websites, social engineering schemes, and more. \nYakoa\n, \nScamSniffer\n, \nMobyMask\n, \nChainPatrol\n, and \nShield\n are some notable initiatives in this category.\u00a0\n\n\nSecure key management: Private keys and seed phrases are notoriously difficult to secure and create a single point of failure for wallet owners. Multisignature wallet technology and multiparty-computation (MPC) eliminate the safety risk associated with centralized storage of private keys and seed phrases. Popular multisig wallet providers include \nSafe\n and \nBitGo\n, while \nQredo\n, \nGK8\n, \nFordefi\n, and \nFireblocks\n are examples of MPC wallet-as-a-service providers.\n\n\n\n\nThe road ahead for web3 security\n\n\nWeb3 security is still growing, as seen in projects\u2019 focus on pre-launch audits and low adoption of DevSecOps best practices. Still, we expect that adoption of the tooling discussed in this article will grow as product teams in web3 start building with a security-first approach.\u00a0\n\n\nCertain layers of the web3 security stack are still underutilized\u2014a trend which will likely change as the industry matures. In particular, DeFi projects may start to broaden the scope of security activities to include proactive threat monitoring and response and automated risk management (instead of merely focusing on vulnerability assessments).\u00a0\n\n\nWe also expect to see more audit companies build products that help developer teams to automate and scale security testing. Consensys Diligence is already blazing this path with the release of \nDiligence Fuzzing\n\u2014a cutting-edge tool for detecting smart contract vulnerabilities that uses advanced property-based analysis.\u00a0\n\n\nFinally, \non-chain user security\n will become increasingly important as web3 adoption grows. This presents a valuable opportunity for services that keep web3 users (and their assets) safe to scale and build sustainable economic models over time.\n\n\n\n\n\n\nAll posts\n\n\n\n\nchevronRight icon\n\n\n\n\n\n\n\n\n\n\n\n"
    }
}