{
    "threat_intelligence": {
        "url": "https://x.com/BeosinAlert/status/1678787311142854665",
        "timestamp": "2023-07-11 15:54:34",
        "original_content": "~$450k was lost on Polygon and Ethereum due to reentrancy vulnerability.\nAttack flow? 1/ The\nattacker flashloans 5M USDT, called the LibertiVault contract's deposit\nfunction, which would use a portion of the deposited tokens for swapping. The\nminted token amount is calculated based on the proportion between the tokens\ndeposited in this transaction and the contract's balance before the deposit.\n2/ The swap operation calls the attacker's contract. At this point, the hacker\nperforms the first reentrancy by calling the deposit function, then performs a\nsecond reentrancy in the function, depositing 2.5M USDT into the contract. 3/\nAfter the second reentrancy, the contract mints tokens for the hacker based on\nthe ratio of 2.5M USDT to the previous contract's USDT balance. After the\nfirst reentrant deposit function finishes, the hacker deposits another 2.5M\nUSDT. 4/ At this point, after completing the swap operation in the deposit\nfunction, the contract mints tokens again based on the ratio of 2.5M USDT to\nthe contract's USDT balance. 5/ The problem lies in the fourth step. Ideally,\nthe contract balance in the second calculation should be the previous balance\nplus the first 2.5M balance deposited. However, due to reentrancy, and the\ncontract balance was obtained at the beginning, so the parameter did not\nchange, and the original balance was used for calculation."
    }
}