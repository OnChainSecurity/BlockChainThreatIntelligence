{
    "threat_intelligence": {
        "url": "https://dl.acm.org/doi/10.1145/3597503.3639190",
        "timestamp": "2023-01-31 00:00:00",
        "original_content": "[1]\nBlockSec. 2023. Phalcon: Powerful Transaction Explorer Designed for DeFi community. https://phalcon.xyz/ Accessed: 2023-03-27.\n[2]\nLexi Brent, Neville Grech, Sifis Lagouvardos, Bernhard Scholz, and Yannis Smaragdakis. 2020. Ethainter: a smart contract security analyzer for composite vulnerabilities. In \nProceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation.\n 454--469.\n[3]\nBscScan. 2021. ApeRocket Attack Transaction. https://bscscan.com/tx/0x701a308fba23f9b328d2cdb6c7b245f6c3063a510e0d5bc21d2477c9084f93e0.\n[4]\nBscScan. 2021. AutoShark Attack Transaction. https://bscscan.com/tx/0xfbe65ad3eed6b28d59bf6043debf1166d3420d214020ef54f12d2e0583a66f13.\n[5]\nBscScan. 2021. bEarnFi Attack Transaction. https://bscscan.com/tx/0x603b2bbe2a7d0877b22531735ff686a7caad866f6c0435c37b7b49e4bfd9a36c.\n[6]\nBscScan. 2021. ElevenFi Attack Transaction. https://bscscan.com/tx/0x16c87d9c4eb3bc6c4e5fbba789f72e8bbfc81b3403089294a81f31b91088fc2f.\n[7]\nBscScan. 2022. Novo Attack Transaction. https://bscscan.com/tx/0xc346adf14e5082e6df5aeae650f3d7f606d7e08247c2b856510766b4dfcdc57f.\n[8]\nBscScan. 2022. WDoge Attack Transaction. https://bscscan.com/tx/0x4f2005e3815c15d1a9abd8588dd1464769a00414a6b7adcbfd75a5331d378e1d.\n[9]\nBscScan. 2023. The BNB Smart Chain Explorer. https://bscscan.com/\n[10]\nLars Buitinck, Gilles Louppe, Mathieu Blondel, Fabian Pedregosa, Andreas Mueller, Olivier Grisel, Vlad Niculae, Peter Prettenhofer, Alexandre Gramfort, Jaques Grobler, Robert Layton, Jake VanderPlas, Arnaud Joly, Brian Holt, and Ga\u00ebl Varoquaux. 2013. API design for machine learning software: experiences from the scikit-learn project. In \nECML PKDD Workshop: Languages for Data Mining and Machine Learning.\n 108--122.\n[11]\nVitalik Buterin. 2014. Ethereum: A next-generation smart contract and decentralized application platform. https://ethereum.org/en/whitepaper/.\n[12]\nYixin Cao, Chuanwei Zou, and Xianfeng Cheng. 2021. Flashot: a snapshot of flash loan attack on DeFi ecosystem. \narXiv preprint arXiv:2102.00626\n (2021).\n[13]\nZhiyang Chen, Sidi Mohamed Beillahi, and Fan Long. 2022. FlashSyn: Flash Loan Attack Synthesis via Counter Example Driven Approximation. \narXiv preprint arXiv:2206.10708\n (2022). https://arxiv.org/pdf/2206.10708.pdf\n[14]\nZhiyang Chen, Sidi Mohamed Beillahi, and Fan Long. 2024. \nGitHub Artifact for FlashSyn: Flash Loan Attack Synthesis via Counter Example Driven Approximation.\n https://github.com/FlashSyn-Artifact/FlashSyn-Artifact-ICSE24\n[15]\nZhiyang Chen, Sidi Mohamed Beillahi, and Fan Long. 2024. \nZenodo Artifact for FlashSyn: Flash Loan Attack Synthesis via Counter Example Driven Approximation.\n https://zenodo.org/records/10458602\n[16]\nJaeseung Choi, Doyeon Kim, Soomin Kim, Gustavo Grieco, Alex Groce, and Sang Kil Cha. 2021. SMARTIAN: Enhancing smart contract fuzzing with static and dynamic data-flow analyses. In \n2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE).\n IEEE, 227--239.\n[17]\nEdmund Clarke, Orna Grumberg, Somesh Jha, Yuan Lu, and Helmut Veith. 2000. Counterexample-guided abstraction refinement. In \nInternational Conference on Computer Aided Verification.\n Springer, 154--169.\n[18]\nConsenSys. 2022. Mythril. https://github.com/ConsenSys/mythril. Accessed: 2022-06-06.\n[19]\nDamn Vulnerable DeFi. 2023. https://www.damnvulnerabledefi.xyz/. Accessed: 2023-01-31.\n[20]\nDamn Vulnerable DeFi. 2023. Challenge #8 - Puppet. https://www.damnvulnerabledefi.xyz/challenges/8.html. Accessed: 2023-01-31.\n[21]\nDamn Vulnerable DeFi. 2023. Challenge #9 - Puppet v2. https://www.damnvulnerabledefi.xyz/challenges/9.html. Accessed: 2023-01-31.\n[22]\nDefiLlama. 2023. DefiLlama. https://defillama.com/. Accessed: 2023-04-01.\n[23]\nMichael Egorov. 2019. StableSwap-efficient mechanism for Stablecoin liquidity. \nRetrieved Feb\n 24 (2019), 2021.\n[24]\nStefan C Endres, Carl Sandrock, and Walter W Focke. 2018. A simplicial homology algorithm for Lipschitz optimisation. \nJournal of Global Optimization\n 72, 2 (2018), 181--217.\n[25]\nEtherscan. 2020. bZx1 Attack Transaction. https://etherscan.io/tx/0xb5c8bd9430b6cc87a0e2fe110ece6bf527fa4f170a4bc8cd032f768fc5219838.\n[26]\nEtherscan. 2020. Cheesebank Attack Transaction. https://etherscan.io/tx/0x600a869aa3a259158310a233b815ff67ca41eab8961a49918c2031297a02f1cc.\n[27]\nEtherscan. 2020. Eminence Attack Transaction. https://etherscan.io/tx/0x3503253131644dd9f52802d071de74e456570374d586ddd640159cf6fb9b8ad8.\n[28]\nEtherscan. 2020. Harvest_USDC Attack Transaction. https://etherscan.io/tx/0x35f8d2f572fceaac9288e5d462117850ef2694786992a8c3f6d02612277b0877.\n[29]\nEtherscan. 2020. Harvest_USDT Attack Transaction. https://etherscan.io/tx/0x0fc6d2ca064fc841bc9b1c1fad1fbb97bcea5c9a1b2b66ef837f1227e06519a6.\n[30]\nEtherscan. 2020. inverseFi Attack Transaction. https://etherscan.io/tx/0x958236266991bc3fe3b77feaacea120f172c0708ad01c7a715b255f218f9313c.\n[31]\nEtherscan. 2020. ValueDeFi Attack Transaction. https://etherscan.io/tx/0x46a03488247425f845e444b9c10b52ba3c14927c687d38287c0faddc7471150a.\n[32]\nEtherscan. 2020. Warp Attack Transaction. https://etherscan.io/tx/0x8bb8dc5c7c830bac85fa48acad2505e9300a91c3ff239c9517d0cae33b595090.\n[33]\nEtherscan. 2021. Yearn Attack Transaction. https://etherscan.io/tx/0xf6022012b73770e7e2177129e648980a82aab555f9ac88b8a9cda3ec44b30779.\n[34]\nEtherscan. 2023. The Ethereum Blockchain Explorer. https://etherscan.io/\n[35]\nJosselin Feist, Gustavo Grieco, and Alex Groce. 2019. Slither: a static analysis framework for smart contracts. In \n2019 IEEE/ACM 2nd International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB).\n IEEE, 8--15.\n[36]\nYu Feng, Emina Torlak, and Rastislav Bodik. 2019. Precise attack synthesis for smart contracts. \narXiv preprint arXiv:1902.06067\n (2019).\n[37]\nEthereum Foundation. 2023. Solidity Programming Language. https://docs.soliditylang.org/en/v0.8.14/. Accessed: 2023-03-24.\n[38]\nEthereum Foundation. 2023. Vyper Programming Language. https://vyper.readthedocs.io/en/stable/. Accessed: 2023-02-24.\n[39]\nFoundry Contributors. 2023. Foundry. https://github.com/foundry-rs/foundry/. Accessed: 2023-01-31.\n[40]\nJoel Frank, Cornelius Aschermann, and Thorsten Holz. 2020. {ETHBMC}: A Bounded Model Checker for Smart Contracts. In \n29th USENIX Security Symposium (USENIX Security 20).\n 2757--2774.\n[41]\nFtmScan. 2022. OneRing Attack Transaction. https://ftmscan.com/tx/0xca8dd33850e29cf138c8382e17a19e77d7331b57c7a8451648788bbb26a70145.\n[42]\nFTMScan. 2023. The Fantom Blockchain Explorer. https://ftmscan.com/\n[43]\nRundong Gan, Le Wang, Xiangyu Ruan, and Xiaodong Lin. 2022. Understanding Flash-Loan-based Wash Trading. In \nProceedings of the 4th ACM Conference on Advances in Financial Technologies.\n 74--88.\n[44]\nAsem Ghaleb, Julia Rubin, and Karthik Pattabiraman. 2023. AChecker: Statically Detecting Smart Contract Access Control Vulnerabilities. \nProc. ACM ICSE\n (2023).\n[45]\nGustavo Grieco, Will Song, Artur Cygan, Josselin Feist, and Alex Groce. 2020. Echidna: effective, usable, and fast fuzzing for smart contracts. In \nProceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis.\n 557--560.\n[46]\nBo Jiang, Ye Liu, and Wing Kwong Chan. 2018. Contractfuzzer: Fuzzing smart contracts for vulnerability detection. In \n2018 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE).\n IEEE, 259--269.\n[47]\nStephen Joe and Frances Y Kuo. 2008. Constructing Sobol sequences with better two-dimensional projections. \nSIAM Journal on Scientific Computing\n 30, 5 (2008), 2635--2654.\n[48]\nSukrit Kalra, Seep Goel, Mohan Dhawan, and Subodh Sharma. 2018. Zeus: analyzing safety of smart contracts. In \nNdss.\n 1--12.\n[49]\nJames C King. 1976. Symbolic execution and program testing. \nCommun. ACM\n 19, 7 (1976), 385--394.\n[50]\nYe Liu, Yi Li, Shang-Wei Lin, and Cyrille Artho. 2022. Finding permission bugs in smart contracts with role mining. In \nProceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis.\n 716--727.\n[51]\nYe Liu, Yi Li, Shang-Wei Lin, and Rong Zhao. 2020. Towards automated verification of smart contract fairness. In \nProceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering.\n 666--677.\n[52]\nLoi Luu, Duc-Hiep Chu, Hrishi Olickel, Prateek Saxena, and Aquinas Hobor. 2016. Making smart contracts smarter. In \nProceedings of the 2016 ACM SIGSAC conference on computer and communications security.\n 254--269.\n[53]\nQuantstamp Martin Derka. 2023. Automated Flash Loan Attack Synthesis. https://www.youtube.com/watch?v=e6VR7Rv-jiY&t=100s&ab_channel=DeFiSecuritySummit.\n[54]\nJack McKay. 2022. DeFi-ing Cyber Attacks. (2022).\n[55]\nDouglas C Montgomery, Elizabeth A Peck, and G Geoffrey Vining. 2021. \nIntroduction to linear regression analysis.\n John Wiley & Sons.\n[56]\nMark Mossberg, Felipe Manzano, Eric Hennenfent, Alex Groce, Gustavo Grieco, Josselin Feist, Trent Brunson, and Artem Dinaburg. 2019. Manticore: A user-friendly symbolic execution framework for binaries and smart contracts. In \n2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE).\n IEEE, 1186--1189.\n[57]\nTai D Nguyen, Long H Pham, Jun Sun, Yun Lin, and Quang Tran Minh. 2020. sfuzz: An efficient adaptive fuzzer for solidity smart contracts. In \nProceedings of the ACM/IEEE 42nd International Conference on Software Engineering.\n 778--788.\n[58]\nF. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vanderplas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot, and E. Duchesnay. 2011. Scikit-learn: Machine Learning in Python. \nJournal of Machine Learning Research\n 12 (2011), 2825--2830.\n[59]\nKaihua Qin, Liyi Zhou, Benjamin Livshits, and Arthur Gervais. 2021. Attacking the defi ecosystem with flash loans for fun and profit. In \nInternational Conference on Financial Cryptography and Data Security.\n Springer, 3--32.\n[60]\nQuantstamp. 2023. Economic Exploit Analysis. https://quantstamp.com/economic-exploits.\n[61]\nQuantstamp. 2023. Web3 Security Firm Quantstamp Launches Novel Economic Exploit Analysis Service to Combat Flash Loan Attacks. https://www.newswire.ca/news-releases/web3-security-firm-quantstamp-launches-novel-economic-exploit-analysis-service-to-combat-flash-loan-attacks-833815039.html.\n[62]\nShahin Ramezany, Rachsuda Setthawong, and Pisal Setthawong. 2023. Midnight: An Efficient Event-driven EVM Transaction Security Monitoring Approach For Flash Loan Detection. In \n2023 20th International Joint Conference on Computer Science and Software Engineering (JCSSE).\n IEEE, 237--241.\n[63]\nRekt. 2020. WARP FINANCE - REKT. https://rekt.news/warp-finance-rekt/.\n[64]\nOlivier Rukundo and Hanqiang Cao. 2012. Nearest neighbor value interpolation. \narXiv preprint arXiv:1211.1768\n (2012).\n[65]\nThomas Jay Rush. 2023. TrueBlocks. https://trueblocks.io/.\n[66]\nChaofan Shou, Shangyin Tan, and Koushik Sen. 2023. ItyFuzz: Snapshot-Based Fuzzer for Smart Contract. In \nProceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis.\n 322--333.\n[67]\nSlowMist. 2023. The 10 most common attacks. https://hacked.slowmist.io/en/statistics/?c=all&d=all. Accessed: 2023-02-01.\n[68]\nSergei Tikhomirov, Ekaterina Voskresenskaya, Ivan Ivanitskiy, Ramil Takhaviev, Evgeny Marchenko, and Yaroslav Alexandrov. 2018. Smartcheck: Static analysis of ethereum smart contracts. In \nProceedings of the 1st International Workshop on Emerging Trends in Software Engineering for Blockchain.\n 9--16.\n[69]\nPetar Tsankov, Andrei Dan, Dana Drachsler-Cohen, Arthur Gervais, Florian Buenzli, and Martin Vechev. 2018. Securify: Practical security analysis of smart contracts. In \nProceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security.\n 67--82.\n[70]\nUniswap Labs. 2023. Uniswap Protocol. https://uniswap.org/. Accessed: 2023-11-08.\n[71]\nPauli Virtanen, Ralf Gommers, Travis E. Oliphant, Matt Haberland, Tyler Reddy, David Cournapeau, Evgeni Burovski, Pearu Peterson, Warren Weckesser, Jonathan Bright, St\u00e9fan J. van der Walt, Matthew Brett, Joshua Wilson, K. Jarrod Millman, Nikolay Mayorov, Andrew R. J. Nelson, Eric Jones, Robert Kern, Eric Larson, C J Carey, \u0130lhan Polat, Yu Feng, Eric W. Moore, Jake VanderPlas, Denis Laxalde, Josef Perktold, Robert Cimrman, Ian Henriksen, E. A. Quintero, Charles R. Harris, Anne M. Archibald, Ant\u00f4nio H. Ribeiro, Fabian Pedregosa, Paul van Mulbregt, and SciPy 1.0 Contributors. 2020. SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python. \nNature Methods\n 17 (2020), 261--272.\n[72]\nDJ Wales. 2015. Perspective: Insight into reaction coordinates and dynamics from the potential energy landscape. \nThe Journal of chemical physics\n 142, 13 (2015), 130901.\n[73]\nBin Wang, Xiaohan Yuan, Li Duan, Hongliang Ma, Chunhua Su, and Wei Wang. 2022. DeFiScanner: Spotting DeFi Attacks Exploiting Logic Vulnerabilities on Blockchain. \nIEEE Transactions on Computational Social Systems\n (2022).\n[74]\nDabao Wang, Siwei Wu, Ziling Lin, Lei Wu, Xingliang Yuan, Yajin Zhou, Haoyu Wang, and Kui Ren. 2021. Towards a first step to understand flash loan and its applications in defi ecosystem. In \nProceedings of the Ninth International Workshop on Security in Blockchain and Cloud Computing.\n 23--28.\n[75]\nHaijun Wang, Ye Liu, Yi Li, Shang-Wei Lin, Cyrille Artho, Lei Ma, and Yang Liu. 2020. Oracle-supported dynamic exploit generation for smart contracts. \nIEEE Transactions on Dependable and Secure Computing\n (2020).\n[76]\nWarodom Werapun, Tanakorn Karode, Tanwa Arpornthip, Jakapan Suaboot, Esther Sangiamkul, and Pawita Boonrat. 2022. The Flash Loan Attack Analysis (FAA) Framework---A Case Study of the Warp Finance Exploitation. In \nInformatics\n, Vol. 10. MDPI, 3.\n[77]\nGavin Wood. 2012. Ethereum: A Secure Decentralised Generalised Transaction Ledger. https://ethereum.github.io/yellowpaper/paper.pdf.\n[78]\nKarl W\u00fcst and Arthur Gervais. 2018. Do you need a blockchain?. In \n2018 Crypto Valley Conference on Blockchain Technology (CVCBT).\n IEEE, 45--54.\n[79]\nPengcheng Xia, Haoyu Wang, Bingyu Gao, Weihang Su, Zhou Yu, Xiapu Luo, Chao Zhang, Xusheng Xiao, and Guoai Xu. 2021. Trade or Trick? Detecting and Characterizing Scam Tokens on Uniswap Decentralized Exchange. \nProceedings of the ACM on Measurement and Analysis of Computing Systems\n 5, 3 (2021), 1--26.\n[80]\nQing Xia, Zhirong Huang, Wensheng Dou, Yafeng Zhang, Fengjun Zhang, Geng Liang, and Chun Zuo. 2023. Detecting Flash Loan Based Attacks in Ethereum. In \n2023 IEEE 43rd International Conference on Distributed Computing Systems (ICDCS).\n IEEE, 154--165.\n[81]\nJiahua Xu, Krzysztof Paruch, Simon Cousaert, and Yebo Feng. 2021. Sok: Decentralized exchanges (dex) with automated market maker (AMM) protocols. \narXiv preprint arXiv:2103.12732\n (2021).\n[82]\nZhuo Zhang, Brian Zhang, Wen Xu, and Zhiqiang Lin. 2023. Demystifying Exploitable Bugs in Smart Contracts. ICSE.\n[83]\nPeilin Zheng, Zibin Zheng, and Xiapu Luo. 2022. Park: accelerating smart contract vulnerability detection via parallel-fork symbolic execution. In \nProceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis.\n 740--751."
    }
}