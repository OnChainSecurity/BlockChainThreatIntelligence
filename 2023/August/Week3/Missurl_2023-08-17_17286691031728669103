{
    "threat_intelligence": {
        "url": "https://blog.securitybreached.org/2023/08/18/bug-bounty-blueprint-a-beginners-guide/",
        "timestamp": "2023-08-17 00:00:00",
        "original_content": "\n\nA Guide to Getting Started In Bug Bounty Hunting\n | \nMuhammad Khizer Javed\n | \n@KHIZER_JAVED47\n Updated: August 17th, 2023\n\n\nBack in 2019, I penned an earlier version of this guide to Bug Bounty Hunting (\nMirror 1\n) & (\nMirror 2\n), aiming to provide aspiring hunters with a solid foundation. The response was overwhelmingly positive accompanied by a large amount of questions from newcomers. While the previous version of this guide served its purpose well, the ever-evolving landscape of the Bug Bounty Market has ushered in changes and innovations that necessitate a fresh perspective. In light of these transformations and the continued enthusiasm of the bug bounty community, I have decided to craft an update for this guide. Drawing on both the wisdom gained from the past and the insights garnered from the present, this new version aspires to be an even more valuable resource for those venturing into the world of bug bounty hunting.\n\n\nIntroduction to Bug Bounty Hunting\n\n\nBug Bounty Hunting is an inspiring field that has gained tremendous momentum in recent times. In simple terms, a Bug Bounty involves rewarding ethical hackers for identifying and disclosing potential security vulnerabilities found in a participant\u2019s web, mobile, or system applications. Since you\u2019re already here, I assume you have a basic understanding of bug bounty hunting. So, let\u2019s dive into the essential elements as It\u2019s important to understand what bug bounty hunting and ethical hacking really involve.\n\n\nBug Bounty Hunting a Challenge\n\n\nFor me, Bug bounty hunting surpasses traditional penetration testing in its intensity and demand, Bug Bounty Hunting is like penetration testing on steroids. It is a lot harder because of the following factors:\n\n\n\n\nSignificant Vulnerabilities\n:\n Bug bounty programs typically focus on bugs that exhibit genuine business Impact, setting a higher bar for the kind of vulnerabilities that are accepted.\n\n\nCompetition Among Bug Hunters:\n You will be competing against hundreds of other hunters, and only the first one to report a bug is rewarded.\n\n\nNovice Difficulties:\n As a newcomer, the initial stages may be hard, involving the identification of valid bugs and striving to be the first to uncover them.\n\n\n\n\nWith this guide, I will try to cover the following key areas to get you started:\u00a0\n\n\n\n\nUnderstanding the fundamentals of Bug Bounty Hunting.\n\n\nDeveloping the necessary technical skills.\n\n\nLearning about common vulnerabilities and exploits.\n\n\nFinding and choosing bug bounty programs.\n\n\nWriting effective reports to maximize your bounty potential.\n\n\n\n\nRemember, the journey of becoming a\u00a0successful bug bounty hunter requires dedication, patience, and continuous learning. Let\u2019s embark on this exciting journey together!\n\n\nAbout Me\n\n\nI\u2019m \nMuhammad Khizer Javed\n, I am a Cyber Security Professional specializing in web and mobile application penetration testing. I have over six years of experience as a Bug Bounty Hunter & Ethical Hacker.  My focus lies in uncovering vulnerabilities, weaknesses, and misconfigurations using diverse penetration testing techniques. I work as the Lead Penetration Tester at \nSecurityWall\n. Beyond my professional pursuits, my passion for cybersecurity fuels my dedication to continuous learning and knowledge-sharing within the community.\n\n\nThe Attitude of a Hacker\n\n\nBefore going further, it\u2019s crucial to grasp the attitude required for successful bug bounty hunting. A seminal article by \nEric S. Raymond\n, \u201c\nHow To Become A Hacker\n,\u201d serves as an excellent starting point. This article outlines essential attitudes that aspiring hackers need to cultivate, emphasizing the importance of competence over mere posturing.\n\n\nIs there a future for you in Bug Bounty?\n\n\nI\u2019m confident that bug bounty hunting is the way forward when it comes to securing many businesses, and here\u2019s why:\n\n\n\n\nAlways Watching:\n Bug bounty programs keep going as long as the program itself is running.\n\n\nExperts from Everywhere:\n Bug bounty taps into the knowledge of people from all over the world.\n\n\nRewards for Digging Deep:\n There\u2019s a real reason for hackers to find and report vulnerabilities in bug bounty programs.\n\n\nSafe and Exciting:\n It\u2019s a safe and fun space to tinker around and learn.\n\n\n\n\nI\u2019m pretty sure that bug bounty hunting isn\u2019t going anywhere; it\u2019s only going to get better and stronger. The rise of Web3 is already changing how bug bounties work, breaking down barriers have a look below.\n\n\nNot only Web3 but our good old web2 bounties are also getting interesting and big.\n\n\n\n\n\n\n\n\nSo, whether it\u2019s about traditional web stuff or this new Web3 world, bug bounty hunting is a solid bet for those who want to put in the effort and come out ahead.\n\n\nMastering the Basics!\n\n\nBefore embarking on your bug bounty journey, it\u2019s essential to establish a solid grasp of the foundational elements that underpin the world of cybersecurity. This section lays the groundwork for your exploration, ensuring you have the necessary knowledge to navigate the intricate web of networks, systems, and programming languages.\n\n\nTo effectively engage in bug bounty hunting and ethical hacking, a firm grasp of the fundamental building blocks is crucial. Begin your journey by acquainting yourself with the following key concepts:\n\n\nUnderstanding Network, Web, and Communication Basics\n\n\nNetwork Basics:\n \n\n\nAcquire a basic understanding of networking principles, an essential knowledge for anyone delving into the realm of computers. Explore resources such as\n\n\nWeb:\n\n\nFor an overview of the web, you should give a read to any two of these. These will not only refresh your web basic fundamentals but also prepare you for what\u2019s coming ahead.\n\n\nCommunication Protocols:\nIn order to learn something, you must learn how it works and how data is exchanged within or between computers. In our case how an application works and what its flow is we need to learn how it communicates with you. For that purpose, I believe you must go through the following list to understand Network Protocols and their uses.\n\n\nDatabase:\nYou must learn about Database basics and understand it as this is one of the crucial parts of what you\u2019ll gonna be attacking as a hacker in many cases.\n\n\nChoose an Operating System:\n\n\nAccording to\u00a0\nEric Steven Raymond\n,\u00a0\u201c\nThe single most important step any newbie can take toward acquiring hacker skills is to get a copy of Linux or one of the BSD-Unixes, install it on a personal machine, and run it. Trying to learn to hack on a Microsoft Windows machine or under any other closed-source system is like trying to learn to dance while wearing a body cast.\n\u201c\n\n\nWhichever OS you choose, ensure to familiarize yourself with essential commands through cheat sheets like this below:\n\n\n\n\nhttp://linuxcommand.org/\n\n\n\n\n\n\n\n\n\n\nCoding Proficiency: The Path to Mastery:\n\n\nWhile becoming a proficient programmer might not be mandatory, having a solid understanding of programming languages is undeniably beneficial in the realm of bug bounty hunting. \n\n\nI personally suffered for two years in bug bounties because in many cases I couldn\u2019t really understand what the particular code meant, couldn\u2019t exploit an issue properly, or couldn\u2019t even code in general, and I\u2019m, still trying my best to catch up to speed so I\u2019ll suggest you guys not to skip these parts.\nStrengthen your coding skills with the following languages:\n\n\nHTML:\n\n\nPHP:\n\n\nJavaScript:\n\n\nSQL (Structured Query Language):\n\n\nJava:\n\n\nC/C++\n\n\nWhat You\u2019ll learn from these is not just Programming languages but the proper way of web and systems to communicate that you gonna test or build. I\u2019m also a student in Programming so sharing the resources I\u2019m currently following.\n\n\nEmbrace Automation:\n\n\n\n\n\u201cNever send a human to do a machine\u2019s job\u201d \n\n\n\n\nTo truly excel in the world of bug bounty hunting, mastering automation is essential. Automation empowers you to work faster, more efficiently, and continuously while reducing repetitive tasks. \n\n\nHave a look at the slides below and read an awesome article on \u201c\nConference notes: Automation for Bug Hunters (Bug Bounty Talks)\n\u201c\n\n\n\n\n\n\nStrengthen your automation capabilities with these languages, If you can grasp hold on to one or more of the following languages you can easily & very happily automate your work and earn in a better way.\n\n\nPython:\n\n\nBash:\n\n\nGolang:\n\n\nRuby:\n\n\nBy mastering these foundational components, you\u2019ll empower yourself to code tools, understand various software aspects, and embrace the world of automation. Remember, this is your bedrock for growth \u2013 refine your skills, practice consistently, and lay the groundwork for your bug bounty journey.\n\n\n\n\nLearning About Vulnerabilities\n\n\nThis part is all about building your skills, learning about how to identify weaknesses, and arming yourself with the tools to become a bug bounty hunter. Choosing the right path to start in Bug Bounty is very important. Your choice should align with your interests and aspirations. While some opt for the Web Application route due to its approachable nature, others may delve into the realm of Mobile. Here, I\u2019ll be focusing on Web and Mobile paths, reflecting my own area of expertise.\n\n\nThe Web Application Security Path:\n\n\nThe Web Application path is a popular starting point due to its accessible nature. Begin by understanding the intricacies of web applications and the vulnerabilities they can harbor. Resources like:\n\n\nEquip you with the foundational knowledge and insights needed to navigate this domain.\n\n\nThe Mobile Application Security Path:\n\n\nFor those intrigued by the mobile landscape, the Mobile path beckons. Immerse yourself in the world of mobile application security, uncovering potential vulnerabilities that lurk within. Key resources such as:\n\n\nWill serve as your guiding beacons, leading you through the intricate mobile security landscape. \n\n\nKey Resources:\nThe Platforms below should be your first stop toward learning about security.\n\n\nThese platforms offer a wealth of resources and lectures that can significantly enhance your learning journey. They provide invaluable insights, often surpassing what I might share here.\n\n\nExploring Web Application Security: Building Your Foundation\n\n\nIn this phase, we\u2019re delving into the exciting world of exploring Web Application Security.\n\n\nRecommended Books and Guides: Building Your Expertise\n\n\nTo fortify your understanding of Web Application Penetration Testing and Security, delve into the following essential resources:\n\n\nThese resources offer comprehensive insights into the intricacies of web application penetration testing and security assessment.\n\n\nEmbrace OWASP:\n\n\nMake it a priority to familiarize yourself with the OWASP Testing Guide and OWASP Top 10 Vulnerabilities. These invaluable references provide guidance and understanding:\n\n\nThese resources provide a solid foundation for comprehending common vulnerabilities and security practices.\n\n\n\n\nExploring Common Web Application Vulnerabilities\n\n\nThis is a crucial phase of your bug bounty journey, where we learn about common web application vulnerabilities that you\u2019re likely to encounter while hunting for bugs. In this section, my focus is on providing you with valuable resources to understand and learn about these vulnerabilities effectively.\n\n\nCross-Site Request Forgery (CSRF)\n\n\nCross-Site Request Forgery is a potent attack that exploits the trust a web application has in the authenticated user\u2019s browser. By coercing the user into unknowingly performing actions they didn\u2019t intend, the attacker can manipulate the application\u2019s functionalities and wreak havoc.\n\n\nDelve Deeper with These Resources\n\n\nUncover Real-World Scenarios\n:\n\n\nCross-Site Scripting (XSS)\n\n\nCross-Site Scripting, commonly known as XSS, empowers malicious actors to inject client-side scripts into web pages, potentially compromising the security of other users who view those pages. These scripts can execute in a victim\u2019s browser, leading to unauthorized actions, data theft, or the spread of malware.\n\n\nResources for Deepening Your Knowledge\n:\n\n\nPractical Examples and Proof of Concepts\n:\n\n\nSQL Injection\n\n\nSQL injection is a common attack vector that uses malicious SQL code for backend database manipulation to access information that was not intended to be displayed.\n\n\nResources for Deepening Your Knowledge\n:\n\n\nFor a comprehensive grasp of SQL Injection, these resources are your go-to:\n\n\nReal-Life Scenarios: Proof of Concepts\n\n\nRemote Code Execution (RCE)\n\n\nRemote Code Execution (RCE) is a formidable technique that grants attackers the power to execute their own code on a victim\u2019s system. Imagine the potential havoc if a malevolent actor gains control over a machine, enabling them to manipulate it at will.\n\n\nResources for Deepening Your Knowledge\n:\n\n\nTo truly comprehend and master RCE, these references will serve as your compass:\n\n\nPractical Examples and Proof of Concepts\n:\n\n\nInsecure Direct Object Reference (IDOR)\n\n\nIn IDOR an application provides\u00a0\ndirect\n\u00a0access to\u00a0\nobjects\n\u00a0based on the user-supplied input. As a result of this vulnerability, attackers can bypass authorization and access resources in the system directly.\n\n\n\n\nGuiding Lights: References for Clarity\n\n\nEmbark on a journey to understand and combat IDOR with these invaluable references:\n\n\nReal-World Glimpses: Proof of Concepts\n\n\nDive into real-world demonstrations of IDOR\u2019s potential impact:\n\n\nHTTP Request Smuggling\n\n\nHTTP request smuggling is a technique for interfering with the way a web site processes sequences of HTTP requests that are received from one or more users. Request smuggling vulnerabilities are often critical in nature, allowing an attacker to bypass security controls, gain unauthorized access to sensitive data, and directly compromise other application users.\n\n\n\n\nResources for Deepening Your Knowledge\n:\n\n\nFor a comprehensive grasp of Request Smuggling these resources are your go-to:\n\n\nReal-Life Scenarios: Proof of Concepts\n\n\nWeb Cache Deception\n\n\nWeb Cache Deception (WCD) is an attack in which an attacker deceives a caching proxy into improperly storing private information sent over the internet and gaining unauthorized access to that cached data. It was proposed by Omer Gil, a security researcher in 2017.\n\n\n\n\nResources for Deepening Your Knowledge\n:\n\n\nFor a comprehensive grasp of WCD these resources are your go-to:\n\n\nReal-Life Scenarios: Proof of Concepts\n\n\nUnrestricted File Upload\n\n\nAs in the name unrestricted file upload allows user to upload malicious file to a system to further exploit to for Code execution. Think of Unrestricted File Upload as an unlocked gate allowing unauthorized files to infiltrate an application. This vulnerability lays the foundation for attackers to upload and manipulate files, potentially gaining unauthorized control over a system.\n\n\n\n\nIlluminating Your Path: References for Understanding\n\n\nNavigate this vulnerability\u2019s landscape with the help of these guiding references:\n\n\nJourney into the Wild: Real-world Examples\n\n\nXML External Entity Attack (XXE)\n\n\nXXE is an attack against an application that parses XML input. This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser.\n\n\n\n\nGuiding Light: Resources for XXE\n\n\nEmbark on your journey of understanding XXE attacks with these guiding references:\n\n\nReal-world Examples:\n\n\nLocal File Inclusion (LFI)\n\n\nThe File Inclusion vulnerability allows an attacker to include a file, usually exploiting a \u201cdynamic file inclusion\u201d mechanisms implemented in the target application. The vulnerability occurs due to the use of user-supplied input without proper validation.\n\n\n\n\nGuiding Light: Resources for LFI\n\n\nNavigate the LFI terrain armed with these guiding references:\n\n\nReal-world Examples:\n\n\nSubdomain Takeover\n\n\nA subdomain takeover\u00a0occurs when an attacker gains control over a subdomain of a target domain. Typically, this happens when the subdomain has a canonical name (CNAME) in the Domain Name System (DNS), but no host is providing content for it.\n\n\n\n\nGuiding Lights: Sources of Wisdom\n\n\nNavigate the intricate landscape of Subdomain Takeover armed with these enlightening references:\n\n\nReal-world Examples:\n\n\nServer Side Request Forgery (SSRF)\n\n\nServer-side request forgery (also known as SSRF) is a web security vulnerability that allows an attacker to induce the server-side application to make requests to an unintended location. In a typical SSRF attack, the attacker might cause the server to make a connection to internal-only services within the organization\u2019s infrastructure. In other cases, they may be able to force the server to connect to arbitrary external systems, potentially leaking sensitive data such as authorization credentials.\n\n\n\n\nGuiding Beacons: Resources for SSRF\n\n\nLearn from these SSRF with these guiding references:\n\n\nCasting Light: Real-world Examples\n\n\nPeer through the shadows with these real-world Examples of SSRF\u2019s potent capabilities:\n\n\n\n\nDeserialization\n\n\nRace Condition:\n\n\nBusiness Logic Flaws:\n\n\nAuthentication Bypass:\n\n\nHTTP Header Injection:\n\n\nEmail Related:\n\n\nInformation Disclosure\n\n\nSome other real world examples:\n\n\nCloud Security Resources:\n\n\nAs bug bounty hunting evolves, so does the landscape of potential vulnerabilities. With the rapid adoption of cloud technologies, understanding cloud security is becoming increasingly important for bug bounty hunters. Cloud platforms introduce unique attack surfaces and potential weaknesses that skilled hunters can exploit. Here are some valuable resources to help you navigate the world of cloud security and enhance your bug bounty capabilities:\n\n\nCloud Fundamentals and Introduction\n\n\nAWS Penetration Testing\n\n\nAzure Penetration Testing\n\n\nWrite-ups\n\n\n\n\nList Of Some Common Vulnerabilities:\n\n\nThese are some common issues you should understand and learn more about. Here\u2019s a list of attack topics you should explore by reading blogs and reports:\n\n\nFor more detailed information and examples, you can explore additional write-ups at \nPentester.land Writeups\n & \nAwesome Bug Bounty\n. These will help you gain a better understanding of these concepts and how they can be exploited.\n\n\n\n\nExploring Mobile Application Security: Building Your Foundation\n\n\nIn this phase, we\u2019re delving into the exciting world of exploring Mobile Application Security.\n\n\nHere\u2019s a Great \n\u201cAndroid Application Penetration Testing Checklist\u201d\n that you should definitely check out. \n\n\nRecommended Books and Guides: Building Your Expertise\n\n\nTo fortify your understanding of Mobile Application Penetration Testing and Security, delve into the following essential resources:\n\n\nThese resources offer comprehensive insights into the intricacies of mobile application penetration testing and security assessment.\n\n\nEmbrace OWASP:\n\n\nMake it a priority to familiarize yourself with the OWASP Testing Guide and OWASP Top 10 Vulnerabilities. These invaluable references provide guidance and understanding:\n\n\nThese resources provide a solid foundation for comprehending common vulnerabilities and security practices.\n\n\nExploring Common Mobile Application Vulnerabilities\n\n\nThis is a crucial phase of your bug bounty journey, where we learn about common mobile application vulnerabilities that you\u2019re likely to encounter while hunting for bugs. In this section, my focus is on providing you with valuable resources to understand and learn about these vulnerabilities effectively.\n\n\nHardcoded Credentials:\n\n\nDevelopers sometimes embed sensitive credentials in the app\u2019s code, risking the exposure of private API keys and secrets.\n\n\nReal-Life Scenarios: Proof of Concepts\n\n\nWebView Vulnerabilities:\n\n\nSecurity risks associated with improper configuration or usage of WebView, enabling attackers to execute malicious code within the app.\n\n\nReal-Life Scenarios: Proof of Concepts\n\n\nInsecure Deeplinks\n\n\nReal-Life Scenarios: Proof of Concepts\n\n\nRemote Code Execution (RCE) / Arbitrary Code Execution (ACE)\n\n\nInsecure loading of dynamic code allows attackers to execute arbitrary commands, potentially leading to unauthorized access or control of the app.\n\n\nMemory Corruption:\n\n\nExploiting memory vulnerabilities to manipulate app behavior or inject malicious code, potentially compromising user data.\n\n\nCryptography in Mobile Apps:\n\n\nMistakes in implementing cryptographic techniques may expose sensitive data, jeopardizing user privacy.\n\n\nSQL Injection:\n\n\nLack of input validation in SQL queries can lead to injection attacks, enabling attackers to manipulate the app\u2019s database.\n\n\nSession Theft:\n\n\nAttacks that target user sessions, potentially allowing unauthorized access to user accounts.\n\n\nFile Theft and Manipulation:\n\n\nWeaknesses in handling files may enable attackers to steal or manipulate sensitive user data.\n\n\nInsecure WebResourceResponse Configurations:\n\n\nMisconfigurations in WebResourceResponse may expose apps to attacks that manipulate responses and compromise user security.\n\n\nVulnerable to Local File Steal, JavaScript Injection, Open Redirect:\n\n\nApps may be vulnerable to a combination of attacks including local file theft, JavaScript injection, and open redirects.\n\n\nToken Leakage Due to Stolen Files:\n\n\nStolen tokens from insecure storage may lead to unauthorized access to user accounts.\n\n\nBypasses:\n\n\nMethods that allow attackers to bypass security mechanisms, potentially gaining unauthorized access to the app.\n\n\nCross-Site Scripting (XSS):\n\n\nInjection of malicious scripts into web content, leading to unauthorized actions or data theft.\n\n\nPrivilege Escalation:\n\n\nDiscovering vulnerabilities that allow attackers to elevate their privileges, potentially gaining unauthorized access to sensitive app functionalities.\n\n\nIntent Spoofing:\n\n\nManipulating app intents to perform unauthorized actions or access restricted components.\n\n\nAccess of Not Exported Content Providers:\n\n\nGaining unauthorized access to content providers that are not properly exported, potentially exposing sensitive data.\n\n\nAccess Protected Components via Intent:\n\n\nExploiting intents to access protected app components without proper authorization.\n\n\nJavascript Injection:\n\n\nInjection of malicious JavaScript code into app components, enabling attackers to manipulate app behavior.\n\n\nCross-Site Request Forgery (CSRF):\n\n\nTricking users into performing unintended actions, potentially compromising their accounts or data.\n\n\nCase Sensitive Account Collisions:\n\n\nExploiting case sensitivity in account identifiers to perform unauthorized actions or account takeovers.\n\n\nIntercept Broadcasts:\n\n\nIntercepting broadcasts to gain unauthorized access to sensitive information or execute actions.\n\n\nStay updated with HackerOne Public Bug reports by regularly following \nHackerOne Public Reports\n, where you can learn a lot from real-world bug reports.\n\n\n\n\nBlogs & YouTube Channels Worth Following!\n\n\nBlogs and YouTube channels created by seasoned hackers and security enthusiasts serve as invaluable resources for those seeking to delve deeper into the world of vulnerabilities, exploits, and defensive techniques. By following these trusted sources, you gain access to real-world examples, detailed breakdowns of attack vectors, and practical demonstrations. In this section, we\u2019ve curated a list of recommended blogs and YouTube channels that provide a wealth of knowledge, enabling you to enhance your skill set and stay ahead in the dynamic field of bug bounty hunting.\n\n\nBlogs:\n\n\nYouTube Channels:\n\n\n\n\nGroups to Join!\n\n\nYou can also join Slack & Discord communities for hackers to connect, share insights, and learn from fellow bug bounty hunters:\n\n\n\n\nBugBounty World\n\n\nBugBounty Forum\n\n\nSecurityNewbs\n\n\nBugCrowd Discord\n\n\nHacker101 Discord\n\n\n\n\nThese resources, blogs, and YouTube channels are excellent ways to expand your knowledge and stay informed about the latest trends, techniques, and experiences in the world of bug bounty hunting and cybersecurity.\n\n\n\n\nBug Bounty Tools & Scripts: Your Arsenal for Successful Hunting\n\n\nBug Bounty Hunting is a career that is known for the heavy use of security tools. These tools help us find vulnerabilities in software, web, and mobile applications and are an integral part of bounty hunting. Below is a list of security tools for bug bounty hunters.\n\n\nTools you should definitely know about:\n\n\n\n\nBurpSuite\n: Burp Suite is a software security application used for penetration testing of web applications.\n\n\nZAP\n: OWASP ZAP is an open-source web application security scanner.\n\n\nCaido\n: A lightweight web security auditing toolkit.\n\n\n\n\nBelow is an awesome list by \nKamil Vavra\n. I would love it if you could go and give this repository a star.\n\n\nRecon\n\n\nSubdomain Enumeration\n\n\n\n\nSublist3r\n\u00a0\u2013 Fast subdomains enumeration tool for penetration testers\n\n\nAmass\n\u00a0\u2013 In-depth Attack Surface Mapping and Asset Discovery\n\n\nmassdns\n\u00a0\u2013 A high-performance DNS stub resolver for bulk lookups and reconnaissance (subdomain enumeration)\n\n\nFindomain\n\u00a0\u2013 The fastest and cross-platform subdomain enumerator, do not waste your time.\n\n\nSudomy\n\u00a0\u2013 Sudomy is a subdomain enumeration tool to collect subdomains and analyzing domains performing automated reconnaissance (recon) for bug hunting / pentesting\n\n\nchaos-client\n\u00a0\u2013 Go client to communicate with Chaos DNS API.\n\n\ndomained\n\u00a0\u2013 Multi Tool Subdomain Enumeration\n\n\nbugcrowd-levelup-subdomain-enumeration\n\u00a0\u2013 This repository contains all the material from the talk \u201cEsoteric sub-domain enumeration techniques\u201d given at Bugcrowd LevelUp 2017 virtual conference\n\n\nshuffledns\n\u00a0\u2013 shuffleDNS is a wrapper around massdns written in go that allows you to enumerate valid subdomains using active bruteforce as well as resolve subdomains with wildcard handling and easy input-output\u2026\n\n\ncensys-subdomain-finder\n\u00a0\u2013 Perform subdomain enumeration using the certificate transparency logs from Censys.\n\n\nTurbolist3r\n\u00a0\u2013 Subdomain enumeration tool with analysis features for discovered domains\n\n\ncensys-enumeration\n\u00a0\u2013 A script to extract subdomains/emails for a given domain using SSL/TLS certificate dataset on Censys\n\n\ntugarecon\n\u00a0\u2013 Fast subdomains enumeration tool for penetration testers.\n\n\nas3nt\n\u00a0\u2013 Another Subdomain ENumeration Tool\n\n\nSubra\n\u00a0\u2013 A Web-UI for subdomain enumeration (subfinder)\n\n\nSubstr3am\n\u00a0\u2013 Passive reconnaissance/enumeration of interesting targets by watching for SSL certificates being issued\n\n\ndomain\n\u00a0\u2013 enumall.py Setup script for Regon-ng\n\n\naltdns\n\u00a0\u2013 Generates permutations, alterations and mutations of subdomains and then resolves them\n\n\nbrutesubs\n\u00a0\u2013 An automation framework for running multiple open sourced subdomain bruteforcing tools (in parallel) using your own wordlists via Docker Compose\n\n\ndns-parallel-prober\n\u00a0\u2013 his is a parallelised domain name prober to find as many subdomains of a given domain as fast as possible.\n\n\ndnscan\n\u00a0\u2013 dnscan is a python wordlist-based DNS subdomain scanner.\n\n\nknock\n\u00a0\u2013 Knockpy is a python tool designed to enumerate subdomains on a target domain through a wordlist.\n\n\nhakrevdns\n\u00a0\u2013 Small, fast tool for performing reverse DNS lookups en masse.\n\n\ndnsx\n\u00a0\u2013 Dnsx is a fast and multi-purpose DNS toolkit allow to run multiple DNS queries of your choice with a list of user-supplied resolvers.\n\n\nsubfinder\n\u00a0\u2013 Subfinder is a subdomain discovery tool that discovers valid subdomains for websites.\n\n\nassetfinder\n\u00a0\u2013 Find domains and subdomains related to a given domain\n\n\ncrtndstry\n\u00a0\u2013 Yet another subdomain finder\n\n\nVHostScan\n\u00a0\u2013 A virtual host scanner that performs reverse lookups\n\n\nscilla\n\u00a0\u2013 Information Gathering tool \u2013 DNS / Subdomains / Ports / Directories enumeration\n\n\nsub3suite\n\u00a0\u2013 A research-grade suite of tools for subdomain enumeration, intelligence gathering and attack surface mapping.\n\n\ncero\n\u00a0\u2013 Scrape domain names from SSL certificates of arbitrary hosts\n\n\n\n\nPort Scanning\n\n\n\n\nmasscan\n\u00a0\u2013 TCP port scanner, spews SYN packets asynchronously, scanning entire Internet in under 5 minutes.\n\n\nRustScan\n\u00a0\u2013 The Modern Port Scanner\n\n\nnaabu\n\u00a0\u2013 A fast port scanner written in go with focus on reliability and simplicity.\n\n\nnmap\n\u00a0\u2013 Nmap \u2013 the Network Mapper. Github mirror of official SVN repository.\n\n\nsandmap\n\u00a0\u2013 Nmap on steroids. Simple CLI with the ability to run pure Nmap engine, 31 modules with 459 scan profiles.\n\n\nScanCannon\n\u00a0\u2013 Combines the speed of masscan with the reliability and detailed enumeration of nmap\n\n\n\n\nScreenshots\n\n\n\n\nEyeWitness\n\u00a0\u2013 EyeWitness is designed to take screenshots of websites, provide some server header info, and identify default credentials if possible.\n\n\naquatone\n\u00a0\u2013 Aquatone is a tool for visual inspection of websites across a large amount of hosts and is convenient for quickly gaining an overview of HTTP-based attack surface.\n\n\nscreenshoteer\n\u00a0\u2013 Make website screenshots and mobile emulations from the command line.\n\n\ngowitness\n\u00a0\u2013 gowitness \u2013 a golang, web screenshot utility using Chrome Headless\n\n\nWitnessMe\n\u00a0\u2013 Web Inventory tool, takes screenshots of webpages using Pyppeteer (headless Chrome/Chromium) and provides some extra bells & whistles to make life easier.\n\n\neyeballer\n\u00a0\u2013 Convolutional neural network for analyzing pentest screenshots\n\n\nscrying\n\u00a0\u2013 A tool for collecting RDP, web and VNC screenshots all in one place\n\n\nDepix\n\u00a0\u2013 Recovers passwords from pixelized screenshots\n\n\nhttpscreenshot\n\u00a0\u2013 HTTPScreenshot is a tool for grabbing screenshots and HTML of large numbers of websites.\n\n\n\n\nTechnologies\n\n\n\n\nwappalyzer\n\u00a0\u2013 Identify technology on websites.\n\n\nwebanalyze\n\u00a0\u2013 Port of Wappalyzer (uncovers technologies used on websites) to automate mass scanning.\n\n\npython-builtwith\n\u00a0\u2013 BuiltWith API client\n\n\nwhatweb\n\u00a0\u2013 Next generation web scanner\n\n\nretire.js\n\u00a0\u2013 scanner detecting the use of JavaScript libraries with known vulnerabilities\n\n\nhttpx\n\u00a0\u2013 httpx is a fast and multi-purpose HTTP toolkit allows to run multiple probers using retryablehttp library, it is designed to maintain the result reliability with increased threads.\n\n\nfingerprintx\n\u00a0\u2013 fingerprintx is a standalone utility for service discovery on open ports that works well with other popular bug bounty command line tools.\n\n\n\n\nContent Discovery\n\n\n\n\ngobuster\n\u00a0\u2013 Directory/File, DNS and VHost busting tool written in Go\n\n\nrecursebuster\n\u00a0\u2013 rapid content discovery tool for recursively querying webservers, handy in pentesting and web application assessments\n\n\nferoxbuster\n\u00a0\u2013 A fast, simple, recursive content discovery tool written in Rust.\n\n\ndirsearch\n\u00a0\u2013 Web path scanner\n\n\ndirsearch\n\u00a0\u2013 A Go implementation of dirsearch.\n\n\nfilebuster\n\u00a0\u2013 An extremely fast and flexible web fuzzer\n\n\ndirstalk\n\u00a0\u2013 Modern alternative to dirbuster/dirb\n\n\ndirbuster-ng\n\u00a0\u2013 dirbuster-ng is C CLI implementation of the Java dirbuster tool\n\n\ngospider\n\u00a0\u2013 Gospider \u2013 Fast web spider written in Go\n\n\nhakrawler\n\u00a0\u2013 Simple, fast web crawler designed for easy, quick discovery of endpoints and assets within a web application\n\n\ncrawley\n\u00a0\u2013 fast, feature-rich unix-way web scraper/crawler written in Golang.\n\n\n\n\nLinks\n\n\n\n\nLinkFinder\n\u00a0\u2013 A python script that finds endpoints in JavaScript files\n\n\nJS-Scan\n\u00a0\u2013 a .js scanner, built in php. designed to scrape urls and other info\n\n\nLinksDumper\n\u00a0\u2013 Extract (links/possible endpoints) from responses & filter them via decoding/sorting\n\n\nGoLinkFinder\n\u00a0\u2013 A fast and minimal JS endpoint extractor\n\n\nBurpJSLinkFinder\n\u00a0\u2013 Burp Extension for a passive scanning JS files for endpoint links.\n\n\nurlgrab\n\u00a0\u2013 A golang utility to spider through a website searching for additional links.\n\n\nwaybackurls\n\u00a0\u2013 Fetch all the URLs that the Wayback Machine knows about for a domain\n\n\ngau\n\u00a0\u2013 Fetch known URLs from AlienVault\u2019s Open Threat Exchange, the Wayback Machine, and Common Crawl.\n\n\ngetJS\n\u00a0\u2013 A tool to fastly get all javascript sources/files\n\n\nlinx\n\u00a0\u2013 Reveals invisible links within JavaScript files\n\n\n\n\nParameters\n\n\n\n\nparameth\n\u00a0\u2013 This tool can be used to brute discover GET and POST parameters\n\n\nparam-miner\n\u00a0\u2013 This extension identifies hidden, unlinked parameters. It\u2019s particularly useful for finding web cache poisoning vulnerabilities.\n\n\nParamPamPam\n\u00a0\u2013 This tool for brute discover GET and POST parameters.\n\n\nArjun\n\u00a0\u2013 HTTP parameter discovery suite.\n\n\nParamSpider\n\u00a0\u2013 Mining parameters from dark corners of Web Archives.\n\n\nx8\n\u00a0\u2013 Hidden parameters discovery suite written in Rust.\n\n\n\n\nFuzzing\n\n\n\n\nwfuzz\n\u00a0\u2013 Web application fuzzer\n\n\nffuf\n\u00a0\u2013 Fast web fuzzer written in Go\n\n\nfuzzdb\n\u00a0\u2013 Dictionary of attack patterns and primitives for black-box application fault injection and resource discovery.\n\n\nIntruderPayloads\n\u00a0\u2013 A collection of Burpsuite Intruder payloads, BurpBounty payloads, fuzz lists, malicious file uploads and web pentesting methodologies and checklists.\n\n\nfuzz.txt\n\u00a0\u2013 Potentially dangerous files\n\n\nfuzzilli\n\u00a0\u2013 A JavaScript Engine Fuzzer\n\n\nfuzzapi\n\u00a0\u2013 Fuzzapi is a tool used for REST API pentesting and uses API_Fuzzer gem\n\n\nqsfuzz\n\u00a0\u2013 qsfuzz (Query String Fuzz) allows you to build your own rules to fuzz query strings and easily identify vulnerabilities.\n\n\nvaf\n\u00a0\u2013 very advanced (web) fuzzer written in Nim.\n\n\n\n\nCloud Security Tools\n\n\n\n\nExploitation\n\n\nList of tools that will be helpful during exploitation.\n\n\nCommand Injection\n\n\n\n\ncommix\n\u00a0\u2013 Automated All-in-One OS command injection and exploitation tool.\n\n\n\n\nCORS Misconfiguration\n\n\n\n\nCorsy\n\u00a0\u2013 CORS Misconfiguration Scanner\n\n\nCORStest\n\u00a0\u2013 A simple CORS misconfiguration scanner\n\n\ncors-scanner\n\u00a0\u2013 A multi-threaded scanner that helps identify CORS flaws/misconfigurations\n\n\nCorsMe\n\u00a0\u2013 Cross Origin Resource Sharing MisConfiguration Scanner\n\n\n\n\nCRLF Injection\n\n\n\n\nCRLFsuite\n\u00a0\u2013 A fast tool specially designed to scan CRLF injection\n\n\ncrlfuzz\n\u00a0\u2013 A fast tool to scan CRLF vulnerability written in Go\n\n\nCRLF-Injection-Scanner\n\u00a0\u2013 Command line tool for testing CRLF injection on a list of domains.\n\n\nInjectus\n\u00a0\u2013 CRLF and open redirect fuzzer\n\n\n\n\nCSRF Injection\n\n\n\n\nXSRFProbe\n\u00a0-The Prime Cross Site Request Forgery (CSRF) Audit and Exploitation Toolkit.\n\n\n\n\nDirectory Traversal\n\n\n\n\ndotdotpwn\n\u00a0\u2013 DotDotPwn \u2013 The Directory Traversal Fuzzer\n\n\nFDsploit\n\u00a0\u2013 File Inclusion & Directory Traversal fuzzing, enumeration & exploitation tool.\n\n\noff-by-slash\n\u00a0\u2013 Burp extension to detect alias traversal via NGINX misconfiguration at scale.\n\n\nliffier\n\u00a0\u2013 tired of manually add dot-dot-slash to your possible path traversal? this short snippet will increment ../ on the URL.\n\n\n\n\nFile Inclusion\n\n\n\n\nliffy\n\u00a0\u2013 Local file inclusion exploitation tool\n\n\nBurp-LFI-tests\n\u00a0\u2013 Fuzzing for LFI using Burpsuite\n\n\nLFI-Enum\n\u00a0\u2013 Scripts to execute enumeration via LFI\n\n\nLFISuite\n\u00a0\u2013 Totally Automatic LFI Exploiter (+ Reverse Shell) and Scanner\n\n\nLFI-files\n\u00a0\u2013 Wordlist to bruteforce for LFI\n\n\n\n\nGraphQL Injection\n\n\n\n\ninql\n\u00a0\u2013 InQL \u2013 A Burp Extension for GraphQL Security Testing\n\n\nGraphQLmap\n\u00a0\u2013 GraphQLmap is a scripting engine to interact with a graphql endpoint for pentesting purposes.\n\n\nshapeshifter\n\u00a0\u2013 GraphQL security testing tool\n\n\ngraphql_beautifier\n\u00a0\u2013 Burp Suite extension to help make Graphql request more readable\n\n\nclairvoyance\n\u00a0\u2013 Obtain GraphQL API schema despite disabled introspection!\n\n\n\n\nHeader Injection\n\n\n\n\nheadi\n\u00a0\u2013 Customisable and automated HTTP header injection.\n\n\n\n\nInsecure Deserialization\n\n\n\n\nysoserial\n\u00a0\u2013 A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization.\n\n\nGadgetProbe\n\u00a0\u2013 Probe endpoints consuming Java serialized objects to identify classes, libraries, and library versions on remote Java classpaths.\n\n\nysoserial.net\n\u00a0\u2013 Deserialization payload generator for a variety of .NET formatters\n\n\nphpggc\n\u00a0\u2013 PHPGGC is a library of PHP unserialize() payloads along with a tool to generate them, from command line or programmatically.\n\n\n\n\nInsecure Direct Object References\n\n\n\n\nAutorize\n\u00a0\u2013 Automatic authorization enforcement detection extension for burp suite written in Jython developed by Barak Tawily\n\n\n\n\nOpen Redirect\n\n\n\n\nOralyzer\n\u00a0\u2013 Open Redirection Analyzer\n\n\nInjectus\n\u00a0\u2013 CRLF and open redirect fuzzer\n\n\ndom-red\n\u00a0\u2013 Small script to check a list of domains against open redirect vulnerability\n\n\nOpenRedireX\n\u00a0\u2013 A Fuzzer for OpenRedirect issues\n\n\n\n\nRace Condition\n\n\n\n\nrazzer\n\u00a0\u2013 A Kernel fuzzer focusing on race bugs\n\n\nracepwn\n\u00a0\u2013 Race Condition framework\n\n\nrequests-racer\n\u00a0\u2013 Small Python library that makes it easy to exploit race conditions in web apps with Requests.\n\n\nturbo-intruder\n\u00a0\u2013 Turbo Intruder is a Burp Suite extension for sending large numbers of HTTP requests and analyzing the results.\n\n\nrace-the-web\n\u00a0\u2013 Tests for race conditions in web applications. Includes a RESTful API to integrate into a continuous integration pipeline.\n\n\n\n\nRequest Smuggling\n\n\n\n\nhttp-request-smuggling\n\u00a0\u2013 HTTP Request Smuggling Detection Tool\n\n\nsmuggler\n\u00a0\u2013 Smuggler \u2013 An HTTP Request Smuggling / Desync testing tool written in Python 3\n\n\nh2csmuggler\n\u00a0\u2013 HTTP Request Smuggling over HTTP/2 Cleartext (h2c)\n\n\ntiscripts\n\u00a0\u2013 These scripts I use to create Request Smuggling Desync payloads for CLTE and TECL style attacks.\n\n\n\n\nServer Side Request Forgery\n\n\n\n\nSSRFmap\n\u00a0\u2013 Automatic SSRF fuzzer and exploitation tool\n\n\nGopherus\n\u00a0\u2013 This tool generates gopher link for exploiting SSRF and gaining RCE in various servers\n\n\nground-control\n\u00a0\u2013 A collection of scripts that run on my web server. Mainly for debugging SSRF, blind XSS, and XXE vulnerabilities.\n\n\nSSRFire\n\u00a0\u2013 An automated SSRF finder. Just give the domain name and your server and chill!  Also has options to find XSS and open redirects\n\n\nhttprebind\n\u00a0\u2013 Automatic tool for DNS rebinding-based SSRF attacks\n\n\nssrf-sheriff\n\u00a0\u2013 A simple SSRF-testing sheriff written in Go\n\n\nB-XSSRF\n\u00a0\u2013 Toolkit to detect and keep track on Blind XSS, XXE & SSRF\n\n\nextended-ssrf-search\n\u00a0\u2013 Smart ssrf scanner using different methods like parameter brute forcing in post and get\u2026\n\n\ngaussrf\n\u00a0\u2013 Fetch known URLs from AlienVault\u2019s Open Threat Exchange, the Wayback Machine, and Common Crawl and Filter Urls With OpenRedirection or SSRF Parameters.\n\n\nssrfDetector\n\u00a0\u2013 Server-side request forgery detector\n\n\ngrafana-ssrf\n\u00a0\u2013 Authenticated SSRF in Grafana\n\n\nsentrySSRF\n\u00a0\u2013 Tool to searching sentry config on page or in javascript files and check blind SSRF\n\n\nlorsrf\n\u00a0\u2013 Bruteforcing on Hidden parameters to find SSRF vulnerability using GET and POST Methods\n\n\nsingularity\n\u00a0\u2013 A DNS rebinding attack framework.\n\n\nwhonow\n\u00a0\u2013 A \u201cmalicious\u201d DNS server for executing DNS Rebinding attacks on the fly (public instance running on rebind.network:53)\n\n\ndns-rebind-toolkit\n\u00a0\u2013 A front-end JavaScript toolkit for creating DNS rebinding attacks.\n\n\ndref\n\u00a0\u2013 DNS Rebinding Exploitation Framework\n\n\nrbndr\n\u00a0\u2013 Simple DNS Rebinding Service\n\n\nhttprebind\n\u00a0\u2013 Automatic tool for DNS rebinding-based SSRF attacks\n\n\ndnsFookup\n\u00a0\u2013 DNS rebinding toolkit\n\n\n\n\nSQL Injection\n\n\n\n\nsqlmap\n\u00a0\u2013 Automatic SQL injection and database takeover tool\n\n\nNoSQLMap\n\u00a0\u2013 Automated NoSQL database enumeration and web application exploitation tool.\n\n\nSQLiScanner\n\u00a0\u2013 Automatic SQL injection with Charles and sqlmap api\n\n\nSleuthQL\n\u00a0\u2013 Python3 Burp History parsing tool to discover potential SQL injection points. To be used in tandem with SQLmap.\n\n\nmssqlproxy\n\u00a0\u2013 mssqlproxy is a toolkit aimed to perform lateral movement in restricted environments through a compromised Microsoft SQL Server via socket reuse\n\n\nsqli-hunter\n\u00a0\u2013 SQLi-Hunter is a simple HTTP / HTTPS proxy server and a SQLMAP API wrapper that makes digging SQLi easy.\n\n\nwaybackSqliScanner\n\u00a0\u2013 Gather urls from wayback machine then test each GET parameter for sql injection.\n\n\nESC\n\u00a0\u2013 Evil SQL Client (ESC) is an interactive .NET SQL console client with enhanced SQL Server discovery, access, and data exfiltration features.\n\n\nmssqli-duet\n\u00a0\u2013 SQL injection script for MSSQL that extracts domain users from an Active Directory environment based on RID bruteforcing\n\n\nburp-to-sqlmap\n\u00a0\u2013 Performing SQLInjection test on Burp Suite Bulk Requests using SQLMap\n\n\nBurpSQLTruncSanner\n\u00a0\u2013 Messy BurpSuite plugin for SQL Truncation vulnerabilities.\n\n\nandor\n\u00a0\u2013 Blind SQL Injection Tool with Golang\n\n\nBlinder\n\u00a0\u2013 A python library to automate time-based blind SQL injection\n\n\nsqliv\n\u00a0\u2013 massive SQL injection vulnerability scanner\n\n\nnosqli\n\u00a0\u2013 NoSql Injection CLI tool, for finding vulnerable websites using MongoDB.\n\n\n\n\nXSS Injection\n\n\n\n\nXSStrike\n\u00a0\u2013 Most advanced XSS scanner.\n\n\nxssor2\n\u00a0\u2013 XSS\u2019OR \u2013 Hack with JavaScript.\n\n\nxsscrapy\n\u00a0\u2013 XSS spider \u2013 66/66 wavsep XSS detected\n\n\nsleepy-puppy\n\u00a0\u2013 Sleepy Puppy XSS Payload Management Framework\n\n\nezXSS\n\u00a0\u2013 ezXSS is an easy way for penetration testers and bug bounty hunters to test (blind) Cross Site Scripting.\n\n\nxsshunter\n\u00a0\u2013 The XSS Hunter service \u2013 a portable version of XSSHunter.com\n\n\ndalfox\n\u00a0\u2013 DalFox(Finder Of XSS) / Parameter Analysis and XSS Scanning tool based on golang\n\n\nxsser\n\u00a0\u2013 Cross Site \u201cScripter\u201d (aka XSSer) is an automatic -framework- to detect, exploit and report XSS vulnerabilities in web-based applications.\n\n\nXSpear\n\u00a0\u2013 Powerfull XSS Scanning and Parameter analysis tool&gem\n\n\nweaponised-XSS-payloads\n\u00a0\u2013 XSS payloads designed to turn alert(1) into P1\n\n\ntracy\n\u00a0\u2013 A tool designed to assist with finding all sinks and sources of a web application and display these results in a digestible manner.\n\n\nground-control\n\u00a0\u2013 A collection of scripts that run on my web server. Mainly for debugging SSRF, blind XSS, and XXE vulnerabilities.\n\n\nxssValidator\n\u00a0\u2013 This is a burp intruder extender that is designed for automation and validation of XSS vulnerabilities.\n\n\nJSShell\n\u00a0\u2013 An interactive multi-user web JS shell\n\n\nbXSS\n\u00a0\u2013 bXSS is a utility which can be used by bug hunters and organizations to identify Blind Cross-Site Scripting.\n\n\ndocem\n\u00a0\u2013 Uility to embed XXE and XSS payloads in docx,odt,pptx,etc (OXML_XEE on steroids)\n\n\nXSS-Radar\n\u00a0\u2013 XSS Radar is a tool that detects parameters and fuzzes them for cross-site scripting vulnerabilities.\n\n\nBruteXSS\n\u00a0\u2013 BruteXSS is a tool written in python simply to find XSS vulnerabilities in web application.\n\n\nfindom-xss\n\u00a0\u2013 A fast DOM based XSS vulnerability scanner with simplicity.\n\n\ndomdig\n\u00a0\u2013 DOM XSS scanner for Single Page Applications\n\n\nfemida\n\u00a0\u2013 Automated blind-xss search for Burp Suite\n\n\nB-XSSRF\n\u00a0\u2013 Toolkit to detect and keep track on Blind XSS, XXE & SSRF\n\n\ndomxssscanner\n\u00a0\u2013 DOMXSS Scanner is an online tool to scan source code for DOM based XSS vulnerabilities\n\n\nxsshunter_client\n\u00a0\u2013 Correlated injection proxy tool for XSS Hunter\n\n\nextended-xss-search\n\u00a0\u2013 A better version of my xssfinder tool \u2013 scans for different types of xss on a list of urls.\n\n\nXSSCon\n\u00a0\u2013 XSSCon: Simple XSS Scanner tool\n\n\nBitBlinder\n\u00a0\u2013 BurpSuite extension to inject custom cross-site scripting payloads on every form/request submitted to detect blind XSS vulnerabilities\n\n\nXSSOauthPersistence\n\u00a0\u2013 Maintaining account persistence via XSS and Oauth\n\n\nshadow-workers\n\u00a0\u2013 Shadow Workers is a free and open source C2 and proxy designed for penetration testers to help in the exploitation of XSS and malicious Service Workers (SW)\n\n\nrexsser\n\u00a0\u2013 This is a burp plugin that extracts keywords from response using regexes and test for reflected XSS on the target scope.\n\n\nvaya-ciego-nen\n\u00a0\u2013 Detect, manage and exploit Blind Cross-site scripting (XSS) vulnerabilities.\n\n\ndom-based-xss-finder\n\u00a0\u2013 Chrome extension that finds DOM based XSS vulnerabilities\n\n\nxss2png\n\u00a0\u2013 PNG IDAT chunks XSS payload generator\n\n\nXSSwagger\n\u00a0\u2013 A simple Swagger-ui scanner that can detect old versions vulnerable to various XSS attacks\n\n\n\n\nXXE Injection\n\n\n\n\nground-control\n\u00a0\u2013 A collection of scripts that run on my web server. Mainly for debugging SSRF, blind XSS, and XXE vulnerabilities.\n\n\ndtd-finder\n\u00a0\u2013 List DTDs and generate XXE payloads using those local DTDs.\n\n\ndocem\n\u00a0\u2013 Uility to embed XXE and XSS payloads in docx,odt,pptx,etc (OXML_XEE on steroids)\n\n\nxxeserv\n\u00a0\u2013 A mini webserver with FTP support for XXE payloads\n\n\nxxexploiter\n\u00a0\u2013 Tool to help exploit XXE vulnerabilities\n\n\nB-XSSRF\n\u00a0\u2013 Toolkit to detect and keep track on Blind XSS, XXE & SSRF\n\n\nXXEinjector\n\u00a0\u2013 Tool for automatic exploitation of XXE vulnerability using direct and different out of band methods.\n\n\noxml_xxe\n\u00a0\u2013 A tool for embedding XXE/XML exploits into different filetypes\n\n\nmetahttp\n\u00a0\u2013 A bash script that automates the scanning of a target network for HTTP resources through XXE\n\n\n\n\n\n\nMiscellaneous\n\n\nPasswords\n\n\n\n\nthc-hydra\n\u00a0\u2013 Hydra is a parallelized login cracker which supports numerous protocols to attack.\n\n\nDefaultCreds-cheat-sheet\n\u00a0\u2013 One place for all the default credentials to assist the Blue/Red teamers activities on finding devices with default password\n\n\nchangeme\n\u00a0\u2013 A default credential scanner.\n\n\nBruteX\n\u00a0\u2013 Automatically brute force all services running on a target.\n\n\npatator\n\u00a0\u2013 Patator is a multi-purpose brute-forcer, with a modular design and a flexible usage.\n\n\n\n\nSecrets\n\n\n\n\ngit-secrets\n\u00a0\u2013 Prevents you from committing secrets and credentials into git repositories\n\n\ngitleaks\n\u00a0\u2013 Scan git repos (or files) for secrets using regex and entropy\n\n\ntruffleHog\n\u00a0\u2013 Searches through git repositories for high entropy strings and secrets, digging deep into commit history\n\n\ngitGraber\n\u00a0\u2013 gitGraber: monitor GitHub to search and find sensitive data in real time for different online services\n\n\ntalisman\n\u00a0\u2013 By hooking into the pre-push hook provided by Git, Talisman validates the outgoing changeset for things that look suspicious \u2013 such as authorization tokens and private keys.\n\n\nGitGot\n\u00a0\u2013 Semi-automated, feedback-driven tool to rapidly search through troves of public data on GitHub for sensitive secrets.\n\n\ngit-all-secrets\n\u00a0\u2013 A tool to capture all the git secrets by leveraging multiple open source git searching tools\n\n\ngithub-search\n\u00a0\u2013 Tools to perform basic search on GitHub.\n\n\ngit-vuln-finder\n\u00a0\u2013 Finding potential software vulnerabilities from git commit messages\n\n\ncommit-stream\n\u00a0\u2013 #OSINT tool for finding Github repositories by extracting commit logs in real time from the Github event API\n\n\ngitrob\n\u00a0\u2013 Reconnaissance tool for GitHub organizations\n\n\nrepo-supervisor\n\u00a0\u2013 Scan your code for security misconfiguration, search for passwords and secrets.\n\n\nGitMiner\n\u00a0\u2013 Tool for advanced mining for content on Github\n\n\nshhgit\n\u00a0\u2013 Ah shhgit! Find GitHub secrets in real time\n\n\ndetect-secrets\n\u00a0\u2013 An enterprise friendly way of detecting and preventing secrets in code.\n\n\nrusty-hog\n\u00a0\u2013 A suite of secret scanners built in Rust for performance. Based on TruffleHog\n\n\nwhispers\n\u00a0\u2013 Identify hardcoded secrets and dangerous behaviours\n\n\nyar\n\u00a0\u2013 Yar is a tool for plunderin\u2019 organizations, users and/or repositories.\n\n\ndufflebag\n\u00a0\u2013 Search exposed EBS volumes for secrets\n\n\nsecret-bridge\n\u00a0\u2013 Monitors Github for leaked secrets\n\n\nearlybird\n\u00a0\u2013 EarlyBird is a sensitive data detection tool capable of scanning source code repositories for clear text password violations, PII, outdated cryptography methods, key files and more.\n\n\nTrufflehog-Chrome-Extension\n\u00a0\u2013 Trufflehog-Chrome-Extension\n\n\nnoseyparker\n\u00a0\u2013 Nosey Parker is a command-line program that finds secrets and sensitive information in textual data and Git history.\n\n\n\n\nGit\n\n\n\n\nGitTools\n\u00a0\u2013 A repository with 3 tools for pwn\u2019ing websites with .git repositories available\n\n\ngitjacker\n\u00a0\u2013 Leak git repositories from misconfigured websites\n\n\ngit-dumper\n\u00a0\u2013 A tool to dump a git repository from a website\n\n\nGitHunter\n\u00a0\u2013 A tool for searching a Git repository for interesting content\n\n\ndvcs-ripper\n\u00a0\u2013 Rip web accessible (distributed) version control systems: SVN/GIT/HG\u2026\n\n\nGato (Github Attack TOolkit)\n\u00a0\u2013 GitHub Self-Hosted Runner Enumeration and Attack Tool\n\n\n\n\nBuckets\n\n\n\n\nS3Scanner\n\u00a0\u2013 Scan for open AWS S3 buckets and dump the contents\n\n\nAWSBucketDump\n\u00a0\u2013 Security Tool to Look For Interesting Files in S3 Buckets\n\n\nCloudScraper\n\u00a0\u2013 CloudScraper: Tool to enumerate targets in search of cloud resources. S3 Buckets, Azure Blobs, Digital Ocean Storage Space.\n\n\ns3viewer\n\u00a0\u2013 Publicly Open Amazon AWS S3 Bucket Viewer\n\n\nfestin\n\u00a0\u2013 FestIn \u2013 S3 Bucket Weakness Discovery\n\n\ns3reverse\n\u00a0\u2013 The format of various s3 buckets is convert in one format. for bugbounty and security testing.\n\n\nmass-s3-bucket-tester\n\u00a0\u2013 This tests a list of s3 buckets to see if they have dir listings enabled or if they are uploadable\n\n\nS3BucketList\n\u00a0\u2013 Firefox plugin that lists Amazon S3 Buckets found in requests\n\n\ndirlstr\n\u00a0\u2013 Finds Directory Listings or open S3 buckets from a list of URLs\n\n\nBurp-AnonymousCloud\n\u00a0\u2013 Burp extension that performs a passive scan to identify cloud buckets and then test them for publicly accessible vulnerabilities\n\n\nkicks3\n\u00a0\u2013 S3 bucket finder from html,js and bucket misconfiguration testing tool\n\n\n2tearsinabucket\n\u00a0\u2013 Enumerate s3 buckets for a specific target.\n\n\ns3_objects_check\n\u00a0\u2013 Whitebox evaluation of effective S3 object permissions, to identify publicly accessible files.\n\n\ns3tk\n\u00a0\u2013 A security toolkit for Amazon S3\n\n\nCloudBrute\n\u00a0\u2013 Awesome cloud enumerator\n\n\ns3cario\n\u00a0\u2013 This tool will get the CNAME first if it\u2019s a valid Amazon s3 bucket and if it\u2019s not, it will try to check if the domain is a bucket name.\n\n\nS3Cruze\n\u00a0\u2013 All-in-one AWS S3 bucket tool for pentesters.\n\n\n\n\nCMS\n\n\n\n\nwpscan\n\u00a0\u2013 WPScan is a free, for non-commercial use, black box WordPress security scanner\n\n\nWPSpider\n\u00a0\u2013 A centralized dashboard for running and scheduling WordPress scans powered by wpscan utility.\n\n\nwprecon\n\u00a0\u2013 WordPress Recon\n\n\nCMSmap\n\u00a0\u2013 CMSmap is a python open source CMS scanner that automates the process of detecting security flaws of the most popular CMSs.\n\n\njoomscan\n\u00a0\u2013 OWASP Joomla Vulnerability Scanner Project\n\n\npyfiscan\n\u00a0\u2013 Free web-application vulnerability and version scanner\n\n\n\n\nJSON Web Token\n\n\n\n\njwt_tool\n\u00a0\u2013 A toolkit for testing, tweaking and cracking JSON Web Tokens\n\n\nc-jwt-cracker\n\u00a0\u2013 JWT brute force cracker written in C\n\n\njwt-heartbreaker\n\u00a0\u2013 The Burp extension to check JWT (JSON Web Tokens) for using keys from known from public sources\n\n\njwtear\n\u00a0\u2013 Modular command-line tool to parse, create and manipulate JWT tokens for hackers\n\n\njwt-key-id-injector\n\u00a0\u2013 Simple python script to check against hypothetical JWT vulnerability.\n\n\njwt-hack\n\u00a0\u2013 jwt-hack is tool for hacking / security testing to JWT.\n\n\njwt-cracker\n\u00a0\u2013 Simple HS256 JWT token brute force cracker\n\n\n\n\npostMessage\n\n\n\n\npostMessage-tracker\n\u00a0\u2013 A Chrome Extension to track postMessage usage (url, domain and stack) both by logging using CORS and also visually as an extension-icon\n\n\nPostMessage_Fuzz_Tool\n\u00a0\u2013 #BugBounty #BugBounty Tools #WebDeveloper Tool\n\n\n\n\nSubdomain Takeover\n\n\n\n\nsubjack\n\u00a0\u2013 Subdomain Takeover tool written in Go\n\n\nSubOver\n\u00a0\u2013 A Powerful Subdomain Takeover Tool\n\n\nautoSubTakeover\n\u00a0\u2013 A tool used to check if a CNAME resolves to the scope address. If the CNAME resolves to a non-scope address it might be worth checking out if subdomain takeover is possible.\n\n\nNSBrute\n\u00a0\u2013 Python utility to takeover domains vulnerable to AWS NS Takeover\n\n\ncan-i-take-over-xyz\n\u00a0\u2013 \u201cCan I take over XYZ?\u201d \u2014 a list of services and how to claim (sub)domains with dangling DNS records.\n\n\ncnames\n\u00a0\u2013 take a list of resolved subdomains and output any corresponding CNAMES en masse.\n\n\nsubHijack\n\u00a0\u2013 Hijacking forgotten & misconfigured subdomains\n\n\ntko-subs\n\u00a0\u2013 A tool that can help detect and takeover subdomains with dead DNS records\n\n\nHostileSubBruteforcer\n\u00a0\u2013 This app will bruteforce for exisiting subdomains and provide information if the 3rd party host has been properly setup.\n\n\nsecond-order\n\u00a0\u2013 Second-order subdomain takeover scanner\n\n\ntakeover\n\u00a0\u2013 A tool for testing subdomain takeover possibilities at a mass scale.\n\n\ndnsReaper\n\u00a0\u2013 DNS Reaper is yet another sub-domain takeover tool, but with an emphasis on accuracy, speed and the number of signatures in our arsenal!\n\n\n\n\nVulnerability Scanners\n\n\n\n\nnuclei\n\u00a0\u2013 Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use.\n\n\nSn1per\n\u00a0\u2013 Automated pentest framework for offensive security experts\n\n\nmetasploit-framework\n\u00a0\u2013 Metasploit Framework\n\n\nnikto\n\u00a0\u2013 Nikto web server scanner\n\n\narachni\n\u00a0\u2013 Web Application Security Scanner Framework\n\n\njaeles\n\u00a0\u2013 The Swiss Army knife for automated Web Application Testing\n\n\nretire.js\n\u00a0\u2013 scanner detecting the use of JavaScript libraries with known vulnerabilities\n\n\nOsmedeus\n\u00a0\u2013 Fully automated offensive security framework for reconnaissance and vulnerability scanning\n\n\ngetsploit\n\u00a0\u2013 Command line utility for searching and downloading exploits\n\n\nflan\n\u00a0\u2013 A pretty sweet vulnerability scanner\n\n\nFindsploit\n\u00a0\u2013 Find exploits in local and online databases instantly\n\n\nBlackWidow\n\u00a0\u2013 A Python based web application scanner to gather OSINT and fuzz for OWASP vulnerabilities on a target website.\n\n\nbackslash-powered-scanner\n\u00a0\u2013 Finds unknown classes of injection vulnerabilities\n\n\nEagle\n\u00a0\u2013 Multithreaded Plugin based vulnerability scanner for mass detection of web-based applications vulnerabilities\n\n\ncariddi\n\u00a0\u2013 Take a list of domains, crawl urls and scan for endpoints, secrets, api keys, file extensions, tokens and more\u2026\n\n\nOWASP ZAP\n\u00a0\u2013 World\u2019s most popular free web security tools and is actively maintained by a dedicated international team of volunteers\n\n\nSSTImap\n\u00a0\u2013 SSTImap is a penetration testing software that can check websites for Code Injection and Server-Side Template Injection vulnerabilities and exploit them, giving access to the operating system itself.\n\n\n\n\nUncategorized\n\n\n\n\nJSONBee\n\u00a0\u2013 A ready to use JSONP endpoints/payloads to help bypass content security policy (CSP) of different websites.\n\n\nCyberChef\n\u00a0\u2013 The Cyber Swiss Army Knife \u2013 a web app for encryption, encoding, compression and data analysis\n\n\n\u2013\n\n\nbountyplz\n\u00a0\u2013 Automated security reporting from markdown templates (HackerOne and Bugcrowd are currently the platforms supported)\n\n\nPayloadsAllTheThings\n\u00a0\u2013 A list of useful payloads and bypass for Web Application Security and Pentest/CTF\n\n\nbounty-targets-data\n\u00a0\u2013 This repo contains hourly-updated data dumps of bug bounty platform scopes (like Hackerone/Bugcrowd/Intigriti/etc) that are eligible for reports\n\n\nandroid-security-awesome\n\u00a0\u2013 A collection of android security related resources\n\n\nawesome-mobile-security\n\u00a0\u2013 An effort to build a single place for all useful android and iOS security related stuff.\n\n\nawesome-vulnerable-apps\n\u00a0\u2013 Awesome Vulnerable Applications\n\n\nXFFenum\n\u00a0\u2013 X-Forwarded-For [403 forbidden] enumeration\n\n\nhttpx\n\u00a0\u2013 httpx is a fast and multi-purpose HTTP toolkit allow to run multiple probers using retryablehttp library, it is designed to maintain the result reliability with increased threads.\n\n\ncsprecon\n\u00a0\u2013 Discover new target domains using Content Security Policy\n\n\n\n\n\n\nContinual Learning and Practice\n\n\nBug bounty hunting requires continual learning and practice. As you progress, you\u2019ll find each bug bounty program has its unique challenges and rewards. Learn from your experiences and always strive to improve your skills.\n\n\nAs you start your journey to become a bug bounty hunter, you\u2019ll find that practicing and honing your skills is a crucial step. \nCapture The Flag (CTF)\n challenges provide an excellent platform to exercise your abilities by simulating real-world vulnerabilities. Engaging in these challenges exposes you to diverse technologies required to breach applications and systems effectively.\n\n\nLearning and Practicing Resources:\n\n\nTo aid your Bug Bounty Hunting journey, here\u2019s a curated list of reputable CTF platforms and learning resources:\n\n\n\n\nPentesterLab\n: PentesterLab is an excellent resource for learning about web application security and ways how it can be subverted.\n\n\nHacker101\n: This platform offers a collection of web security challenges with a focus on practical skills. It covers a wide range of topics, making it suitable for both beginners and seasoned professionals. \nHacker 101\n\n\nHack The Box\n: With a vibrant community, Hack The Box provides a diverse set of realistic challenges that encompass various skill levels. It\u2019s a great platform to enhance your penetration testing skills. \nHack the Box\n\n\nOverTheWire Wargames\n: This platform offers a series of war games designed to teach and test various security concepts. It covers networking, cryptography, and more. \nOverTheWire Wargames\n\n\nPwnable.tw\n: If you\u2019re interested in binary exploitation and reverse engineering, Pwnable.tw offers challenges that require you to analyze and exploit vulnerable binaries. \nPwnable.tw\n\n\nVulnHub\n: VulnHub provides a collection of vulnerable virtual machines that allow you to practice exploiting real-world scenarios in controlled environments. \nVulnHub\n\n\n\u201cHack Yourself First\u201d by Troy Hunt\n: This resource offers practical lessons to help you understand how common security vulnerabilities can be exploited and how to prevent them. \nHack Yourself First\n\n\nHacksplaining\n: Hacksplaining offers interactive lessons that break down complex security topics, providing clear explanations and practical demonstrations. \nHacksplaining\n\n\nPenetration Testing Practice Labs\n: Aman Hardikar\u2019s collection of practice labs covers various security concepts and challenges, enabling you to test your skills. \nPractice Labs\n\n\nBug Bounty Hunter\n: This platform provides a set of challenges that mimic real-world bug bounty scenarios, helping you refine your skills for actual bug hunting. \nBug Bounty Hunter\n\n\nPortSwigger Web Security\n: PortSwigger offers comprehensive web security training, including hands-on labs and exercises to enhance your web application security skills. \nPortSwigger Web Security\n\n\nTryHackMe\n: TryHackMe offers a variety of virtual rooms and challenges to help you learn and practice penetration testing techniques. \nTryHackMe\n\n\nCTFTime\n: CTFTime is a platform that provides information about upcoming CTF events, allowing you to participate and challenge yourself against the best. \nCTFTime\n\n\nGin and Juice Shop\n: This is a deliberately vulnerable web application that helps you practice your security testing skills in a realistic setting. \nGin and Juice Shop\n\n\nOWASP Juice Shop\n: OWASP Juice Shop is another vulnerable web application designed to educate and train security professionals on web security. \nOWASP Juice Shop\n\n\n\n\nCloud CTFs:\n\n\nMobile CTFs\n\n\n\n\nAllsafe\n\u00a0\u2013 Allsafe is an intentionally vulnerable application that contains various vulnerabilities.\n\n\nInsecureBankv2\n\u00a0\u2013 Vulnerable Android application for developers and security enthusiasts to learn about Android insecurities.\n\n\nVulnerable Kext\n\u00a0\u2013 A WIP \u201cVulnerable by Design\u201d kext for iOS/macOS to play & learn *OS kernel exploitation.\n\n\nInjuredAndroid\n\u00a0\u2013 A vulnerable Android application that shows simple examples of vulnerabilities in a ctf style.\n\n\nDamn Vulnerable Bank\n\u00a0\u2013 Damn Vulnerable Bank is designed to be an intentionally vulnerable android application.\n\n\nInsecureShop\n\u00a0\u2013 An Intentionally designed Vulnerable Android Application built in Kotlin.\n\n\nAndroGoat\n\u00a0\u2013 AndroGoat is purposely developed open source vulnerable/insecure app using Kotlin.\n\n\nDIVA Android\n\u00a0\u2013 Damn Insecure and vulnerable App for Android.\n\n\nOVAA\n\u00a0\u2013 Oversecured Vulnerable Android App.\n\n\nVuldroid\n\u00a0\u2013 Android Application covering various static and dynamic vulnerabilities.\n\n\nAndroid Security Testing\n\u00a0\u2013 hpAndro1337 Application made in Kotlin with multiple vulnerabilities and a CTF.\n\n\n\n\n\n\nCertifications: Your Learning Path\n\n\nWhile hands-on experience and self-study are vital components of becoming a successful Cybersecurity Researcher & a Bug Bounty Hunter, certifications play a significant role in enhancing your skills and credibility as well as they help you get a better job in the future. Here are a few certifications that you might consider pursuing as a beginner:\n\n\n\n\nSelecting a Target, Testing, and Writing Effective Reports\n\n\n\n\nIn this phase, we\u2019ll delve into the critical process of selecting a target, getting started with testing, and ultimately crafting impactful bug reports. Let\u2019s dive right in!\n\n\nHey so Now the Final Phase I have in my mind is for People who have gone through all the good important stuff and now are testing.. so I\u2019ll like to give my advice about a few things and then will sum up this blog.\n\n\nSelecting and Approaching a Target\n\n\nChoosing the right target is a pivotal decision that sets the stage for your Bug Bounty Hunting endeavors. Honestly, your selection should be based on your mood, experience, and skill level. You can opt for a target with an expansive scope, encompassing multiple websites, subdomains, and mobile apps. Alternatively, you may prefer to focus on a single domain or app with intricate features for in-depth testing.\n\n\nList of Bug Bounty Platforms:\n\n\nTo identify suitable programs, Bug Bounty Platforms like those below offer directories of programs.\n\n\nIndividual giants like \nGoogle\n, \nFacebook\n, and \nApple\n run their own bug bounty programs like many other companies.\n\n\nWhen approaching a target, careful reconnaissance is key. Conduct a thorough review of domain history, links, IPs, and Wayback Info to gain insights. Maintain detailed notes of your activities. Initiate your testing process by testing a specific functionality or workflow within the application. Begin by searching for low-hanging fruits and surface-level bugs, documenting their existence. Tools like \nBurp Suite\n or \nOWASP Zap\n are invaluable for observing workflows and requests.\n\n\nCreating multiple accounts allows you to test user-to-user interactions. If not provided, request additional accounts, as it\u2019s a common practice. Engage with the app\u2019s flow, testing and probing for unusual behavior. While encountering anomalies doesn\u2019t always indicate a report-worthy bug, persistent exploration could unveil a security impact. Familiarize yourself with major security vulnerabilities and their corresponding methods. Web application flow comprehension is crucial; delve into API documentation for enhanced understanding. If you encounter challenges, make detailed notes for future reference.\n\n\nThese are great resources that will help you more about approaching & testing the targets\n\n\nReporting a Vulnerability\n\n\nAfter investing considerable time in learning, practicing, and successfully identifying vulnerabilities, the report-writing phase emerges as a crucial step. Crafting an effective report demands precision and clarity to ensure your findings are properly communicated to the security team. A well-structured report expedites the review process and enhances collaboration. Consider the following guidelines:\n\n\n\n\nThoroughness\n: Detail each step required to reproduce the bug. Eliminate ambiguity by providing comprehensive information.\n\n\nSimplicity\n: Avoid unnecessary complexity. While technical details are important, excessive intricacy can hinder comprehension.\n\n\nImpact Communication\n: Clearly convey the vulnerability\u2019s potential impact. If the impact exceeds initial assumptions, support your claims with evidence.\n\n\nCourtesy\n: Remember, your report reaches a human audience. Be polite, patient, and respectful in your communication.\n\n\nMedia Elements\n: Use screenshots, videos, or other media to bolster your report. Visual aids can significantly enhance clarity.\n\n\n\n\nHere are resources that offer detailed insights into writing effective bug reports:\n\n\nRemember, your bug report reflects your professionalism and commitment. A well-crafted report enhances the efficiency of the triage process and maximizes your chances of a successful submission. Stay patient, be persistent, and continue refining your skills as you progress on your Bug Bounty Hunting journey. You\u2019re making a valuable contribution to cybersecurity, one report at a time.\n\n\n\n\nFinal Thoughts: A Bug Bounty Hunter\u2019s Perspective\n\n\nWith this final part, you\u2019ve now gained insights into almost every critical aspect of bug bounty hunting. Your knowledge, skills, and dedication will undoubtedly propel you toward success in the exciting and ever-evolving world of Bug Bounty Hunting & Ethical Hacking.\n\n\nAs someone exploring security, keeping up with the latest can be tough. To those just starting, remember the power of learning on your own. You can achieve anything with the passion to take that first step. I\u2019m still learning and want to share my knowledge to help others learn too.\n\n\nRemember, you might not be perfect, but you\u2019re already better than most.\n\n\nFor both Bug Bounty Hunters and Cybersecurity Researchers, passion is the key. I hope this article has motivated you to start something positive. Thank you for reading. This is what I can share for now, but I promise to update this article with more helpful insights for more readers as much as I can. \n\n\nContribute and Collaborate for a Better Guide\n\n\nIf any of you have valuable insights or information to contribute, I encourage you to get in touch with me. Together, we can enhance this article and make it even more valuable for aspiring bug bounty hunters. Please feel free to reach out using the form below. Your input could make a significant difference in shaping the future of this guide. Thank you for your support and collaboration.\n\n\nPlease let me know if you\u2019d like any further adjustments or if there\u2019s anything else I can assist you with!\n\n\n\n\n\n\n\n\nThanks for reading! I hope this article has been helpful and informative, providing you with valuable insights into the world of bug bounty hunting. Your feedback and comments are highly appreciated. If you found this guide useful or have any suggestions, please take a moment to leave a comment below. Your input helps me continue to improve and provide even better resources for aspiring bug bounty hunters. Happy hunting and stay curious!\n\n\nWith sincere thanks\nMuhammad Khizer Javed\nwhoami.securitybreached.org\n\n\nLike this:\nLike\n \nLoading...\n\n\n\n\nRelated\n\n\nHey guys so this blog post is about bug bounty report, I was able to Bypass Security restrictions by using inspect element and use Paid Features. About the Issue: The issue is really simple to execute. I was looking for a way to use the service for free and managed\u2026\nJune 30, 2020\nIn \"BugBounty POC\"\nHi All, So I decide to write about the Love story between Bug Bounties & Recon. First of all I'm not much of an Expert so I'm just sharing my opinion. This blog post will be focusing on recon & where to look for bugs In a Bug Bounty Program,\u2026\nNovember 25, 2017\nIn \"Tutorials\"\nHey guys so this blog post is about an Issue in Snapchat's Website, due to Improper Input Validation one can add custom text & urls in SMS send by Snapchat here's a Short POC of the issue. \u00a0 \u00a0 HackerOne Report: #420420 A Subdomain on Snapchat's website https://whatis.snapchat.com/ Gives the\u2026\nJanuary 26, 2020\nIn \"BugBounty POC\"\n\n\n\n\n\n\nDiscover more from Security Breached Blog\n\n\nSubscribe to get the latest posts sent to your email.\n\n\n\n\n\n\n\n"
    }
}