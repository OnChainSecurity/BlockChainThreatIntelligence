{
    "threat_intelligence": {
        "url": "https://www.mdpi.com/2227-9709/10/1/3",
        "timestamp": "2023-03-27 00:00:00",
        "original_content": "This section presents a novel Flash loan Attack Analysis (FAA) framework for analyzing the DeFi protocol risks following an attack flow and validating the efficiency of various mitigation models.\nAs depicted in , the FAA framework consists of five main processes. (\nSection 3.1\n) Damage model formulation: this process converts attack steps (e.g., flowchart, transaction steps, or text description) to a damage model. Additionally, it defines a core sub-model, which is a plugin of the damage model. The core submodel represents a mitigation model, such as the LP token price calculation in the Warp Finance case. (\nSection 3.2\n) Damage model validation: the damage model is validated using the blockchain data snapshot when the system was under attack. (\nSection 3.3\n) Mitigation test: the mitigation model is plugged into the core submodel. Then, it is tested using the same blockchain data snapshot as in the previous step. The output from this process provides quantitative results indicating the efficiency of the particular attack prevention techniques. Here, the outcome is vital to measure the efficiency of the prevention techniques. As some prevention methods can protect platforms in specific cases only, the next processes are necessary for uncovering hidden risks. (\nSection 3.4\n) Internal parameter test: the internal parameters are the parameters of the protocols that can be adjusted, such as the collateral ratio, slippage tolerance, liquidation, and incentive values. In this process, protocol parameters are dynamically adjusted to test the damage and mitigation models. (\nSection 3.5\n) External parameter test: the external parameters refer to values that do not depend on the protocol, such as token prices, market conditions, and trading volumes. The impacts of external parameters are derived from the actual blockchain data. To uncover hidden risks, damage models are simulated under the conditions of internal and external parameters, and a risk report of the protocol is generated based on variations of the parameters. The risk report consists of system damages and prevention quantity under the internal and external parameters. As a result, developers can simulate the damage and protection level of the prevention strategy based on various internal and external parameter settings; hence, the DeFi protection can be maximized. The detailed steps of the process are described in the following sections.\n  3.1. Damage Model Formulation\nThis process is necessary to enable an insightful DeFi risk analysis because it provides a mathematical model for analyzing the damage from an attack based on different parameters. The damage model\u2019s inputs are a sequence of actions and asset properties (the so-called attack flow); an output of the damage model is a mathematical model.\nOur proposed FAA framework is developed based on data from the Warp Finance attack [\n6\n]. However, the damage model is generic for flash loan attacks on any DeFi platform as the mathematical equations define relationships between all the related parameters.\nIn the Warp Finance incident, the attacker conducted multiple attack steps to exploit the platform and steal tokens as illustrated in . We walk through the exploit steps and formulate the mathematical model based on attacker\u2019s actions. The following form the attack flow in the Warp Finance case:\n\n\n\n\n\n\n\n\nFigure 2.\n\n      Warp finance attack steps.\n\n\n  \n\n\n(i)\nThe attacker used flash loans to borrow DAI from dYdX solo margin pools. The amount of the borrowed DAI is denoted as \n\n0\nF\n0\n.\n(ii)\nWETH is borrowed from the Uniswap and dYdX solo margin pools using flash loans. Let \n\n1\nF\n1\n denote the maximum amount of WETH the attacker can borrow.\n(iii)\nDAI and WETH were supplied to Uniswap\u2019s WETH-DAI pool to mint WETH-DAI LP tokens, which would be used as collateral for borrowing tokens from Warp Finance. Note that the values of the supplied DAI and WETH must be equal. Let \n\n0\nr\n0\n and \n\n1\nr\n1\n denote the amount of DAI and WETH in the pool, respectively.\n(iv)\nThe attacker supplied all DAI (\n\n0\ns\n0\n) and the equivalent WETH (\n\n1\ns\n1\n) to the pool:\n            \n\n\n\n\n\n1\n=\n\n1\n\n0\n\u00b7\n\n0\n=\n\n1\n\n0\n\u00b7\n\n0\n.\ns\n1\n=\nr\n1\nr\n0\n\u00b7\ns\n0\n=\nr\n1\nr\n0\n\u00b7\nF\n0\n.\n\n\n\n\n\n\n(2)\n\n\n\n\nThe minted LP token amount (\nD\n), where \n\n\nl\np\n represents the total supply of WETH-DAI tokens before supplying, is determined by the following equation:\n            \n\n\n\n\n\n=\n\n\n\u00b7\n\n0\n\n0\n=\n\n\n\u00b7\n\n0\n\n0\n.\nD\n=\nl\np\n\u00b7\ns\n0\nr\n0\n=\nl\np\n\u00b7\nF\n0\nr\n0\n.\n\n\n\n\n\n\n(3)\n\n\n\n\nAfter adding liquidity, the pool reserved, and the total LP token supply was changed as follows:\n            \n\n\n\n\n\n0\n=\n\n0\n+\n\n0\n=\n\n0\n+\n\n0\n,\nR\n0\n=\nr\n0\n+\ns\n0\n=\nr\n0\n+\nF\n0\n,\n\n\n\n\n\n\n(4)\n\n\n\n\n\n\n\n\n\n1\n=\n\n1\n+\n\n1\n=\n\n1\n+\n\n1\n\n0\n\u00b7\n\n0\n=\n\n1\n\u00b7\n(\n1\n+\n\n0\n\n0\n)\n,\nR\n1\n=\nr\n1\n+\ns\n1\n=\nr\n1\n+\nr\n1\nr\n0\n\u00b7\nF\n0\n=\nr\n1\n\u00b7\n(\n1\n+\nF\n0\nr\n0\n)\n,\n\n\n\n\n\n\n(5)\n\n\n\n\n\n\n\n\n\n\n=\n\n\n+\n\n\n\u00b7\n\n0\n\n0\n=\n\n\n\u00b7\n(\n1\n+\n\n0\n\n0\n)\n.\nL\nP\n=\nl\np\n+\nl\np\n\u00b7\ns\n0\nr\n0\n=\nl\np\n\u00b7\n(\n1\n+\ns\n0\nr\n0\n)\n.\n\n\n\n\n\n\n(6)\n\n\n\n\n(v)\nSince the exploitation occurred while Warp finance was using their equation, the LP token price (\n\n\n\nP\nL\nP\n) was calculated using TWAP and real-time reserves, where \n\n\n\n\n0\nt\nw\na\np\n0\n and \n\n\n\n\n1\nt\nw\na\np\n1\n denote DAI and WETH TWAP, respectively:\n            \n\n\n\n\n\n\n\n=\n\n0\n\u00b7\n\n\n\n\n0\n+\n\n1\n\u00b7\n\n\n\n\n1\n\n\n.\nP\nL\nP\n=\nR\n0\n\u00b7\nt\nw\na\np\n0\n+\nR\n1\n\u00b7\nt\nw\na\np\n1\nL\nP\n.\n\n\n\n\n\n\n(7)\n\n\n\n\nAccording to the report [\n6\n], the root cause of the exploitation related to the LP token price (\n\n\n\nP\nL\nP\n) calculation. Hence, we define the LP token price model (i.e., Equation (\n7\n)) as the \ncore submodel\n, which is to be used in the upcoming steps.\nAll the minted WETH-DAI LP tokens (\nD\n) were supplied to Warp Finance as collateral. LP token value in USD is denoted as (\n\n\n\nP\nL\nP\n). The attacker was able to borrow tokens from Warp Finance. The borrowing limit (\nB\n) is the deposited LP token value divided by 1.5, which is the constant collateral value defined by the Warp Finance protocol.\n            \n(vi)\nThe attacker swapped the remaining WETH (\n\n\n1\nI\nn\n1\n) for DAI (\n\n\n\n0\nO\nu\nt\n0\n) using the Uniswap WETH-DAI pool,\n            \nSince the token swapping fee is 0.3%, \n\n\n1\nI\nn\n1\n is multiplied by 0.997. Thus, the trading output can be determined as:\n            \n\n\n\n\n\n\n\n0\n=\n\n0\n\n1\n+\n0.997\n\n\n1\n\u00b7\n0.997\n\n\n1\n.\nO\nu\nt\n0\n=\nR\n0\nR\n1\n+\n0.997\nI\nn\n1\n\u00b7\n0.997\nI\nn\n1\n.\n\n\n\n\n\n\n(10)\n\n\n\n\nThis step was the core of the attack as the attacker was able to substantially increase the amount of WETH (i.e., the expensive token) in the pool. The reserve amount changed dramatically after the trade:\n            \n(vii)\nAt this stage, the changing of real-time reserves causes LP token price updates. The manipulated LP token price is denoted as \n\n\u2032\n\n\nP\nL\nP\n\u2032\n.\n            \n\n\n\n\n\n\u2032\n\n\n=\n\n\u2032\n0\n\u00b7\n\n\n\n\n0\n+\n\n\u2032\n1\n\u00b7\n\n\n\n\n1\n\n\n.\nP\nL\nP\n\u2032\n=\nR\n0\n\u2032\n\u00b7\nt\nw\na\np\n0\n+\nR\n1\n\u2032\n\u00b7\nt\nw\na\np\n1\nL\nP\n.\n\n\n\n\n\n\n(13)\n\n\n\n\nThe changing of LP token price affects borrow limit value. The manipulated borrow limit (\n\n\u2032\nB\n\u2032\n) is determined as follows:\n            \n\n\n\n\n\n\u2032\n=\n\n\u2032\n\n\n\u00b7\n\n1.5\n,\nB\n\u2032\n=\nP\nL\nP\n\u2032\n\u00b7\nD\n1.5\n,\n\n\n\n\n\n\n(14)\n\n\n\n\n(viii)\nThe attacker borrowed as much DAI as possible from the DAI Warp vault (\n\n\n\n\nV\nD\nA\nI\n). DAI was the priority borrowed token because the attacker could swap WETH back at a lower rate in the manipulated WETH-DAI pool. USDC (\n\n\n\n\n\nV\nU\nS\nD\nC\n) was borrowed as the secondary token after the vaults were emptied of DAI. The actual borrowed amounts (\n\n\u2032\n\n\n\nB\nD\nA\nI\n\u2032\n and \n\n\u2032\n\n\n\n\nB\nU\nS\nD\nC\n\u2032\n) are thus determined by the minimum value between the borrowing limit and the available liquidity in the vaults:\n            \n\n\n\n\n\n\u2032\n\n\n\n=\nmin\n(\n\n\u2032\n,\n\n\n\n\n)\n,\nB\nD\nA\nI\n\u2032\n=\nmin\n(\nB\n\u2032\n,\nV\nD\nA\nI\n)\n,\n\n\n\n\n\n\n(15)\n\n\n\n\n\n\n\n\n\n\u2032\n\n\n\n\n=\nmin\n(\n\n\u2032\n\u2212\n\n\u2032\n\n\n\n,\n\n\n\n\n\n)\n.\nB\nU\nS\nD\nC\n\u2032\n=\nmin\n(\nB\n\u2032\n\u2212\nB\nD\nA\nI\n\u2032\n,\nV\nU\nS\nD\nC\n)\n.\n\n\n\n\n\n\n(16)\n\n\n\n\n(ix)\nTo accomplish the exploit, the attacker had to repay all flash loan positions, particularly, \n\n0\nF\n0\n and \n\n1\nF\n1\n. As the attacker received DAI from the first swap (\n\n\n\n0\nO\nu\nt\n0\n) and borrowing (\n\n\u2032\n\n\n\nB\nD\nA\nI\n\u2032\n), he or she could spare \n\n0\nF\n0\n DAI for flash loan repayment. However, he or she did not have WETH. Hence, he or she swapped all the remaining DAI for WETH from the manipulated WETH-DAI pool. Here, we can calculate \n\n\n0\nI\nn\n0\n and \n\n\n\n\n\n\n\n\u2032\nO\nu\nt\nW\nE\nT\nH\n\u2032\n as:\n            \n\n\n\n\n\n\n0\n=\n\n\n\n0\n+\n\n\u2032\n\n\n\n\u2212\n\n0\n,\nI\nn\n0\n=\nO\nu\nt\n0\n+\nB\nD\nA\nI\n\u2032\n\u2212\nF\n0\n,\n\n\n\n\n\n\n(17)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2032\n=\n\n\u2032\n1\n\n\u2032\n0\n+\n0.997\n\n\n0\n\u00b7\n0.997\n\n\n0\n.\nO\nu\nt\nW\nE\nT\nH\n\u2032\n=\nR\n1\n\u2032\nR\n0\n\u2032\n+\n0.997\nI\nn\n0\n\u00b7\n0.997\nI\nn\n0\n.\n\n\n\n\n\n\n(18)\n\n\n\n\nAs the WETH that was swapped for DAI was insufficient for repayment, the attacker used all the borrowed USDC to buy WETH from the Sushiswap WETH-USDC pool. Therefore,\n            \n\n\n\n\n\n\n\n\n\n\n\n=\n\n\n\n\n\n\n\n\n\n\n+\n0.997\n\n\u2032\n\n\n\n\n\u00b7\n0.997\n\n\u2032\n\n\n\n\n.\nO\nu\nt\nW\nE\nT\nH\n=\nr\nW\nE\nT\nH\nr\nU\nS\nD\nC\n+\n0.997\nB\nU\nS\nD\nC\n\u2032\n\u00b7\n0.997\nB\nU\nS\nD\nC\n\u2032\n.\n\n\n\n\n\n\n(19)\n\n\n\n\n(x)\nThis exploit damaged Warp Finance because the attacker borrowed more tokens than the proper limit. When the excess amount borrowed was sufficient for flash loan repayment plus the borrowing fee, the attack was considered successful. The damage from the attack can be evaluated by the number of tokens the attacker received after the success of the transaction. We therefore can calculate the value of tokens stolen from the platform (denoted \n\u03a6\n\u03a6\n) as follows:\n            \n\n\n\n\n\u03a6\n=\nmax\n(\n\n\n\n\n\n\n\n\u2032\n+\n\n\n\n\n\n\n\n\u2212\n\n1\n\u2212\n\n,\n0\n)\n.\n\u03a6\n=\nmax\n(\nO\nu\nt\nW\nE\nT\nH\n\u2032\n+\nO\nu\nt\nW\nE\nT\nH\n\u2212\nF\n1\n\u2212\nc\n,\n0\n)\n.\n\n\n\n\n\n\n(20)\n\n\n\n\nThe next process in formulating the damage model is to define a core submodel, which is a plugin of this damage model (i.e., Equation (\n7\n)). During the analysis, several core submodels will be applied with the damage model. Since the main vulnerability is related to the LP token price calculation, the core submodel for this case is the LP token price model. In this work, two LP token price models are compared: the Warp Finance and fair reserves models.\n  3.1.1. Warp Finance Model\nWarp Finance prevents LP token price manipulation by using Uniswap Oracle TWAP instead of relying on the real-time price, calculated from reserve tokens. However, there is no time-weighted-average reserve (TWAR) available on Uniswap Oracle [\n48\n]. Thus, it used the real-time reserve amount, which was the leading cause of the exploitation. According to Equation (\n7\n), the LP token price (\n\n\n\nP\nL\nP\n) can be calculated by incorporating the real-time reserve amount (\n\n0\nr\n0\n and \n\n1\nr\n1\n), the TWAP in USDC (\n\n\n\n\n0\nt\nw\na\np\n0\n and \n\n\n\n\n1\nt\nw\na\np\n1\n) and the total supply of LP tokens (\n\n\nL\nP\n).\n          \n\n\n\n\n\n\n\n=\n\n0\n\u00b7\n\n\n\n\n0\n+\n\n1\n\u00b7\n\n\n\n\n1\n\n\nP\nL\nP\n=\nr\n0\n\u00b7\nt\nw\na\np\n0\n+\nr\n1\n\u00b7\nt\nw\na\np\n1\nL\nP\n\n\n\n\n\n\n(21)\n\n\n\n\nAlthough the TWAP price is not affected by short term trade, the reserve amount changes with every trade. This factor is the main vulnerability, where attackers could increase the reserve of the expensive side token with a substantial trade on Uniswap. As a result, the LP token price dramatically increases, and attackers can borrow tokens beyond the proper borrow limit.\n  3.1.2. Fair Reserves Model\nAfter the exploitation took place, the head developer of Alpha Finance demonstrated an idea to minimize damage. He proposed a fair reserve price calculation. It provides time-weighted-average reserves (TWARs), which are derived from the TWAP [\n49\n].\nThe constant product (\nk\n) is the product of a pair of reserves (\n\n0\nr\n0\n and \n\n1\nr\n1\n). It remains the same value during trades to keep the preserved fraction. In actual execution, the constant product changes slightly every trade due to the trading fee; however, it is negligible because the fee is very small. The \nk\n value will only change after liquidity is added. The real-time reserves and the TWARs calculate the same \nk\n value as shown in Equation (\n22\n) below.\n          \n\n\n\n\n\n=\n\n0\n\u00b7\n\n1\n=\n\n\n\n\n0\n\u00b7\n\n\n\n\n1\nk\n=\nr\n0\n\u00b7\nr\n1\n=\nt\nw\na\nr\n0\n\u00b7\nt\nw\na\nr\n1\n\n\n\n\n\n\n(22)\n\n\n\n\nToken prices (\n\n0\np\n0\n and \n\n1\np\n1\n) can be determined by the fraction of their reserves. TWAR values can be used to calculate the TWAP similarly to the real-time values:\n\n\n\n\n\n0\n=\n\n1\n\n0\n\u00b7\n\n1\n,\n\n\n\n\n0\n=\n\n\n\n\n1\n\n\n\n\n0\n\u00b7\n\n\n\n\n1\n.\np\n0\n=\nr\n1\nr\n0\n\u00b7\np\n1\n,\nt\nw\na\np\n0\n=\nt\nw\na\nr\n1\nt\nw\na\nr\n0\n\u00b7\nt\nw\na\np\n1\n.\n\n\n\n\n\n\n(23)\n\n\n\n\nFrom Equation (\n22\n), we obtain TWAR values from the following equations:\n\n\n\n\n\n\n\n\n0\n=\n\n\n\n\n\n1\n,\nt\nw\na\nr\n0\n=\nk\nt\nw\na\nr\n1\n,\n\n\n\n\n\n\n(24)\n\n\n\n\n\n\n\n\n\n\n\n\n1\n=\n\n\n\n\n\n0\n,\nt\nw\na\nr\n1\n=\nk\nt\nw\na\nr\n0\n,\n\n\n\n\n\n\n(25)\n\n\n\n\n\n          substitute Equation (\n24\n) into Equation (\n23\n):\n\n\n\n\n\n\n\n\n0\n=\n\n\n\n\n2\n1\n\n\u00b7\n\n\n\n\n1\n,\n\n\n\n\n2\n1\n=\n\n\u00b7\n\n\n\n\n0\n\n\n\n\n1\n,\n\n\n\n\n1\n=\n\n\u00b7\n\n\n\n\n0\n\n\n\n\n1\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n,\nt\nw\na\np\n0\n=\nt\nw\na\nr\n1\n2\nk\n\u00b7\nt\nw\na\np\n1\n,\nt\nw\na\nr\n1\n2\n=\nk\n\u00b7\nt\nw\na\np\n0\nt\nw\na\np\n1\n,\nt\nw\na\nr\n1\n=\nk\n\u00b7\nt\nw\na\np\n0\nt\nw\na\np\n1\n,\n\n\n\n\n\n\n(26)\n\n\n\n\n\n          substituting Equation (\n25\n) into Equation (\n23\n) yields:\n\n\n\n\n\n\n\n\n0\n=\n\n\n\n\n\n2\n0\n\u00b7\n\n\n\n\n1\n,\n\n\n\n\n2\n0\n=\n\n\u00b7\n\n\n\n\n1\n\n\n\n\n0\n,\n\n\n\n\n0\n=\n\n\u00b7\n\n\n\n\n1\n\n\n\n\n0\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n.\nt\nw\na\np\n0\n=\nk\nt\nw\na\nr\n0\n2\n\u00b7\nt\nw\na\np\n1\n,\nt\nw\na\nr\n0\n2\n=\nk\n\u00b7\nt\nw\na\np\n1\nt\nw\na\np\n0\n,\nt\nw\na\nr\n0\n=\nk\n\u00b7\nt\nw\na\np\n1\nt\nw\na\np\n0\n.\n\n\n\n\n\n\n(27)\n\n\n\n\nThe TWARs can be applied to the LP price calculation as follows:\n\n\n\n\n\n\n\n=\n\n\n\n\n0\n\u00b7\n\n\n\n\n0\n+\n\n\n\n\n1\n\u00b7\n\n\n\n\n1\n\n\n=\n\n\u00b7\n\n\n\n\n1\n\n\n\n\n0\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n\u00b7\n\n\n\n\n0\n+\n\n\u00b7\n\n\n\n\n0\n\n\n\n\n1\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n\u00b7\n\n\n\n\n1\n\n\n=\n\n\u00b7\n\n\n\n\n1\n\u00b7\n\n\n\n\n2\n0\n\n\n\n\n0\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n+\n\n\u00b7\n\n\n\n\n0\n\u00b7\n\n\n\n\n2\n1\n\n\n\n\n1\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n\n\n=\n\n\u00b7\n\n\n\n\n1\n\u00b7\n\n\n\n\n0\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n+\n\n\u00b7\n\n\n\n\n0\n\u00b7\n\n\n\n\n1\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n\n\n=\n2\n\u00b7\n\n\u00b7\n\n\n\n\n1\n\u00b7\n\n\n\n\n0\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n\n\n.\nP\nL\nP\n=\nt\nw\na\nr\n0\n\u00b7\nt\nw\na\np\n0\n+\nt\nw\na\nr\n1\n\u00b7\nt\nw\na\np\n1\nL\nP\n=\nk\n\u00b7\nt\nw\na\nr\n1\nt\nw\na\nr\n0\n\u00b7\nt\nw\na\np\n0\n+\nk\n\u00b7\nt\nw\na\np\n0\nt\nw\na\np\n1\n\u00b7\nt\nw\na\np\n1\nL\nP\n=\nk\n\u00b7\nt\nw\na\nr\n1\n\u00b7\nt\nw\na\np\n0\n2\nt\nw\na\nr\n0\n+\nk\n\u00b7\nt\nw\na\np\n0\n\u00b7\nt\nw\na\np\n1\n2\nt\nw\na\np\n1\nL\nP\n=\nk\n\u00b7\nt\nw\na\nr\n1\n\u00b7\nt\nw\na\np\n0\n+\nk\n\u00b7\nt\nw\na\np\n0\n\u00b7\nt\nw\na\np\n1\nL\nP\n=\n2\n\u00b7\nk\n\u00b7\nt\nw\na\np\n1\n\u00b7\nt\nw\na\np\n0\nL\nP\n.\n\n\n\n\n\n\n(28)\n\n\n\n\nThe fair reserve LP token price model is promising as robust defense against price manipulation in a short period because it is independent of the real-time reserve values. While the \nk\n and \n\n\nL\nP\n values are real-time adjustable, they are fractional and have similar growth rates. As such, they are protected against manipulation.\n  3.2. Damage Model Validation\nIn this step, a damage model is evaluated to ensure the correctness of the analysis. This step uses the damage model formulated in \nSection 3.1\n as an input. The model\u2019s correctness is identified by comparing the actual case damage to the calculated damage.\nWe fetched the baseline data from block number 11,473,329 of the Ethereum blockchain, which was the moment before the attack occurred [\n50\n]. We forked the Ethereum main network state at the particular block by using the Hardhat [\n51\n] and Ethers [\n52\n] modules. The retrieved blockchain states are displayed in .\n\n\nTable 1.\n\n    States of Ethereum blockchain number 11,473,329 (just before the attack).\n  \n\n\n\n\n\n\nWith the baseline variables in , the models in \nSection 3.1.1\n and \nSection 3.1.2\n can be executed and compared with the actual case. The damage model constructed in \nSection 3.1\n takes inputs (\n\n\n\n\u2032\n\n\n\n\n,\n\n\n\n\n\n\n\n,\n\n1\n,\nO\nu\nt\nW\nE\nT\nH\n\u2032\n,\nO\nu\nt\nW\nE\nT\nH\n,\nF\n1\n,\n and \nc\n) from the attack flow. Let \n\u03a6\n\u03a6\n denote the output, which is the damage to the DeFi platform. We substitute actual blockchain states into the damage model in Equation (\n20\n). We obtain the result shown in , column \nStandard\n.\n\n\nTable 2.\n\n    Warp Finance damage model evaluation.\n  \n\n\n\n\n\n\nThe result indicates that the damage calculated from the model matches the damage from the blockchain history. Specifically, the predicted \n\u03a6\n\u03a6\n value exactly matches the actual damage from the Warp Finance attack case [\n6\n]. Therefore, the damage model is valid.\n  3.3. Mitigation Strategies Evaluation\nThis stage verifies the mitigation model, which in this case is fair reserves (see \nSection 3.1.2\n). In terms of risk reduction efficiency, the mitigation model is assessed and compared to the damage model (i.e., the Warp Finance model in \nSection 3.1.1\n). This step\u2019s inputs are all variables in , with the predicted damage \n\u03a6\n\u03a6\n in , column \nFair reserves\n as the output.\nThe mitigation model for the Warp Finance attack case is the fair reserves model. We replace it with the damage model in the LP token price calculation section (i.e., the core submodel in Equation (\n7\n)). The same blockchain states from  are substituted into the derived Equation (\n20\n). The fair reserves model validation result is shown in , column \nFair reserves\n. The predicted damage (\n\u03a6\n\u03a6\n) is zero (0) when the fair reserves model is used to calculate the LP token price at the time of attack. Despite token prices being manipulated with flash loans, the platform remains safe. Hence, the fair reserves model is an effective measure against the Warp Finance exploit.\nFurthermore, we study how the amount of input tokens \n\n1\nF\n1\n affects the exploit damage \n\u03a6\n\u03a6\n. Here, we conducted an experiment on the variation of \n\n1\nF\n1\n and the effect on the predicted damage.  depicts the predicted system damage against the flash loan amount ranging from 0 to 500,000.00 WETH. The positive damage indicates the number of tokens that attackers drain from the platform. On the other hand, a negative value implies that the platform does not lose tokens. In fact, a negative value indicates the buffer distance that the damage caused by the attack will not impact the system. This does not mean that attackers lose tokens equal to the negative magnitude.\n\n\n\n\n\n\n\n\nFigure 3.\n\n      Dynamic flash loan size analysis.\n\n\n  \n\n\nConsidering the unlimited supply scenario of the Warp Finance case, the damage depends linearly on the flash loan size. When the platform reserves are limited, the flash loan amount does not always correlate with the damage. There is an optimal point that the attacker needs to consider before executing an attack. In the real-world incident, the attacker stole 1462.82 WETH from the platform by applying 345,736.68 flash loaned WETH, which was close to the optimal point. The flash loan amount in the real case was well calculated by the attacker, as the actual damage is close to the optimal point (see ).\nWhile the size of the flash loan could damage Warp Finance, it does not impact the system with a fair reserves scheme. This is because the fair reserves model does not allow the price of the LP token to be changed within the same block time. As a result, increasing the flash loan size does not work under the fair reserves model.\n  3.4. Internal Parameter Test\nAnalyzing one specific case is insufficient to conclude on the effectiveness of a prevention approach. Several adjustable internal parameters of the platform, such as the collateral ratio, slippage tolerance, and liquidation incentives, could also be used to limit the potential damage caused by attackers. Moreover, some fixed parameters could be replaced with dynamic values to be more flexible in real-world situations. Hence, this step investigates the dynamics of the internal parameters to discover potential risks. Indeed, applying the proper settings can limit the potential damage caused by attackers. In this process, the proposed damage models are used as inputs, and the output demonstrates the correlation between the particular parameters and the platform risk.\nFirst, in the Warp Finance protocol, the collateral ratio (\nC\n) is a value that can be changed internally. It relates to the user token borrowing limit (\nB\n). The limit directly correlates with the number of tokens (\nD\n) stolen from the platform. Hence, adjusting the collateral ratio will also decrease the damage from an exploit, as it limits the liquidity drained by attackers. When the collateral factor is dynamic, the borrowing limit is determined as follows:\nWhen applying the Warp Finance LP token price model to the dynamic collateral ratio model, the borrowing limit will be\n        \n\n\n\n\n\n=\n\n\u00b7\n(\n\n0\n\u00b7\n\n\n\n\n0\n+\n\n1\n\u00b7\n\n\n\n\n1\n)\n\n\u00b7\n\n\n.\nB\n=\nD\n\u00b7\n(\nR\n0\n\u00b7\nt\nw\na\np\n0\n+\nR\n1\n\u00b7\nt\nw\na\np\n1\n)\nC\n\u00b7\nL\nP\n.\n\n\n\n\n\n\n(30)\n\n\n\n\nAdditionally, Equation (\n29\n) can be applied to the fair reserves model. The borrowing limit with a fair reserve and an adjustable collateral ratio is\n        \n\n\n\n\n\n=\n2\n\u00b7\n\n\u00b7\n\n\n\n\n1\n\u00b7\n\n\u00b7\n\n\n\n\n0\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n\n\u00b7\n\n\n.\nB\n=\n2\n\u00b7\nD\n\u00b7\nt\nw\na\np\n1\n\u00b7\nk\n\u00b7\nt\nw\na\np\n0\nC\n\u00b7\nL\nP\n.\n\n\n\n\n\n\n(31)\n\n\n\n\nThe above submodels in Equations (\n30\n) and (\n31\n) are plugged into the proposed damage model in \nSection 3.1\n and the mitigation model in \nSection 3.3\n. We apply the actual blockchain states in these models and let the collateral ratio be an adjustable value.\n depicts the relationship between the collateral ratio and damage from the attack. Adjusting the collateral ratio can change the number of tokens drained from the platform and thus potentially prevent exploit damage. In particular, increasing the collateral ratio will minimize the damage because it reduces the assets drained from the platform. However, the collateral ratio adjustment introduces a significant drawback. It reduces the utility of the platform. Generic users could borrow fewer tokens while depositing the same amount of collateral. While increasing the collateral ratio could gradually reduce the exploit damage, it requires the user to pay more collateral to borrow the same amount of tokens. Hence, the platform will become less attractive. Therefore, increasing the collateral ratio to prevent an attack is not a feasible method.\n\n\n\n\n\n\n\n\nFigure 4.\n\n      Dynamic collateral ratio analysis.\n\n\n  \n\n\n  3.5. External Parameter Test\nApart from the internal parameters, there are many uncontrollable external parameters of the ecosystem, for instance, token prices, trading volumes, and market conditions. These variables should also be considered as potential risks. To minimize platform risks, these values must also be analyzed.\nIn this process, the DeFi security practitioner will simulate blockchain states to analyze the impacts of those states on the platform risks. Considering the Warp Finance platform, the most relevant external parameter is market conditions. The platform is affected when the token price moves rapidly, i.e., a fluctuating market. In particular, if the period used to calculate the time-weighted-average value is too long, it could cause a large price difference from the real-time values. This could cause errors in some financial transactions.\nSince the time-weighted-average values accumulate historical data, they reflect market conditions more slowly than the real-time data. There might be some cases where the difference between the real-time price and the TWAP is large enough to be exploited. Therefore, we propose models to analyze the degree of damage under any market conditions.\nFirst, we need to simulate market conditions under which the real-time price and TWAP are different. Let \n\u0394\n\n\n\u0394\np\nn\n denote the price difference, and let \n\n\n\u0394\np\nn\n\u0394\n define a real-time price under any market conditions. Therefore,\n        \n\n\n\n\n\n\n\u0394\n=\n\n\n\n\n\n\u00b7\n(\n1\n+\n\u0394\n\n\n)\np\nn\n\u0394\n=\nt\nw\na\np\nn\n\u00b7\n(\n1\n+\n\u0394\np\nn\n)\n\n\n\n\n\n\n(32)\n\n\n\n\n.\nToken reserves are the only primitive variables that cause price changes. Therefore, they must be derived to enable price fluctuation analysis under any market conditions. Here, the derived reserve values (\n\n0\n\u0394\n,\n\n1\n\u0394\nr\n0\n\u0394\n,\nr\n1\n\u0394\n) can be obtained from the constant product equation:\n\n\n\n\n\n=\n\n0\n\u00b7\n\n1\n=\n\n\n\n\n0\n\u00b7\n\n\n\n\n1\n=\n\n0\n\u0394\n\u00b7\n\n1\n\u0394\n.\nk\n=\nr\n0\n\u00b7\nr\n1\n=\nt\nw\na\nr\n0\n\u00b7\nt\nw\na\nr\n1\n=\nr\n0\n\u0394\n\u00b7\nr\n1\n\u0394\n.\n\n\n\n\n\n\n(33)\n\n\n\n\nThe derived price can also be calculated in the same way as TWARs and real-time reserves:\n\n\n\n\n\n0\n=\n\n1\n\n0\n\u00b7\n\n1\n,\n\n\n\n\n0\n=\n\n\n\n\n1\n\n\n\n\n0\n\u00b7\n\n\n\n\n1\n,\n\n0\n\u0394\n=\n\n1\n\u0394\n\n0\n\u0394\n\u00b7\n\n1\n\u0394\n,\np\n0\n=\nr\n1\nr\n0\n\u00b7\np\n1\n,\nt\nw\na\np\n0\n=\nt\nw\na\nr\n1\nt\nw\na\nr\n0\n\u00b7\nt\nw\na\np\n1\n,\np\n0\n\u0394\n=\nr\n1\n\u0394\nr\n0\n\u0394\n\u00b7\np\n1\n\u0394\n,\n\n\n\n\n\n\n(34)\n\n\n\n\n\n        finding \n\n1\n\u0394\nr\n1\n\u0394\n:\n\n\n\n\n\n1\n\u0394\n=\n\n0\n\u0394\n\u00b7\n\n0\n\u0394\n\n1\n\u0394\n,\nr\n1\n\u0394\n=\nr\n0\n\u0394\n\u00b7\np\n0\n\u0394\np\n1\n\u0394\n,\n\n\n\n\n\n\n(35)\n\n\n\n\n\n        substituting \n\n0\n\n=\n\n\n1\n\u0394\nr\n0\n\u03b4\n=\nk\nr\n1\n\u0394\n yields:\n\n\n\n\n\n1\n\u0394\n=\n\n\n1\n\n\u00b7\n\n0\n\u0394\n\n1\n\u0394\n=\n\n\u00b7\n\n0\n\u0394\n\n1\n\u0394\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n=\n\n\u00b7\n\n\n\n\n0\n\u00b7\n(\n1\n+\n\u0394\n\n0\n)\n\n\n\n\n1\n\u00b7\n(\n1\n+\n\u0394\n\n1\n)\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\n\u23b7\n\n\n,\nr\n1\n\u0394\n=\nk\nr\n1\n\u03b4\n\u00b7\np\n0\n\u0394\np\n1\n\u0394\n=\nk\n\u00b7\np\n0\n\u0394\np\n1\n\u0394\n=\nk\n\u00b7\nt\nw\na\np\n0\n\u00b7\n(\n1\n+\n\u0394\np\n0\n)\nt\nw\na\np\n1\n\u00b7\n(\n1\n+\n\u0394\np\n1\n)\n,\n\n\n\n\n\n\n(36)\n\n\n\n\n\n        finding \n\n0\n\u0394\nr\n0\n\u0394\n:\nAfter obtaining the derived reserve values, we can apply them to all models that we wish to analyze under various market conditions. The model is validated to ensure the correctness of the outcome. Therefore, we compare the derived reserves with the actual reserves at a target price. The model is valid when the two values are equal. From the actual data, the differences between the real-time price and TWAP are:\n\n\n\n\n\u0394\n\n0\n\u0394\n\n1\n=\n(\n\n0\n\u2212\n\n\n\n\n0\n)\n\n\n\n\n0\n=\n(\n1\n\u2212\n1\n)\n1\n=\n0\n,\n=\n(\n\n1\n\u2212\n\n\n\n\n1\n)\n\n\n\n\n1\n=\n(\n644.46\n\u2212\n585\n)\n585\n=\n0.1016410256\n.\n\u0394\np\n0\n=\n(\np\n0\n\u2212\nt\nw\na\np\n0\n)\nt\nw\na\np\n0\n=\n(\n1\n\u2212\n1\n)\n1\n=\n0\n,\n\u0394\np\n1\n=\n(\np\n1\n\u2212\nt\nw\na\np\n1\n)\nt\nw\na\np\n1\n=\n(\n644.46\n\u2212\n585\n)\n585\n=\n0.1016410256\n.\n\n\n\n\n\n\n\n\nThen, we apply the price differences to the model to find the reserve value:\n\n\n\n\n\n1\n\u0394\n=\n\n\u00b7\n\n\n\n\n0\n\u00b7\n(\n1\n+\n\u0394\n\n0\n)\n\n\n\n\n1\n\u00b7\n(\n1\n+\n\u0394\n\n1\n)\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\n\u23b7\n\n\n=\n5\n,\n244\n,\n716\n,\n026\n,\n749.124\n\u00b7\n1\n\u00b7\n(\n1\n+\n0\n)\n585\n\u00b7\n(\n1\n+\n0.1016410256\n)\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u2212\n\u221a\n=\n90211.72882\n.\nr\n1\n\u0394\n=\nk\n\u00b7\nt\nw\na\np\n0\n\u00b7\n(\n1\n+\n\u0394\np\n0\n)\nt\nw\na\np\n1\n\u00b7\n(\n1\n+\n\u0394\np\n1\n)\n=\n5\n,\n244\n,\n716\n,\n026\n,\n749.124\n\u00b7\n1\n\u00b7\n(\n1\n+\n0\n)\n585\n\u00b7\n(\n1\n+\n0.1016410256\n)\n=\n90211.72882\n.\n\n\n\n\n\n\n\n\nAccording to the actual case in : \n\n1\nr\n1\n, there were 90,409.01 WETH in the DAI-WETH Uniswap pool. This is slightly different from 90,211.72882, which was the simulated value \n\n1\n\u0394\nr\n1\n\u0394\n. Here, the degree of difference is 0.2186%. This was because the TWAP was fetched from the USDC-WETH pool, but the simulated reserve amount was related to the DAI-WETH pool. As mentioned in \nSection 3.2\n, the simulated value must be the same as the actual value. However, there was no TWAP for the DAI-WETH pool. Thus, we used the USDC-WETH pool to simulate DAI-WETH reserves. Considering the degree of difference, the simulation result is acceptable.\nHowever, price fluctuations influence the exploit damage. When token prices change rapidly, the margin between the real-time value and time-weighted-average value increases. A large price gap might cause vulnerabilities in platforms that rely on TWAP.\n demonstrates that the exploit damage varies under different market conditions. The Warp Finance exploit case relies on the WETH price from two different sources, i.e., the real-time price and the TWAP. In our analysis, we simulated market conditions based on the difference between price sources, namely, \n\u0394\n\n0\n\u0394\np\n0\n and \n\u0394\n\n1\n\u0394\np\n1\n. Negative delta values represent the bear market condition, where the WETH prices drop dramatically in a short period of time. The real-time price is lower than the TWAP in a bear market. In contrast, the bull market condition occurs when the token price drastically rises. The real-time price is higher than the TWAP.\n\n\n\n\n\n\n\n\nFigure 5.\n\n      Dynamic market condition.\n\n\n  \n\n\nMarket fluctuations potentially damage in both the Warp Finance model and the fair reserves model. According to our simulations, the exploit damage is expanded when the WETH price dramatically falls, i.e., the negative \nx\n-axis in . A bear market supports attackers in leveraging TWAP WETH to borrow stable coins from the platform and use them to buy back WETH at a discount rate, i.e., the real-time price. Thus, they obtain extra WETH after the flash loan repayment. When the market crashes, attackers can drain assets from the platform without price manipulation. As a result, the fair reserves model, which can protect against short term price manipulation, cannot prevent damage in this case.\nAs shown in , the attack damage mostly occurs in unlimited supply cases. There are many external conditions that attenuate exploit damage in limited supply cases, such as limited borrowing amounts, slippages, and price impacts. However, it is difficult to find such a vulnerability, which requires the WETH price to decrease by at least 60% before the TWAP updates (i.e., 1 h in the Warp Finance case). In fact, the causes of the market crash, for example, rug pull [\n26\n], failure of the project, and hacking, are significant. Moreover, attackers will face challenges, such as, a high transaction fee or a quick recovery of the market price difference. Specifically, if they attempt to attack the platform, the blockchain traffic will be congested. Hence, the fee becomes more expensive. Moreover, when there is a price difference between markets, arbitrageurs will quickly recover the price difference between the two platforms. Hence, it is difficult for attackers to exploit in extreme market conditions. However, our best practice suggestion is to prepare for such cases."
    }
}