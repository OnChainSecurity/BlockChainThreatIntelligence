{
    "threat_intelligence": {
        "url": "https://dl.acm.org/doi/10.1145/3593293",
        "timestamp": "2018-04-15 00:00:00",
        "original_content": "[21]\nTesnim Abdellatif and Kei-L\u00e9o Brousmiche. 2018. Formal verification of smart contracts based on users and blockchain behaviors models. In \n9th IFIP International Conference on New Technologies, Mobility and Security (NTMS\u201918)\n. IEEE, 1\u20135.\n[22]\nWolfgang Ahrendt, Richard Bubel, Joshua Ellul, Gordon J. Pace, Ra\u00fal Pardo, Vincent Rebiscoul, and Gerardo Schneider. 2019. Verification of smart contract business logic. In \nInternational Conference on Fundamentals of Software Engineering\n. Springer, 228\u2013243.\n[23]\nSefa Akca, Ajitha Rajan, and Chao Peng. 2019. SolAnalyser: A framework for analysing and testing smart contracts. In \n26th Asia-Pacific Software Engineering Conference (APSEC\u201919)\n. IEEE, 482\u2013489.\n[24]\nElvira Albert, Jes\u00fas Correas, Pablo Gordillo, Guillermo Rom\u00e1n-D\u00edez, and Albert Rubio. 2019. SAFEVM: A safety verifier for Ethereum smart contracts. In \n28th ACM SIGSOFT International Symposium on Software Testing and Analysis\n. 386\u2013389.\n[25]\nElvira Albert, Pablo Gordillo, Albert Rubio, and Ilya Sergey. 2019. Running on fumes. In \nInternational Conference on Verification and Evaluation of Computer and Communication Systems\n. Springer, 63\u201378.\n[26]\nSarra Alqahtani, Xinchi He, Rose Gamble, and Papa Mauricio. 2020. Formal verification of functional requirements for smart contract compositions in supply chain management systems. In \n53rd Hawaii International Conference on System Sciences\n.\n[27]\nSidney Amani, Myriam B\u00e9gel, Maksym Bortin, and Mark Staples. 2018. Towards verifying Ethereum smart contract bytecode in Isabelle/HOL. In \n7th ACM SIGPLAN International Conference on Certified Programs and Proofs\n. 66\u201377.\n[28]\nElli Androulaki, Artem Barger, Vita Bortnikov, Christian Cachin, Konstantinos Christidis, Angelo De Caro, David Enyeart, Christopher Ferris, Gennady Laventman, Yacov Manevich, et\u00a0al. 2018. Hyperledger fabric: A distributed operating system for permissioned blockchains. In \n13th EuroSys Conference\n. 1\u201315.\n[29]\nPedro Antonino and A. W. Roscoe. 2021. Solidifier: Bounded model checking Solidity using lazy contract deployment and precise memory modelling. In \n36th Annual ACM Symposium on Applied Computing\n. 1788\u20131797.\n[30]\nAndreas M. Antonopoulos and Gavin Wood. 2018. \nMastering Ethereum: Building Smart Contracts and Dapps\n. O\u2019Reilly Media.\n[31]\nMauro Arga\u00f1araz, Mario Ber\u00f3n, Maria Jo\u00e3o Pereira, and Pedro Henriques. 2020. Detection of vulnerabilities in smart contracts specifications in Ethereum platforms. In \n9th Symposium on Languages, Applications and Technologies (SLATE\u201920)\n, Vol. 83. Schloss Dagstuhl\u2013Leibniz-Zentrum fuer Informatik, 1\u201316.\n[32]\nNicola Atzei, Massimo Bartoletti, and Tiziana Cimoli. 2017. A survey of attacks on Ethereum smart contracts (sok). In \nInternational Conference on Principles of Security and Trust\n. Springer, 164\u2013186.\n[33]\nNicola Atzei, Massimo Bartoletti, Stefano Lande, Nobuko Yoshida, and Roberto Zunino. 2019. Developing secure Bitcoin contracts with BitML. In \n27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering\n. 1124\u20131128.\n[34]\nXiaomin Bai, Zijing Cheng, Zhangbo Duan, and Kai Hu. 2018. Formal modeling and verification of smart contracts. In \n7th International Conference on Software and Computer Applications\n. 322\u2013326.\n[35]\nClark W. Barrett, Christopher L. Conway, Morgan Deters, Liana Hadarean, Dejan Jovanovic, Tim King, Andrew Reynolds, and Cesare Tinelli. 2011. CVC4. In \n23rd International Conference on Computer Aided Verification\n. Springer, 171\u2013177. \nDOI:\n[36]\nMassimo Bartoletti and Roberto Zunino. 2019. Verifying liquidity of Bitcoin contracts. In \n8th International Conference on Principles of Security and Trust, POST 2019 Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2019\n, Vol. 11426. Springer, 222\u2013247.\n[37]\nBernhard Beckert, Mihai Herda, Michael Kirsten, and Jonas Schiffl. 2018. Formal specification and verification of hyperledger fabric chaincode. In \nInternational Conference on Formal Engineering Methods\n. 44\u201348.\n[38]\nElisa Bertino, Murat Kantarcioglu, Cuneyt Gurcan Akcora, Sagar Samtani, Sudip Mittal, and Maanak Gupta. 2021. AI for security and security for AI. In \n11th ACM Conference on Data and Application Security and Privacy\n. 333\u2013334.\n[39]\nKarthikeyan Bhargavan, Antoine Delignat-Lavaud, C\u00e9dric Fournet, Anitha Gollamudi, Georges Gonthier, Nadim Kobeissi, Natalia Kulatova, Aseem Rastogi, Thomas Sibut-Pinote, Nikhil Swamy, et\u00a0al. 2016. Formal verification of smart contracts: Short paper. In \nACM Workshop on Programming Languages and Analysis for Security\n. 91\u201396.\n[40]\nGiancarlo Bigi, Andrea Bracciali, Giovanni Meacci, and Emilio Tuosto. 2015. Validation of decentralised smart contracts through game theory and formal methods. In \nProgramming Languages with Applications to Biology and Security\n. Springer, 142\u2013161.\n[41]\nAlex Biryukov, Dmitry Khovratovich, and Sergei Tikhomirov. 2017. Findel: Secure derivative contracts for Ethereum. In \nInternational Conference on Financial Cryptography and Data Security\n. Springer, 453\u2013467.\n[42]\nPriyanka Bose, Dipanjan Das, Yanju Chen, Yu Feng, Christopher Kruegel, and Giovanni Vigna. 2021. SAILFISH: Vetting smart contract state-inconsistency bugs in seconds. \narXiv preprint arXiv:2104.08638\n (2021).\n[43]\nSantiago Bragagnolo, Henrique Rocha, Marcus Denker, and St\u00e9phane Ducasse. 2018. SmartInspect: Solidity smart contract inspector. In \nInternational Workshop on Blockchain Oriented Software Engineering (IWBOSE\u201918)\n. IEEE, 9\u201318.\n[44]\nLorenz Breidenbach, Phil Daian, Ari Juels, and Emin G\u00fcn Sirer. 2017. An in-depth look at the parity multisig bug. \nHack., Distrib. July\n (2017).\n[45]\nLorenz Breidenbach, Phil Daian, Florian Tram\u00e8r, and Ari Juels. 2018. Enter the hydra: Towards principled bug bounties and exploit-resistant smart contracts. In \n27th USENIX Security Symposium (USENIX Security\u201918)\n. 1335\u20131352.\n[46]\nLexi Brent, Neville Grech, Sifis Lagouvardos, Bernhard Scholz, and Yannis Smaragdakis. 2020. Ethainter: A smart contract security analyzer for composite vulnerabilities. In \n41st ACM SIGPLAN Conference on Programming Language Design and Implementation\n. 454\u2013469.\n[47]\nLexi Brent, Anton Jurisevic, Michael Kong, Eric Liu, Francois Gauthier, Vincent Gramoli, Ralph Holz, and Bernhard Scholz. 2018. Vandal: A scalable security analysis framework for smart contracts. \narXiv preprint arXiv:1809.03981\n (2018).\n[49]\nRamiro Camino, Christof Ferreira Torres, Mathis Baden, and Radu State. 2020. A data science approach for detecting honeypots in Ethereum. In \nIEEE International Conference on Blockchain and Cryptocurrency (ICBC\u201920)\n. IEEE, 1\u20139.\n[50]\nEthan Cecchetti, Siqiu Yao, Haobin Ni, and Andrew C. Myers. 2021. Compositional security for reentrant applications. In \n2021 IEEE Symposium on Security and Privacy (SP\u201921)\n. IEEE, 1249\u20131267.\n[51]\nEthan Cecchetti, Siqiu Yao, Haobin Ni, and Andrew C. Myers. 2020. Securing smart contracts with information flow. In \nInternational Symposium on Foundations and Applications of Blockchain\n.\n[52]\nJialiang Chang, Bo Gao, Hao Xiao, Jun Sun, Yan Cai, and Zijiang Yang. 2019. sCompile: Critical path identification and analysis for smart contracts. In \nInternational Conference on Formal Engineering Methods\n. Springer, 286\u2013304.\n[53]\nHuashan Chen, Marcus Pendleton, Laurent Njilla, and Shouhuai Xu. 2020. A survey on Ethereum systems security: Vulnerabilities, attacks, and defenses. \nACM Comput. Surv.\n 53, 3 (2020), 1\u201343.\n[54]\nJiachi Chen, Xin Xia, David Lo, John Grundy, Xiapu Luo, and Ting Chen. 2020. Defining smart contract defects on Ethereum. \nIEEE Trans. Softw. Eng.\n 48, 1 (2020), 327\u2013345.\n[55]\nJiachi Chen, Xin Xia, David Lo, John Grundy, Xiapu Luo, and Ting Chen. 2021. DEFECTCHECKER: Automated smart contract defect detection by analyzing EVM bytecode. \nIEEE Trans. Softw. Eng.\n 48, 7 (2021), 2189\u20132207.\n[56]\nTing Chen, Rong Cao, Ting Li, Xiapu Luo, Guofei Gu, Yufei Zhang, Zhou Liao, Hang Zhu, Gang Chen, Zheyuan He et\u00a0al. 2020. SODA: A generic online detection framework for smart contracts. In \n27th Annual Network and Distributed Systems Security Symposium\n. The Internet Society.\n[57]\nTing Chen, Xiaoqi Li, Xiapu Luo, and Xiaosong Zhang. 2017. Under-optimized smart contracts devour your money. In \nIEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER\u201917)\n. IEEE, 442\u2013446.\n[58]\nTing Chen, Yufei Zhang, Zihao Li, Xiapu Luo, Ting Wang, Rong Cao, Xiuzhuo Xiao, and Xiaosong Zhang. 2019. TokenScope: Automatically detecting inconsistent behaviors of cryptocurrency tokens in Ethereum. In \nACM SIGSAC Conference on Computer and Communications Security\n. 1503\u20131520.\n[59]\nWeili Chen, Zibin Zheng, Jiahui Cui, Edith Ngai, Peilin Zheng, and Yuren Zhou. 2018. Detecting ponzi schemes on Ethereum: Towards healthier blockchain technology. In \nWorld Wide Web Conference\n. 1409\u20131418.\n[60]\nYuchiro Chinen, Naoto Yanai, Jason Paul Cruz, and Shingo Okamura. 2020. RA: Hunting for re-entrancy attacks in Ethereum smart contracts via static analysis. In \nIEEE International Conference on Blockchain (Blockchain\u201920)\n. IEEE, 327\u2013336.\n[61]\nPhilip Daian, Steven Goldfeder, Tyler Kell, Yunqi Li, Xueyuan Zhao, Iddo Bentov, Lorenz Breidenbach, and Ari Juels. 2020. Flash Boys 2.0: Frontrunning in decentralized exchanges, miner extractable value, and consensus instability. In \nIEEE Symposium on Security and Privacy (SP\u201920)\n. IEEE, 910\u2013927.\n[62]\nMonika Di Angelo and Gernot Salzer. 2019. A survey of tools for analyzing Ethereum smart contracts. In \nIEEE International Conference on Decentralized Applications and Infrastructures (DAPPCON\u201919)\n. IEEE, 69\u201378.\n[63]\nMengjie Ding, Peiru Li, Shanshan Li, and He Zhang. 2021. HFContractFuzzer: Fuzzing hyperledger fabric smart contracts for vulnerability detection. In \nEvaluation and Assessment in Software Engineering\n. Association for Computing Machinery, 321\u2013328.\n[64]\nWang Duo, Huang Xin, and Ma Xiaofeng. 2020. Formal analysis of smart contract based on colored petri nets. \nIEEE Intell. Syst.\n 35, 3 (2020), 19\u201330.\n[65]\nJoshua Ellul and Gordon J. Pace. 2018. Runtime verification of Ethereum smart contracts. In \n14th European Dependable Computing Conference (EDCC\u201918)\n. IEEE, 158\u2013163.\n[66]\nJosselin Feist, Gustavo Grieco, and Alex Groce. 2019. Slither: A static analysis framework for smart contracts. In \nIEEE/ACM 2nd International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB\u201919)\n. IEEE, 8\u201315.\n[67]\nYu Feng, Emina Torlak, and Rastislav Bodik. 2019. Precise attack synthesis for smart contracts. \narXiv preprint arXiv:1902.06067\n (2019).\n[68]\nYu Feng, Emina Torlak, and Rastislav Bodik. 2020. Summary-based symbolic evaluation for smart contracts. In \n35th IEEE/ACM International Conference on Automated Software Engineering (ASE\u201920)\n. IEEE, 1141\u20131152.\n[69]\nChristof Ferreira Torres, Mathis Baden, Robert Norvill, Beltran Borja Fiz Pontiveros, Hugo Jonker, and Sjouke Mauw. 2020. \u00c6gis: Shielding vulnerable smart contracts against attacks. In \n15th ACM Asia Conference on Computer and Communications Security\n. 584\u2013597.\n[70]\nChristof Ferreira Torres, Antonio Ken Iannillo, Arthur Gervais, and Radu State. 2021. CONFUZZIUS: A data dependency-aware hybrid fuzzer for smart contracts. In \n2021 IEEE European Symposium on Security and Privacy (EuroS&P\u201921)\n. 103\u2013119. \nDOI:\n[71]\nChristof Ferreira Torres, Antonio Ken Iannillo, Arthur Gervais et\u00a0al. 2021. The Eye of Horus: Spotting and analyzing attacks on Ethereum smart contracts. In \nInternational Conference on Financial Cryptography and Data Security\n.\n[72]\nJoel Frank, Cornelius Aschermann, and Thorsten Holz. 2020. ETHBMC: A bounded model checker for smart contracts. In \n29th USENIX Security Symposium (USENIX Security\u201920)\n. 2757\u20132774.\n[74]\nYing Fu, Meng Ren, Fuchen Ma, Yu Jiang, Heyuan Shi, and Jiaguang Sun. 2019. EVMFuzz: Differential fuzz testing of Ethereum virtual machine. \narXiv preprint arXiv:1903.08483\n (2019).\n[75]\nYing Fu, Meng Ren, Fuchen Ma, Heyuan Shi, Xin Yang, Yu Jiang, Huizhong Li, and Xiang Shi. 2019. EVMFuzzer: Detect EVM vulnerabilities via fuzz testing. In \n27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering\n. 1110\u20131114.\n[76]\nJianbo Gao, Han Liu, Chao Liu, Qingshan Li, Zhi Guan, and Zhong Chen. 2019. Easyflow: Keep Ethereum away from overflow. In \nIEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion\u201919)\n. IEEE, 23\u201326.\n[78]\nNeville Grech, Michael Kong, Anton Jurisevic, Lexi Brent, Bernhard Scholz, and Yannis Smaragdakis. 2018. MadMax: Surviving out-of-gas conditions in Ethereum smart contracts. \nProc. ACM Program. Lang.\n 2, OOPSLA (2018), 1\u201327.\n[79]\nGustavo Grieco, Will Song, Artur Cygan, Josselin Feist, and Alex Groce. 2020. Echidna: Effective, usable, and fast fuzzing for smart contracts. In \n29th ACM SIGSOFT International Symposium on Software Testing and Analysis\n. 557\u2013560.\n[80]\nIlya Grishchenko, Matteo Maffei, and Clara Schneidewind. 2018. \nEtherTrust: Sound Static Analysis of Ethereum Bytecode\n. \nTechnical Report. Technische Universit\u00e4t Wien.\n[81]\nIlya Grishchenko, Matteo Maffei, and Clara Schneidewind. 2018. A semantic framework for the security analysis of Ethereum smart contracts. In \nInternational Conference on Principles of Security and Trust\n. Springer, 243\u2013269.\n[82]\nShelly Grossman, Ittai Abraham, Guy Golan-Gueta, Yan Michalevsky, Noam Rinetzky, Mooly Sagiv, and Yoni Zohar. 2017. Online detection of effectively callback free objects with applications to smart contracts. \nProc. ACM Program. Lang.\n 2, POPL (2017), 1\u201328.\n[83]\n\u00c1kos Hajdu and Dejan Jovanovi\u0107. 2019. solc-verify: A modular verifier for Solidity smart contracts. \narXiv preprint arXiv:1907.04262\n (2019).\n[84]\n\u00c1kos Hajdu, Dejan Jovanovi\u0107, and Gabriela Ciocarlie. 2020. Formal specification and verification of solidity contracts with events (short paper). In \n2nd Workshop on Formal Methods for Blockchains (FMBC\u201920)\n. Schloss Dagstuhl-Leibniz-Zentrum f\u00fcr Informatik.\n[85]\nDominik Harz and William Knottenbelt. 2018. Towards safer smart contracts: A survey of languages and verification methods. \narXiv preprint arXiv:1809.09805\n (2018).\n[86]\nJingxuan He, Mislav Balunovi\u0107, Nodar Ambroladze, Petar Tsankov, and Martin Vechev. 2019. Learning to fuzz from symbolic execution with application to smart contracts. In \nACM SIGSAC Conference on Computer and Communications Security\n. 531\u2013548.\n[87]\nNingyu He, Ruiyi Zhang, Haoyu Wang, Lei Wu, Xiapu Luo, Yao Guo, Ting Yu, and Xuxian Jiang. 2021. EOSAFE: Security analysis of EOSIO smart contracts. In \n30th USENIX Security Symposium (USENIX Security\u201921)\n. 1271\u20131288.\n[88]\nEverett Hildenbrandt, Manasvi Saxena, Nishant Rodrigues, Xiaoran Zhu, Philip Daian, Dwight Guth, Brandon Moore, Daejun Park, Yi Zhang, Andrei Stefanescu et\u00a0al. 2018. KEVM: A complete formal semantics of the Ethereum virtual machine. In \nIEEE 31st Computer Security Foundations Symposium (CSF\u201918)\n. IEEE, 204\u2013217.\n[89]\nBin Hu, Zongyang Zhang, Jianwei Liu, Yizhong Liu, Jiayuan Yin, Rongxing Lu, and Xiaodong Lin. 2021. A comprehensive survey on smart contract construction and execution: Paradigms, tools, and systems. \nPatterns\n 2, 2 (2021), 100179.\n[90]\nTeng Hu, Xiaolei Liu, Ting Chen, Xiaosong Zhang, Xiaoming Huang, Weina Niu, Jiazhong Lu, Kun Zhou, and Yuan Liu. 2021. Transaction-based classification and detection approach for Ethereum smart contract. \nInf. Process. Manag.\n 58, 2 (2021), 102462.\n[91]\nXinwen Hu, Yi Zhuang, Shang-Wei Lin, Fuyuan Zhang, Shuanglong Kan, and Zining Cao. 2021. A security type verifier for smart contracts. \nComput. Secur.\n 108 (2021), 102343.\n[92]\nJianjun Huang, Songming Han, Wei You, Wenchang Shi, Bin Liang, Jingzheng Wu, and Yanjun Wu. 2021. Hunting vulnerable smart contracts via graph embedding based bytecode matching. \nIEEE Trans. Inf. Forens. Secur.\n 16 (2021), 2144\u20132156.\n[93]\nNikolay Ivanov, Hanqing Guo, and Qiben Yan. 2021. Rectifying administrated ERC20 tokens. In \nInternational Conference on Information and Communications Security\n. Springer, 22\u201337.\n[94]\nNikolay Ivanov, Jianzhi Lou, Ting Chen, Jin Li, and Qiben Yan. 2021. Targeting the weakest link: Social engineering attacks in Ethereum smart contracts. In \nACM Asia Conference on Computer and Communications Security\n. 787\u2013801.\n[95]\nNikolay Ivanov and Qiben Yan. 2021. EthClipper: A clipboard meddling attack on hardware wallets with address verification evasion. In \nIEEE Conference on Communications and Network Security (CNS\u201921)\n. IEEE, 191\u2013199.\n[96]\nNikolay Ivanov, Qiben Yan, and Anurag Kompalli. 2023. TxT: Real-time transaction encapsulation for Ethereum smart contracts. \nIEEE Trans. Inf. Forens. Secur.\n 18 (2023), 1141\u20131155. \nDOI:\n[97]\nBo Jiang, Ye Liu, and W. K. Chan. 2018. ContractFuzzer: Fuzzing smart contracts for vulnerability detection. In \n33rd IEEE/ACM International Conference on Automated Software Engineering (ASE\u201918)\n. IEEE, 259\u2013269.\n[98]\nJiao Jiao, Shuanglong Kan, Shang-Wei Lin, David Sanan, Yang Liu, and Jun Sun. 2020. Semantic understanding of smart contracts: Executable operational semantics of Solidity. In \nIEEE Symposium on Security and Privacy (SP\u201920)\n. IEEE, 1695\u20131712.\n[99]\nLing Jin, Yinzhi Cao, Yan Chen, Di Zhang, and Simone Campanoni. 2022. EXGEN: Cross-platform, automated exploit generation for smart contract vulnerabilities. \nIEEE Trans. Depend. Secure Comput.\n 20, 1 (2022), 650\u2013664. \nDOI:\n[100]\nSukrit Kalra, Seep Goel, Mohan Dhawan, and Subodh Sharma. 2018. ZEUS: Analyzing safety of smart contracts. In \nNetwork and Distributed Security Symposium\n. 1\u201312.\n[101]\nJames C. King. 1976. Symbolic execution and program testing. \nCommun. ACM\n 19, 7 (1976), 385\u2013394.\n[102]\nAashish Kolluri, Ivica Nikolic, Ilya Sergey, Aquinas Hobor, and Prateek Saxena. 2019. Exploiting the laws of order in smart contracts. In \n28th ACM SIGSOFT International Symposium on Software Testing and Analysis\n. 363\u2013373.\n[103]\nJaturong Kongmanee, Phongphun Kijsanayothin, and Rattikorn Hewett. 2019. Securing smart contracts in blockchain. In \n34th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW\u201919)\n. IEEE, 69\u201376.\n[104]\nJohannes Krupp and Christian Rossow. 2018. teEther: Gnawing at Ethereum to automatically exploit smart contracts. In \n27th USENIX Security Symposium (USENIX Security\u201918)\n. 1317\u20131333.\n[105]\nTon Chanh Le, Lei Xu, Lin Chen, and Weidong Shi. 2018. Proving conditional termination for smart contracts. In \n2nd ACM Workshop on Blockchains, Cryptocurrencies, and Contracts\n. 57\u201359.\n[106]\nAo Li, Jemin Andrew Choi, and Fan Long. 2020. Securing smart contract with runtime validation. In \n41st ACM SIGPLAN Conference on Programming Language Design and Implementation\n. 438\u2013453.\n[107]\nXiaoqi Li, Peng Jiang, Ting Chen, Xiapu Luo, and Qiaoyan Wen. 2020. A survey on the security of blockchain systems. \nFut. Gen. Comput. Syst.\n 107 (2020), 841\u2013853.\n[108]\nXiaoyu Li, Cheng Su, Yan Xiong, Wenchao Huang, and Wansen Wang. 2019. Formal verification of BNB smart contract. In \n5th International Conference on Big Data Computing and Communications (BIGCOM\u201919)\n. IEEE, 74\u201378.\n[109]\nYue Li. 2019. Finding concurrency exploits on smart contracts. In \nIEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion\u201919)\n. IEEE, 144\u2013146.\n[110]\nYue Li, Han Liu, Zhiqiang Yang, Qian Ren, Lei Wang, and Bangdao Chen. 2020. SafePay on Ethereum: A framework for detecting unfair payments in smart contracts. In \nIEEE 40th International Conference on Distributed Computing Systems (ICDCS\u201920)\n. IEEE, 1219\u20131222.\n[111]\nJian-Wei Liao, Tsung-Ta Tsai, Chia-Kang He, and Chin-Wei Tien. 2019. SoliAudit: Smart contract vulnerability assessment based on machine learning and fuzz testing. In \n6th International Conference on Internet of Things: Systems, Management and Security (IOTSMS\u201919)\n. IEEE, 458\u2013465.\n[112]\nShlomi Linoy, Suprio Ray, and Natalia Stakhanova. 2021. EtherProv: Provenance-aware detection, analysis, and mitigation of Ethereum smart contract security issues. In \n2021 IEEE International Conference on Blockchain (Blockchain)\n. 1\u201310. \nDOI:\n[113]\nChao Liu, Han Liu, Zhao Cao, Zhong Chen, Bangdao Chen, and Bill Roscoe. 2018. ReGuard: Finding reentrancy bugs in smart contracts. In \nIEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion\u201918)\n. IEEE, 65\u201368.\n[114]\nHan Liu, Chao Liu, Wenqi Zhao, Yu Jiang, and Jiaguang Sun. 2018. S-gram: Towards semantic-aware security auditing for Ethereum smart contracts. In \n33rd IEEE/ACM International Conference on Automated Software Engineering (ASE\u201918)\n. IEEE, 814\u2013819.\n[115]\nYe Liu, Yi Li, Shang-Wei Lin, and Qiang Yan. 2020. ModCon: A model-based testing platform for smart contracts. In \n28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering\n. 1601\u20131605.\n[116]\nZhenguang Liu, Peng Qian, Xiang Wang, Lei Zhu, Qinming He, and Shouling Ji. 2021. Smart contract vulnerability detection: From pure neural network to interpretable graph feature and expert pattern fusion. \narXiv preprint arXiv:2106.09282\n (2021).\n[117]\nNing Lu, Bin Wang, Yongxin Zhang, Wenbo Shi, and Christian Esposito. 2019. NeuCheck: A more practical Ethereum smart contract security analysis tool. \nSoftw.: Pract. Exper.\n (2019).\n[118]\nOliver Lutz, Huili Chen, Hossein Fereidooni, Christoph Sendner, Alexandra Dmitrienko, Ahmad Reza Sadeghi, and Farinaz Koushanfar. 2021. ESCORT: Ethereum smart COntRacTs vulnerability detection using deep neural network and transfer learning. \narXiv preprint arXiv:2103.12607\n (2021).\n[119]\nLoi Luu, Duc-Hiep Chu, Hrishi Olickel, Prateek Saxena, and Aquinas Hobor. 2016. Making smart contracts smarter. In \nACM SIGSAC Conference on Computer and Communications Security\n. 254\u2013269.\n[120]\nFuchen Ma, Ying Fu, Meng Ren, Wanting Sun, Zhe Liu, Yu Jiang, Jun Sun, and Jiaguang Sun. 2019. GasFuzz: Generating high gas consumption inputs to avoid out-of-gas vulnerability. \narXiv preprint arXiv:1910.02945\n (2019).\n[121]\nFuchen Ma, Ying Fu, Meng Ren, Mingzhe Wang, Yu Jiang, Kaixiang Zhang, Huizhong Li, and Xiang Shi. 2019. EVM*: From offline detection to online reinforcement for Ethereum virtual machine. In \nIEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER\u201919)\n. IEEE, 554\u2013558.\n[122]\nMatteo Marescotti, Rodrigo Otoni, Leonardo Alt, Patrick Eugster, Antti E. J. Hyv\u00e4rinen, and Natasha Sharygina. 2020. Accurate smart contract verification through direct modelling. In \nInternational Symposium on Leveraging Applications of Formal Methods\n. Springer, 178\u2013194.\n[123]\nAnastasia Mavridou and Aron Laszka. 2018. Designing secure Ethereum smart contracts: A finite state machine based approach. In \nInternational Conference on Financial Cryptography and Data Security\n. Springer, 523\u2013540.\n[124]\nAnastasia Mavridou, Aron Laszka, Emmanouela Stachtiari, and Abhishek Dubey. 2019. VeriSolid: Correct-by-design smart contracts for Ethereum. In \nInternational Conference on Financial Cryptography and Data Security\n. Springer, 446\u2013465.\n[125]\nSimon Meier, Benedikt Schmidt, Cas Cremers, and David Basin. 2013. The TAMARIN prover for the symbolic analysis of security protocols. In \nInternational Conference on Computer Aided Verification\n. Springer, 696\u2013701.\n[126]\nPouyan Momeni, Yu Wang, and Reza Samavi. 2019. Machine learning model for smart contracts security analysis. In \n17th International Conference on Privacy, Security and Trust (PST\u201919)\n. IEEE, 1\u20136.\n[127]\nMark Mossberg, Felipe Manzano, Eric Hennenfent, Alex Groce, Gustavo Grieco, Josselin Feist, Trent Brunson, and Artem Dinaburg. 2019. Manticore: A user-friendly symbolic execution framework for binaries and smart contracts. In \n34th IEEE/ACM International Conference on Automated Software Engineering (ASE\u201919)\n. IEEE, 1186\u20131189.\n[128]\nBernhard Mueller. 2018. Smashing Ethereum smart contracts for fun and real profit. In \n9th Annual HITB Security Conference (HITBSecConf\u201918)\n, Vol. 54.\n[129]\nZeinab Nehai, Pierre-Yves Piriou, and Fr\u00e9d\u00e9ric Daumas. 2018. Model-checking of smart contracts. In \nIEEE International Conference on Blockchain\n.\n[130]\nTai D. Nguyen, Long H. Pham, and Jun Sun. 2021. sGUARD: Towards fixing vulnerable smart contracts automatically. In \n2021 IEEE Symposium on Security and Privacy (SP\u201921)\n. 1215\u20131229. \nDOI:\n[131]\nTai D. Nguyen, Long H. Pham, Jun Sun, Yun Lin, and Quang Tran Minh. 2020. sFuzz: An efficient adaptive fuzzer for solidity smart contracts. In \nACM/IEEE 42nd International Conference on Software Engineering\n. 778\u2013788.\n[132]\nYuandong Ni, Chao Zhang, and Tingting Yin. 2020. A survey of smart contract vulnerability research. \nJ. Cyber Secur.\n 5, 3 (2020), 78\u201399.\n[133]\nIvica Nikoli\u0107, Aashish Kolluri, Ilya Sergey, Prateek Saxena, and Aquinas Hobor. 2018. Finding the greedy, prodigal, and suicidal contracts at scale. In \n34th Annual Computer Security Applications Conference\n. 653\u2013663.\n[134]\nRobert Norvill, Beltran Borja Fiz Pontiveros, Radu State, and Andrea Cullen. 2018. Visual emulation for Ethereum\u2019s virtual machine. In \nIEEE/IFIP Network Operations and Management Symposium\n. IEEE, 1\u20134.\n[135]\nDaniel Perez and Benjamin Livshits. 2019. Smart contract vulnerabilities: Does anyone care? \narXiv preprint arXiv:1902.06710\n (2019), 1\u201315.\n[136]\nDaniel Perez and Ben Livshits. 2021. Smart contract vulnerabilities: Vulnerable does not imply exploited. In \n30th USENIX Security Symposium (USENIX Security\u201921)\n.\n[137]\nAnton Permenev, Dimitar Dimitrov, Petar Tsankov, Dana Drachsler-Cohen, and Martin Vechev. 2020. VerX: Safety verification of smart contracts. In \nIEEE Symposium on Security and Privacy (SP\u201920)\n. IEEE, 1661\u20131677.\n[138]\nPurathani Praitheeshan, Lei Pan, Jiangshan Yu, Joseph Liu, and Robin Doss. 2019. Security analysis methods on Ethereum smart contract vulnerabilities: A survey. \narXiv preprint arXiv:1908.08605\n (2019).\n[139]\nKaihua Qin, Liyi Zhou, and Arthur Gervais. 2022. Quantifying blockchain extractable value: How dark is the forest? In \nIEEE Symposium on Security and Privacy (SP\u201922)\n. IEEE, 198\u2013214.\n[140]\nLijin Quan, Lei Wu, and Haoyu Wang. 2019. EVulHunter: Detecting fake transfer vulnerabilities for EOSIO\u2019s smart contracts at Webassembly-level. \narXiv preprint arXiv:1906.10362\n (2019).\n[141]\nMichael Rodler, Wenting Li, Ghassan O. Karame, and Lucas Davi. 2018. Sereum: Protecting existing smart contracts against re-entrancy attacks. \narXiv preprint arXiv:1812.05934\n (2018).\n[142]\nMichael Rodler, Wenting Li, Ghassan O. Karame, and Lucas Davi. 2021. EVMPatch: Timely and automated patching of Ethereum smart contracts. In \n30th USENIX Security Symposium (USENIX Security\u201921)\n.\n[143]\nJustin Sahs and Latifur Khan. 2012. A machine learning approach to Android malware detection. In \nEuropean Intelligence and Security Informatics Conference\n. IEEE, 141\u2013147.\n[144]\nNoama Fatima Samreen and Manar H. Alalfi. 2021. A survey of security vulnerabilities in Ethereum smart contracts. \nCoRR\n abs/2105.06974 (2021).\n[145]\nClara Schneidewind, Ilya Grishchenko, Markus Scherer, and Matteo Maffei. 2020. eThor: Practical and provably sound static analysis of Ethereum smart contracts. In \nACM SIGSAC Conference on Computer and Communications Security\n. 621\u2013640.\n[146]\nFranklin Schrans, Susan Eisenbach, and Sophia Drossopoulou. 2018. Writing safe smart contracts in Flint. In \n2nd International Conference on Art, Science, and Engineering of Programming\n. 218\u2013219.\n[147]\nCaspar Schwarz-Schilling, Joachim Neu, Barnab\u00e9 Monnot, Aditya Asgaonkar, Ertem Nusret Tas, and David Tse. 2022. Three attacks on proof-of-stake Ethereum. In \nFinancial Cryptography and Data Security: 26th International Conference on Financial Cryptography and Data Security\n. Springer, 560\u2013576.\n[149]\nAmritraj Singh, Reza M. Parizi, Qi Zhang, Kim-Kwang Raymond Choo, and Ali Dehghantanha. 2020. Blockchain smart contracts formalization: Approaches and challenges to address vulnerabilities. \nComput. Secur.\n 88 (2020), 101654.\n[150]\nSunbeom So, Seongjoon Hong, and Hakjoo Oh. 2021. SMARTEST: Effectively hunting vulnerable transaction sequences in smart contracts through language model-guided symbolic execution. In \n30th USENIX Security Symposium (USENIX Security\u201921)\n.\n[151]\nSunbeom So, Myungho Lee, Jisu Park, Heejo Lee, and Hakjoo Oh. 2020. VeriSmart: A highly precise safety verifier for Ethereum smart contracts. In \nIEEE Symposium on Security and Privacy (SP\u201920)\n. IEEE, 1678\u20131694.\n[152]\nJon Stephens, Kostas Ferles, Benjamin Mariano, Shuvendu Lahiri, and Isil Dillig. 2021. SmartPulse: Automated checking of temporal properties in smart contracts. In \nIEEE Symposium on Security and Privacy\n.\n[153]\nLiya Su, Xinyue Shen, Xiangyu Du, Xiaojing Liao, XiaoFeng Wang, Luyi Xing, and Baoxu Liu. 2021. Evil under the sun: Understanding and discovering attacks on Ethereum decentralized applications. In \n30th USENIX Security Symposium (USENIX Security\u201921)\n.\n[154]\nZhiyuan Sun, Xiapu Luo, and Yinqian Zhang. 2023. Panda: Security analysis of algorand smart contracts. In \nUSENIX Security Symposium\n.\n[155]\nNick Szabo. 1996. Smart contracts: Building blocks for digital markets. \nEXTROPY: J. Transhum. Thought\n 18, 16 (1996).\n[156]\nSergei Tikhomirov, Ekaterina Voskresenskaya, Ivan Ivanitskiy, Ramil Takhaviev, Evgeny Marchenko, and Yaroslav Alexandrov. 2018. SmartCheck: Static analysis of Ethereum smart contracts. In \n1st International Workshop on Emerging Trends in Software Engineering for Blockchain\n. 9\u201316.\n[157]\nPalina Tolmach, Yi Li, Shang-Wei Lin, Yang Liu, and Zengxiang Li. 2021. A survey of smart contract formal specification and verification. \nACM Comput. Surv.\n 54, 7 (2021), 1\u201338.\n[158]\nChristof Ferreira Torres, Julian Sch\u00fctte, and Radu State. 2018. Osiris: Hunting for integer bugs in Ethereum smart contracts. In \n34th Annual Computer Security Applications Conference\n. 664\u2013676.\n[159]\nChristof Ferreira Torres, Mathis Steichen et\u00a0al. 2019. The art of the scam: Demystifying honeypots in Ethereum smart contracts. In \n28th USENIX Security Symposium (USENIX Security\u201919)\n. 1591\u20131607.\n[160]\nPetar Tsankov, Andrei Dan, Dana Drachsler-Cohen, Arthur Gervais, Florian Buenzli, and Martin Vechev. 2018. Securify: Practical security analysis of smart contracts. In \nACM SIGSAC Conference on Computer and Communications Security\n. 67\u201382.\n[161]\nAnna Vacca, Andrea Di Sorbo, Corrado A. Visaggio, and Gerardo Canfora. 2021. A systematic literature review of blockchain and smart contract development: Techniques, tools, and open challenges. \nJ. Syst. Softw.\n 174 (2021), 110891. \nDOI:\n[162]\nZhiyuan Wan, Xin Xia, David Lo, Jiachi Chen, Xiapu Luo, and Xiaohu Yang. 2021. Smart contract security: A practitioners\u2019 perspective. In \nIEEE/ACM 43rd International Conference on Software Engineering (ICSE\u201921)\n. IEEE, 1410\u20131422.\n[163]\nAnqi Wang, Hao Wang, Bo Jiang, and Wing Kwong Chan. 2020. Artemis: An improved smart contract verification tool for vulnerability detection. In \n7th International Conference on Dependable Systems and Their Applications (DSA\u201920)\n. IEEE, 173\u2013181.\n[164]\nBin Wang, Han Liu, Chao Liu, Zhiqiang Yang, Qian Ren, Huixuan Zheng, and Hong Lei. 2021. BLOCKEYE: Hunting for DeFi attacks on blockchain. In \nIEEE/ACM 43rd International Conference on Software Engineering\n. IEEE, 17\u201320.\n[165]\nDong Wang, Bo Jiang, and W. K. Chan. 2020. WANA: Symbolic execution of WASM bytecode for cross-platform smart contract vulnerability detection. \narXiv preprint arXiv:2007.15510\n (2020).\n[166]\nHaijun Wang, Yi Li, Shang-Wei Lin, Lei Ma, and Yang Liu. 2019. VULTRON: Catching vulnerable smart contracts once and for all. In \nIEEE/ACM 41st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER\u201919)\n. IEEE, 1\u20134.\n[167]\nShuai Wang, Chengyu Zhang, and Zhendong Su. 2019. Detecting nondeterministic payment bugs in Ethereum smart contracts. \nProc. ACM Program. Lang.\n 3, OOPSLA (2019), 1\u201329.\n[168]\nWei Wang, Jingjing Song, Guangquan Xu, Yidong Li, Hao Wang, and Chunhua Su. 2020. ContractWard: Automated vulnerability detection models for Ethereum smart contracts. \nIEEE Trans. Netw. Sci. Eng.\n 47, 10 (2020).\n[169]\nYajing Wang, Jingsha He, Nafei Zhu, Yuzi Yi, Qingqing Zhang, Hongyu Song, and Ruixin Xue. 2021. Security enhancement technologies for smart contracts in the blockchain: A survey. \nTrans. Emerg. Telecommun. Technol.\n 32, 12 (2021), e4341. \nDOI:\n[170]\nYuepeng Wang, Shuvendu K. Lahiri, Shuo Chen, Rong Pan, Isil Dillig, Cody Born, Immad Naseer, and Kostas Ferles. 2019. Formal verification of workflow policies for smart contracts in Azure blockchain. In \nWorking Conference on Verified Software: Theories, Tools, and Experiments\n. Springer, 87\u2013106.\n[171]\nZeli Wang, Hai Jin, Weiqi Dai, Kim-Kwang Raymond Choo, and Deqing Zou. 2021. Ethereum smart contract security research: Survey and future research opportunities. \nFront. Comput. Sci.\n 15, 2 (2021), 1\u201318.\n[172]\nGavin Wood et\u00a0al. 2014. Ethereum: A secure decentralised generalised transaction ledger. \nEther. Proj. Yellow Pap.\n 151, 2014 (2014), 1\u201332.\n[173]\nLei Wu, Siwei Wu, Yajin Zhou, Runhuai Li, Zhi Wang, Xiapu Luo, Cong Wang, and Kui Ren. 2020. Time-Travel Investigation: Towards Building A Scalable Attack Detection Framework on Ethereum. \narXiv preprint arXiv:2005.08278\n[174]\nSiwei Wu, Dabao Wang, Jianting He, Yajin Zhou, Lei Wu, Xingliang Yuan, Qinming He, and Kui Ren. 2021. DeFiRanger: Detecting price manipulation attacks on DeFi applications. \narXiv preprint arXiv:2104.15068\n (2021).\n[175]\nValentin W\u00fcstholz and Maria Christakis. 2020. Harvey: A greybox fuzzer for smart contracts. In \n28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering\n. 1398\u20131409.\n[176]\nWentian Yan, Jianbo Gao, Zhenhao Wu, Yue Li, Zhi Guan, Qingshan Li, and Zhong Chen. 2020. Eshield: Protect smart contracts against reverse engineering. In \n29th ACM SIGSOFT International Symposium on Software Testing and Analysis\n. 553\u2013556.\n[177]\nZheng Yang and Hang Lei. 2020. Lolisa: Formal syntax and semantics for a subset of the solidity programming language in mathematical tool Coq. \nMathematical Problems in Engineering\n 2020 (2020), 1\u201315.\n[178]\nZhiqiang Yang, Han Liu, Yue Li, Huixuan Zheng, Lei Wang, and Bangdao Chen. 2020. Seraph: Enabling cross-platform security analysis for EVM and WASM smart contracts. In \nIEEE/ACM 42nd International Conference on Software Engineering\n. IEEE, 21\u201324.\n[179]\nJiaming Ye, Mingliang Ma, Yun Lin, Yulei Sui, and Yinxing Xue. 2020. Clairvoyance: Cross-contract static analysis for detecting practical reentrancy vulnerabilities in smart contracts. In \nIEEE/ACM 42nd International Conference on Software Engineering\n. IEEE, 274\u2013275.\n[180]\nXun Yi, Xuechao Yang, Andrei Kelarev, Kwok Lam, and Zahir Tari. 2022. \nBlockchain Foundations and Applications\n. Springer Nature.\n[181]\nMengya Zhang, Xiaokuan Zhang, Yinqian Zhang, and Zhiqiang Lin. 2020. TXSPECTOR: Uncovering attacks in Ethereum from transactions. In \n29th USENIX Security Symposium (USENIX Security\u201920)\n. 2775\u20132792.\n[182]\nPengcheng Zhang, Feng Xiao, and Xiapu Luo. 2019. SolidityCheck: Quickly detecting smart contract problems through regular expressions. \narXiv preprint arXiv:1911.09425\n (2019).\n[183]\nPengcheng Zhang, Feng Xiao, and Xiapu Luo. 2020. A framework and dataset for bugs in Ethereum smart contracts. In \nIEEE International Conference on Software Maintenance and Evolution (ICSME\u201920)\n. IEEE, 139\u2013150.\n[184]\nQingzhao Zhang, Yizhuo Wang, Juanru Li, and Siqi Ma. 2020. EthPloit: From fuzzing to efficient exploit generation against smart contracts. In \nIEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER\u201920)\n. IEEE, 116\u2013126.\n[185]\nWilliam Zhang, Sebastian Banescu, Leonardo Pasos, Steven Stewart, and Vijay Ganesh. 2019. Mpro: Combining static and symbolic analysis for scalable testing of smart contract. In \nIEEE 30th International Symposium on Software Reliability Engineering (ISSRE\u201919)\n. IEEE, 456\u2013462.\n[186]\nYuyao Zhang, Siqi Ma, Juanru Li, Kailai Li, Surya Nepal, and Dawu Gu. 2020. SmartShield: Automatic smart contract protection made easy. In \nIEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER\u201920)\n. IEEE, 23\u201334.\n[187]\nEnce Zhou, Song Hua, Bingfeng Pi, Jun Sun, Yashihide Nomura, Kazuhiro Yamashita, and Hidetoshi Kurihara. 2018. Security assurance for smart contract. In \n9th IFIP International Conference on New Technologies, Mobility and Security (NTMS\u201918)\n. IEEE, 1\u20135.\n[188]\nShunfan Zhou, Malte M\u00f6ser, Zhemin Yang, Ben Adida, Thorsten Holz, Jie Xiang, Steven Goldfeder, Yinzhi Cao, Martin Plattner, Xiaojun Qin et\u00a0al. 2020. An ever-evolving game: Evaluation of real-world attacks and defenses in Ethereum ecosystem. In \n29th USENIX Security Symposium (USENIX Security\u201920)\n. 2793\u20132810.\n[189]\nYi Zhou, Deepak Kumar, Surya Bakshi, Joshua Mason, Andrew Miller, and Michael Bailey. 2018. Erays: Reverse engineering Ethereum\u2019s opaque smart contracts. In \n27th USENIX Security Symposium (USENIX Security\u201918)\n. 1371\u20131385.\n[190]\nWeiqin Zou, David Lo, Pavneet Singh Kochhar, Xuan-Bach D. Le, Xin Xia, Yang Feng, Zhenyu Chen, and Baowen Xu. 2021. Smart contract development: Challenges and opportunities. \nIEEE Trans. Softw. Eng.\n 47, 10 (2021), 2084\u20132106. \nDOI:"
    }
}